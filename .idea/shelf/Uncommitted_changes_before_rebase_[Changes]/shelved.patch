Index: app/src/main/java/com/example/infits/WaterReminderFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\n\r\nimport android.app.AlarmManager;\r\nimport android.app.Dialog;\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.ImageView;\r\nimport android.widget.NumberPicker;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.timepicker.MaterialTimePicker;\r\nimport com.google.android.material.timepicker.TimeFormat;\r\n\r\npublic class WaterReminderFragment extends Fragment {\r\n\r\n    ImageView imgBack;\r\n    TextView fromTime, fromAmPm, toTime, toAmPm, remindEveryTime, remindEveryHM, remindTimes, remindTimesTV, remindOnceTime, remindOnceAmPm;\r\n    CheckBox remindEveryRB, remindTimesRB, remindOnceRB;\r\n    Button set, dismiss;\r\n\r\n    long pickedFromTime = 0L, pickedToTime = 0L, intervalTime = 0L, timesTime = 0L, remindOnceTimeMillis = 0L;\r\n    long millisInHour = 60 * 60 * 1000;\r\n    long millisInMinute = 60 * 1000;\r\n    long defaultInterval = 60 * 60 * 1000;\r\n    String[] hours, minutes, type, times;\r\n\r\n    AlarmManager alarmManager;\r\n    SharedPreferences sharedPreferences;\r\n\r\n    PendingIntent waterReceiverPendingIntent;\r\n\r\n    public WaterReminderFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_water_reminder, container, false);\r\n\r\n        hooks(view);\r\n        setFields();\r\n\r\n        millisInHour = 60 * 60 * 1000;\r\n        millisInMinute = 60 * 1000;\r\n\r\n        hours = new String[] {\r\n                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\",\r\n                \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\r\n                \"21\", \"22\", \"23\", \"24\"\r\n        };\r\n        minutes = new String[] {\"15\", \"30\", \"45\"};\r\n        type = new String[] {\"hours\", \"minutes\"};\r\n        times = new String[] {\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"};\r\n\r\n        sharedPreferences = requireActivity().getSharedPreferences(\"waterReminderPrefs\", Context.MODE_PRIVATE);\r\n\r\n        imgBack.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_waterReminderFragment_to_waterTrackerFragment));\r\n\r\n        fromTime.setOnClickListener(v -> timePickerFrom());\r\n        fromAmPm.setOnClickListener(v -> timePickerFrom());\r\n\r\n        toTime.setOnClickListener(v -> timePickerTo());\r\n        toAmPm.setOnClickListener(v -> timePickerTo());\r\n\r\n        remindEveryRB.setOnCheckedChangeListener((compoundButton, b) -> {\r\n            if(b) {\r\n                remindTimesRB.setChecked(false);\r\n\r\n                SharedPreferences.Editor editor = sharedPreferences.edit();\r\n                editor.putBoolean(\"remindEveryRB\", true);\r\n                editor.apply();\r\n            } else {\r\n                SharedPreferences.Editor editor = sharedPreferences.edit();\r\n                editor.putBoolean(\"remindEveryRB\", false);\r\n                editor.apply();\r\n            }\r\n        });\r\n\r\n        remindTimesRB.setOnCheckedChangeListener((compoundButton, b) -> {\r\n            if(b) {\r\n                remindEveryRB.setChecked(false);\r\n\r\n                SharedPreferences.Editor editor = sharedPreferences.edit();\r\n                editor.putBoolean(\"remindTimesRB\", true);\r\n                editor.apply();\r\n            } else {\r\n                SharedPreferences.Editor editor = sharedPreferences.edit();\r\n                editor.putBoolean(\"remindTimesRB\", false);\r\n                editor.apply();\r\n            }\r\n        });\r\n\r\n        remindOnceRB.setOnCheckedChangeListener(((compoundButton, b) -> {\r\n            if(b) {\r\n                SharedPreferences.Editor editor = sharedPreferences.edit();\r\n                editor.putBoolean(\"remindOnceRB\", true);\r\n                editor.apply();\r\n            } else {\r\n                SharedPreferences.Editor editor = sharedPreferences.edit();\r\n                editor.putBoolean(\"remindOnceRB\", false);\r\n                editor.apply();\r\n            }\r\n        }));\r\n\r\n        remindEveryTime.setOnClickListener(v -> showIntervalPicker());\r\n        remindEveryHM.setOnClickListener(v -> showIntervalPicker());\r\n\r\n        remindTimes.setOnClickListener(v -> showTimesPicker());\r\n        remindTimesTV.setOnClickListener(v -> showTimesPicker());\r\n\r\n        remindOnceTime.setOnClickListener(v -> showTimePickerOnce());\r\n        remindOnceAmPm.setOnClickListener(v -> showTimePickerOnce());\r\n\r\n        set.setOnClickListener(v -> {\r\n            if(pickedFromTime == 0L || pickedToTime == 0L) {\r\n                Toast.makeText(requireActivity(), \"Please select a time slot.\", Toast.LENGTH_LONG).show();\r\n            } else {\r\n                setAlarm();\r\n            }\r\n\r\n            if(remindOnceRB.isChecked()) setOnceAlarm();\r\n        });\r\n\r\n        dismiss.setOnClickListener(v -> cancelAlarm());\r\n\r\n        return view;\r\n    }\r\n\r\n    private void setOnceAlarm() {\r\n        createNotificationChannel();\r\n\r\n        alarmManager = (AlarmManager) requireActivity().getSystemService(Context.ALARM_SERVICE);\r\n\r\n        Intent waterReceiverIntent = new Intent(requireActivity(), NotificationReceiver.class);\r\n        waterReceiverIntent.putExtra(\"tracker\", \"water\");\r\n        PendingIntent waterReceiverPendingIntent = PendingIntent.getBroadcast(\r\n                requireActivity(), 0, waterReceiverIntent, PendingIntent.FLAG_IMMUTABLE\r\n        );\r\n\r\n        alarmManager.set(AlarmManager.RTC_WAKEUP, remindOnceTimeMillis, waterReceiverPendingIntent);\r\n        Log.d(\"setAlarm\", \"alarm set\");\r\n    }\r\n\r\n    private void setFields() {\r\n        SharedPreferences sharedPreferences = requireActivity().getSharedPreferences(\"waterReminderPrefs\", Context.MODE_PRIVATE);\r\n\r\n        fromTime.setText(sharedPreferences.getString(\"fromTime\", \"-:--\"));\r\n        fromAmPm.setText(sharedPreferences.getString(\"fromAmPm\", \"\"));\r\n        toTime.setText(sharedPreferences.getString(\"toTime\", \"-:--\"));\r\n        toAmPm.setText(sharedPreferences.getString(\"toAmPm\", \"\"));\r\n        remindEveryTime.setText(sharedPreferences.getString(\"remindEveryTime\", \"30\"));\r\n        remindEveryHM.setText(sharedPreferences.getString(\"remindEveryHM\", \"minutes\"));\r\n        remindTimes.setText(sharedPreferences.getString(\"remindTimes\", \"6\"));\r\n        remindOnceTime.setText(sharedPreferences.getString(\"remindOnceTime\", \"10:30\"));\r\n        remindOnceAmPm.setText(sharedPreferences.getString(\"remindOnceAmPm\", \"AM\"));\r\n        remindEveryRB.setChecked(sharedPreferences.getBoolean(\"remindEveryRB\", false));\r\n        remindTimesRB.setChecked(sharedPreferences.getBoolean(\"remindTimesRB\", false));\r\n        remindOnceRB.setChecked(sharedPreferences.getBoolean(\"remindOnceRB\", false));\r\n    }\r\n\r\n    private void setAlarm() {\r\n        long alarmInterval = defaultInterval;\r\n\r\n        if(remindEveryRB.isChecked()) alarmInterval = intervalTime;\r\n        else if(remindTimesRB.isChecked()) alarmInterval = timesTime;\r\n\r\n        // set alarm\r\n        createNotificationChannel();\r\n\r\n        alarmManager = (AlarmManager) requireActivity().getSystemService(Context.ALARM_SERVICE);\r\n\r\n        Intent waterReceiverIntent = new Intent(requireActivity(), NotificationReceiver.class);\r\n        waterReceiverIntent.putExtra(\"tracker\", \"water\");\r\n\r\n        waterReceiverPendingIntent = PendingIntent.getBroadcast(\r\n                requireActivity(), 0, waterReceiverIntent, PendingIntent.FLAG_IMMUTABLE\r\n        );\r\n\r\n        alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, pickedFromTime, alarmInterval, waterReceiverPendingIntent);\r\n        Toast.makeText(requireActivity(), \"Reminder Set\", Toast.LENGTH_LONG).show();\r\n\r\n        setCancelAlarm();\r\n    }\r\n\r\n    private void setCancelAlarm() {\r\n        if(alarmManager == null) {\r\n            alarmManager = (AlarmManager) requireActivity().getSystemService(Context.ALARM_SERVICE);\r\n        }\r\n\r\n        alarmManager.set(AlarmManager.RTC_WAKEUP, pickedToTime, waterReceiverPendingIntent);\r\n        Toast.makeText(requireActivity(), \"Reminder Dismissed\", Toast.LENGTH_LONG).show();\r\n    }\r\n\r\n    private void cancelAlarm() {\r\n        if(alarmManager == null) {\r\n            alarmManager = (AlarmManager) requireActivity().getSystemService(Context.ALARM_SERVICE);\r\n        }\r\n\r\n        alarmManager.cancel(waterReceiverPendingIntent);\r\n        Toast.makeText(requireContext(), \"Alarm Dismissed\", Toast.LENGTH_LONG).show();\r\n    }\r\n\r\n    private void showTimePickerOnce() {\r\n        MaterialTimePicker timePicker = new MaterialTimePicker.Builder()\r\n                .setTitleText(\"SELECT REMINDER TIMING\")\r\n                .setHour(12)\r\n                .setMinute(10)\r\n                .setTimeFormat(TimeFormat.CLOCK_12H)\r\n                .setTheme(R.style.TimePickerWater)\r\n                .build();\r\n\r\n        timePicker.show(requireActivity().getSupportFragmentManager(), \"Reminder\");\r\n\r\n        timePicker.addOnPositiveButtonClickListener(view -> {\r\n            int pickedHour = timePicker.getHour();\r\n            int pickedMinute = timePicker.getMinute();\r\n\r\n            long millisInHour = 60 * 60 * 1000;\r\n            long millisInMinute = 60 * 1000;\r\n            remindOnceTimeMillis = pickedHour * millisInHour + pickedMinute * millisInMinute;\r\n\r\n            setTextFieldsOnce(pickedHour, pickedMinute);\r\n        });\r\n    }\r\n\r\n    private void setTextFieldsOnce(int pickedHour, int pickedMinute) {\r\n        String timeText = \"\", amPm = \"AM\";\r\n\r\n        if(pickedHour > 12) {\r\n            pickedHour -= 12;\r\n            amPm = \"PM\";\r\n        }\r\n        if(pickedHour == 12) amPm = \"PM\";\r\n\r\n        timeText = pickedHour + \":\";\r\n        if(pickedMinute < 10) {\r\n            timeText += \"0\" + pickedMinute;\r\n        } else {\r\n            timeText += pickedMinute;\r\n        }\r\n\r\n        remindOnceTime.setText(timeText);\r\n        remindOnceAmPm.setText(amPm);\r\n\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"remindOnceTime\", timeText);\r\n        editor.putString(\"remindOnceAmPm\", amPm);\r\n        editor.apply();\r\n    }\r\n\r\n    private void showTimesPicker() {\r\n        Dialog dialog = new Dialog(requireActivity());\r\n        dialog.setContentView(R.layout.times_picker);\r\n        dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n        NumberPicker timesPicker = dialog.findViewById(R.id.times);\r\n        Button ok = dialog.findViewById(R.id.ok);\r\n\r\n\r\n        timesPicker.setMinValue(0);\r\n        timesPicker.setMaxValue(times.length - 1);\r\n        timesPicker.setDisplayedValues(times);\r\n\r\n        ok.setOnClickListener(v -> {\r\n            SharedPreferences.Editor editor = sharedPreferences.edit();\r\n\r\n            remindTimes.setText(times[timesPicker.getValue()]);\r\n            editor.putString(\"remindTimes\", times[timesPicker.getValue()]);\r\n\r\n            timesTime = (pickedToTime - pickedFromTime) / Integer.parseInt(times[timesPicker.getValue()]);\r\n\r\n            dialog.dismiss();\r\n            editor.apply();\r\n        });\r\n\r\n        dialog.show();\r\n    }\r\n\r\n    private void showIntervalPicker() {\r\n        Dialog dialog = new Dialog(requireActivity());\r\n        dialog.setContentView(R.layout.interval_picker);\r\n        dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n        NumberPicker intervalPicker = dialog.findViewById(R.id.interval);\r\n        NumberPicker typePicker = dialog.findViewById(R.id.type);\r\n        Button ok = dialog.findViewById(R.id.ok);\r\n\r\n        intervalPicker.setMinValue(0);\r\n        intervalPicker.setMaxValue(hours.length - 1);\r\n        intervalPicker.setDisplayedValues(hours);\r\n\r\n        typePicker.setMinValue(0);\r\n        typePicker.setMaxValue(type.length - 1);\r\n        typePicker.setDisplayedValues(type);\r\n\r\n        typePicker.setOnValueChangedListener((numberPicker, i, i1) -> {\r\n            if(typePicker.getValue() == 0) {\r\n                intervalPicker.setDisplayedValues(null);\r\n                intervalPicker.setMinValue(0);\r\n                intervalPicker.setMaxValue(hours.length - 1);\r\n                intervalPicker.setDisplayedValues(hours);\r\n            } else {\r\n                intervalPicker.setDisplayedValues(null);\r\n                intervalPicker.setMinValue(0);\r\n                intervalPicker.setMaxValue(minutes.length - 1);\r\n                intervalPicker.setDisplayedValues(minutes);\r\n            }\r\n        });\r\n\r\n        ok.setOnClickListener(it -> {\r\n            SharedPreferences.Editor editor = sharedPreferences.edit();\r\n\r\n            remindEveryHM.setText(type[typePicker.getValue()]);\r\n            editor.putString(\"remindEveryHM\", type[typePicker.getValue()]);\r\n\r\n            if(typePicker.getValue() == 0) {\r\n                remindEveryTime.setText(hours[intervalPicker.getValue()]);\r\n                editor.putString(\"remindEveryTime\", hours[intervalPicker.getValue()]);\r\n                intervalTime = Integer.parseInt(hours[intervalPicker.getValue()]) * millisInHour;\r\n            }\r\n            else {\r\n                remindEveryTime.setText(minutes[intervalPicker.getValue()]);\r\n                editor.putString(\"remindEveryTime\", minutes[intervalPicker.getValue()]);\r\n                intervalTime = Integer.parseInt(minutes[intervalPicker.getValue()]) * millisInMinute;\r\n            }\r\n            System.out.println(\"interval: \" + intervalTime);\r\n            dialog.dismiss();\r\n            editor.apply();\r\n        });\r\n\r\n        dialog.show();\r\n    }\r\n\r\n    private void timePickerTo() {\r\n        MaterialTimePicker timePicker = new MaterialTimePicker.Builder()\r\n                .setTitleText(\"SELECT REMINDER TIMING\")\r\n                .setHour(12)\r\n                .setMinute(10)\r\n                .setTimeFormat(TimeFormat.CLOCK_12H)\r\n                .setTheme(R.style.TimePickerWater)\r\n                .build();\r\n\r\n        timePicker.show(requireActivity().getSupportFragmentManager(), \"Reminder\");\r\n\r\n        timePicker.addOnPositiveButtonClickListener(view -> {\r\n            int pickedHour = timePicker.getHour();\r\n            int pickedMinute = timePicker.getMinute();\r\n\r\n            pickedToTime = pickedHour * millisInHour + pickedMinute * millisInMinute;\r\n\r\n            setTextFieldsTo(pickedHour, pickedMinute);\r\n        });\r\n    }\r\n\r\n    private void setTextFieldsTo(int pickedHour, int pickedMinute) {\r\n        String timeText = \"\", amPm = \"AM\";\r\n\r\n        if(pickedHour > 12) {\r\n            pickedHour -= 12;\r\n            amPm = \"PM\";\r\n        }\r\n        if(pickedHour == 12) amPm = \"PM\";\r\n\r\n        timeText = pickedHour + \":\";\r\n        if(pickedMinute < 10) {\r\n            timeText += \"0\" + pickedMinute;\r\n        } else {\r\n            timeText += pickedMinute;\r\n        }\r\n\r\n        toTime.setText(timeText);\r\n        toAmPm.setText(amPm);\r\n\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"toTime\", timeText);\r\n        editor.putString(\"toAmPm\", amPm);\r\n        editor.apply();\r\n    }\r\n\r\n    private void timePickerFrom() {\r\n        MaterialTimePicker timePicker = new MaterialTimePicker.Builder()\r\n                .setTitleText(\"SELECT REMINDER TIMING\")\r\n                .setHour(12)\r\n                .setMinute(10)\r\n                .setTimeFormat(TimeFormat.CLOCK_12H)\r\n                .setTheme(R.style.TimePickerWater)\r\n                .build();\r\n\r\n        timePicker.show(requireActivity().getSupportFragmentManager(), \"Reminder\");\r\n\r\n        timePicker.addOnPositiveButtonClickListener(view -> {\r\n            int pickedHour = timePicker.getHour();\r\n            int pickedMinute = timePicker.getMinute();\r\n\r\n            long millisInHour = 60 * 60 * 1000;\r\n            long millisInMinute = 60 * 1000;\r\n            pickedFromTime = pickedHour * millisInHour + pickedMinute * millisInMinute;\r\n\r\n            setTextFieldsFrom(pickedHour, pickedMinute);\r\n        });\r\n    }\r\n\r\n    private void setTextFieldsFrom(int pickedHour, int pickedMinute) {\r\n        String timeText = \"\", amPm = \"AM\";\r\n\r\n        if(pickedHour > 12) {\r\n            pickedHour -= 12;\r\n            amPm = \"PM\";\r\n        }\r\n        if(pickedHour == 12) amPm = \"PM\";\r\n\r\n        timeText = pickedHour + \":\";\r\n        if(pickedMinute < 10) {\r\n            timeText += \"0\" + pickedMinute;\r\n        } else {\r\n            timeText += pickedMinute;\r\n        }\r\n\r\n        fromTime.setText(timeText);\r\n        fromAmPm.setText(amPm);\r\n\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"fromTime\", timeText);\r\n        editor.putString(\"fromAmPm\", amPm);\r\n        editor.apply();\r\n    }\r\n\r\n    private void createNotificationChannel() {\r\n        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            NotificationChannel channel = new NotificationChannel(\"WaterChannelId\", \"Water Reminder\", NotificationManager.IMPORTANCE_HIGH);\r\n            NotificationManager manager = requireActivity().getSystemService(NotificationManager.class);\r\n            manager.createNotificationChannel(channel);\r\n        }\r\n    }\r\n\r\n    private void hooks(View view) {\r\n        imgBack = view.findViewById(R.id.img_back);\r\n        fromTime = view.findViewById(R.id.from);\r\n        fromAmPm = view.findViewById(R.id.fromAmPm);\r\n        toTime = view.findViewById(R.id.to);\r\n        toAmPm = view.findViewById(R.id.toAmPm);\r\n        remindEveryTime = view.findViewById(R.id.remind_every_time);\r\n        remindEveryHM = view.findViewById(R.id.remind_every_timeHM);\r\n        remindTimes = view.findViewById(R.id.remindTimes);\r\n        remindTimesTV = view.findViewById(R.id.remindTimesTV);\r\n        remindOnceTime = view.findViewById(R.id.remind_once_time);\r\n        remindOnceAmPm = view.findViewById(R.id.remind_once_time_am_pm);\r\n        remindOnceRB = view.findViewById(R.id.remind_once_check);\r\n        remindEveryRB = view.findViewById(R.id.remind_every_check);\r\n        remindTimesRB = view.findViewById(R.id.remind_times_check);\r\n        dismiss = view.findViewById(R.id.dismiss);\r\n        set = view.findViewById(R.id.set);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/WaterReminderFragment.java b/app/src/main/java/com/example/infits/WaterReminderFragment.java
--- a/app/src/main/java/com/example/infits/WaterReminderFragment.java	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/java/com/example/infits/WaterReminderFragment.java	(date 1698749413913)
@@ -20,6 +20,7 @@
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.CheckBox;
+import android.widget.CompoundButton;
 import android.widget.ImageView;
 import android.widget.NumberPicker;
 import android.widget.TextView;
@@ -28,14 +29,17 @@
 import com.google.android.material.timepicker.MaterialTimePicker;
 import com.google.android.material.timepicker.TimeFormat;
 
+import org.joda.time.LocalDateTime;
+
 public class WaterReminderFragment extends Fragment {
 
     ImageView imgBack;
     TextView fromTime, fromAmPm, toTime, toAmPm, remindEveryTime, remindEveryHM, remindTimes, remindTimesTV, remindOnceTime, remindOnceAmPm;
     CheckBox remindEveryRB, remindTimesRB, remindOnceRB;
     Button set, dismiss;
+    long timeDiff=0L;
 
-    long pickedFromTime = 0L, pickedToTime = 0L, intervalTime = 0L, timesTime = 0L, remindOnceTimeMillis = 0L;
+    long pickedFromTime = 0L, pickedToTime = 0L, intervalTime = 0L, timesTime = 0L, remindOnceTimeMillis = 0L,remindsTime=1L;
     long millisInHour = 60 * 60 * 1000;
     long millisInMinute = 60 * 1000;
     long defaultInterval = 60 * 60 * 1000;
@@ -54,10 +58,11 @@
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         View view = inflater.inflate(R.layout.fragment_water_reminder, container, false);
-
         hooks(view);
         setFields();
 
+        Log.i("val of to and from", "onCreateView: from="+pickedFromTime+" to="+pickedToTime+" and diff is"+(pickedToTime-pickedFromTime));
+        Toast.makeText(getContext(), "onCreateView: from="+pickedFromTime+" to="+pickedToTime, Toast.LENGTH_SHORT).show();
         millisInHour = 60 * 60 * 1000;
         millisInMinute = 60 * 1000;
 
@@ -82,7 +87,7 @@
 
         remindEveryRB.setOnCheckedChangeListener((compoundButton, b) -> {
             if(b) {
-                remindTimesRB.setChecked(false);
+                // remindTimesRB.setChecked(false);
 
                 SharedPreferences.Editor editor = sharedPreferences.edit();
                 editor.putBoolean("remindEveryRB", true);
@@ -96,8 +101,8 @@
 
         remindTimesRB.setOnCheckedChangeListener((compoundButton, b) -> {
             if(b) {
-                remindEveryRB.setChecked(false);
-
+                //remindEveryRB.setChecked(false);
+                // setAlarm();
                 SharedPreferences.Editor editor = sharedPreferences.edit();
                 editor.putBoolean("remindTimesRB", true);
                 editor.apply();
@@ -130,32 +135,95 @@
         remindOnceAmPm.setOnClickListener(v -> showTimePickerOnce());
 
         set.setOnClickListener(v -> {
+            //setting reminder alarm
+            if(!remindOnceRB.isChecked()) {
+                setCancelAlarm();
+            }else {
+                if (timeDiff != 0L)   setOnceAlarm(timeDiff);
+            }
+
             if(pickedFromTime == 0L || pickedToTime == 0L) {
                 Toast.makeText(requireActivity(), "Please select a time slot.", Toast.LENGTH_LONG).show();
-            } else {
-                setAlarm();
+            } else if(remindEveryRB.isChecked()){
+                if(remindTimesRB.isChecked()){
+                    WaterAlarmScheduler scheduler = new WaterAlarmScheduler();
+                    scheduler.setAlarm(getContext(),pickedFromTime,pickedToTime,intervalTime,remindsTime);
+                    Navigation.findNavController(v).navigate(R.id.action_waterReminderFragment_to_waterTrackerFragment);
+
+                }else {
+                    WaterAlarmScheduler scheduler = new WaterAlarmScheduler();
+                    scheduler.setAlarm(getContext(),pickedFromTime,pickedToTime,intervalTime,0);
+                    Navigation.findNavController(v).navigate(R.id.action_waterReminderFragment_to_waterTrackerFragment);
+                }
+            }else {
+                if(remindTimesRB.isChecked()) {
+                    Toast.makeText(getContext(), "Please select time interval", Toast.LENGTH_SHORT).show();
+                }else {
+                    WaterAlarmScheduler scheduler = new WaterAlarmScheduler();
+                    scheduler.cancelAlarm(getContext());
+                    Navigation.findNavController(v).navigate(R.id.action_waterReminderFragment_to_waterTrackerFragment);
+                }
             }
+
+        });
+
+        remindOnceRB.setOnCheckedChangeListener((buttonView, isChecked) -> {
+            if(isChecked){
+
+                //Toast.makeText(getContext(), "set", Toast.LENGTH_SHORT).show();
+                long pickedHour = (long) sharedPreferences.getFloat("remindOnceHr",23);
+                long pickedMinute = (long) sharedPreferences.getFloat("remindOnceMin",0);
+                String isAmPm = sharedPreferences.getString("remindOnceAmPm","AM");
+
+                if(isAmPm.equals("PM")){
+                    pickedHour +=12;
+                }
 
-            if(remindOnceRB.isChecked()) setOnceAlarm();
+                Toast.makeText(getContext(), "time :" +pickedHour+" : "+pickedMinute, Toast.LENGTH_SHORT).show();
+                long millisInHour = 60 * 60 * 1000;
+                long millisInMinute = 60 * 1000;
+
+                long timeInMillis =  pickedHour * millisInHour + pickedMinute * millisInMinute;
+
+                long currentMillisOfDay = LocalDateTime.now().getMillisOfDay();
+
+
+                if(timeInMillis<currentMillisOfDay){
+                    timeDiff= currentMillisOfDay-timeInMillis;
+                    timeDiff = 24*3600*1000 - timeDiff;
+                    Toast.makeText(getActivity(), "time : "+timeDiff/1000, Toast.LENGTH_SHORT).show();
+                    setOnceAlarm(timeDiff);
+                }else {
+                    timeDiff = (timeInMillis-currentMillisOfDay);
+                    Toast.makeText(getActivity(),String.valueOf(timeDiff/1000), Toast.LENGTH_SHORT).show();
+                    setOnceAlarm(timeDiff);
+                }
+                SharedPreferences.Editor editor = sharedPreferences.edit();
+                editor.putFloat("timeDiffOnce",timeDiff);
+                editor.apply();
+            }
         });
 
-        dismiss.setOnClickListener(v -> cancelAlarm());
+        dismiss.setOnClickListener(v -> {
+            WaterAlarmScheduler scheduler = new WaterAlarmScheduler();
+            scheduler.cancelAlarm(getContext());
+            setCancelAlarm();
+            Navigation.findNavController(v).navigate(R.id.action_waterReminderFragment_to_waterTrackerFragment);
+        });
 
         return view;
     }
-
-    private void setOnceAlarm() {
+    private void setOnceAlarm(long timDiff) {
         createNotificationChannel();
+        long timeForNotify = timDiff + System.currentTimeMillis();
 
         alarmManager = (AlarmManager) requireActivity().getSystemService(Context.ALARM_SERVICE);
-
-        Intent waterReceiverIntent = new Intent(requireActivity(), NotificationReceiver.class);
+        Intent waterReceiverIntent = new Intent(requireActivity(),NotificationReceiver.class );
         waterReceiverIntent.putExtra("tracker", "water");
         PendingIntent waterReceiverPendingIntent = PendingIntent.getBroadcast(
-                requireActivity(), 0, waterReceiverIntent, PendingIntent.FLAG_IMMUTABLE
-        );
+                requireActivity(), 1000, waterReceiverIntent, PendingIntent.FLAG_IMMUTABLE);
 
-        alarmManager.set(AlarmManager.RTC_WAKEUP, remindOnceTimeMillis, waterReceiverPendingIntent);
+        alarmManager.set(AlarmManager.RTC_WAKEUP, timeForNotify, waterReceiverPendingIntent);
         Log.d("setAlarm", "alarm set");
     }
 
@@ -174,6 +242,14 @@
         remindEveryRB.setChecked(sharedPreferences.getBoolean("remindEveryRB", false));
         remindTimesRB.setChecked(sharedPreferences.getBoolean("remindTimesRB", false));
         remindOnceRB.setChecked(sharedPreferences.getBoolean("remindOnceRB", false));
+
+        pickedFromTime = (long) sharedPreferences.getFloat("pickedTimeFrom",0L);
+        pickedToTime = (long) sharedPreferences.getFloat("pickedTimeTo",0L);
+        intervalTime = (long) sharedPreferences.getFloat( "intervalTime",0L);
+        remindsTime = Long.parseLong(sharedPreferences.getString("remindTimes","1"));
+
+        timeDiff = (long) sharedPreferences.getFloat("timeDiffOnce",0L);
+
     }
 
     private void setAlarm() {
@@ -205,7 +281,13 @@
             alarmManager = (AlarmManager) requireActivity().getSystemService(Context.ALARM_SERVICE);
         }
 
-        alarmManager.set(AlarmManager.RTC_WAKEUP, pickedToTime, waterReceiverPendingIntent);
+        Intent waterReceiverIntent = new Intent(requireActivity(), NotificationReceiver.class);
+        waterReceiverIntent.putExtra("tracker", "water");
+
+        waterReceiverPendingIntent = PendingIntent.getBroadcast(
+                requireActivity(), 1000, waterReceiverIntent, PendingIntent.FLAG_IMMUTABLE
+        );
+        alarmManager.cancel(waterReceiverPendingIntent);
         Toast.makeText(requireActivity(), "Reminder Dismissed", Toast.LENGTH_LONG).show();
     }
 
@@ -237,6 +319,28 @@
             long millisInMinute = 60 * 1000;
             remindOnceTimeMillis = pickedHour * millisInHour + pickedMinute * millisInMinute;
 
+            long timeInMillis =  pickedHour * millisInHour + pickedMinute * millisInMinute;
+
+            long currentMillisOfDay = LocalDateTime.now().getMillisOfDay();
+
+
+            if(remindOnceRB.isChecked()){
+                if(timeInMillis<currentMillisOfDay){
+                    timeDiff= currentMillisOfDay-timeInMillis;
+                    timeDiff = 24*3600*1000 - timeDiff;
+                    Toast.makeText(getActivity(), "time : "+timeDiff/1000, Toast.LENGTH_SHORT).show();
+                    setOnceAlarm(timeDiff);
+                }else {
+                    timeDiff = (timeInMillis-currentMillisOfDay);
+                    Toast.makeText(getActivity(),String.valueOf(timeDiff/1000), Toast.LENGTH_SHORT).show();
+                    setOnceAlarm(timeDiff);
+                }
+            }
+
+            SharedPreferences.Editor editor = sharedPreferences.edit();
+            editor.putFloat("timeDiffOnce",timeDiff);
+            editor.apply();
+
             setTextFieldsOnce(pickedHour, pickedMinute);
         });
     }
@@ -263,6 +367,8 @@
         SharedPreferences.Editor editor = sharedPreferences.edit();
         editor.putString("remindOnceTime", timeText);
         editor.putString("remindOnceAmPm", amPm);
+        editor.putFloat("remindOnceHr",pickedHour);
+        editor.putFloat("remindOnceMin",pickedMinute);
         editor.apply();
     }
 
@@ -284,8 +390,9 @@
 
             remindTimes.setText(times[timesPicker.getValue()]);
             editor.putString("remindTimes", times[timesPicker.getValue()]);
-
-            timesTime = (pickedToTime - pickedFromTime) / Integer.parseInt(times[timesPicker.getValue()]);
+            remindsTime = Long.parseLong(times[timesPicker.getValue()]);
+            Toast.makeText(getContext(), "time "+times[timesPicker.getValue()], Toast.LENGTH_SHORT).show();
+            // timesTime = (pickedToTime - pickedFromTime) / Integer.parseInt(times[timesPicker.getValue()]);
 
             dialog.dismiss();
             editor.apply();
@@ -335,15 +442,20 @@
                 remindEveryTime.setText(hours[intervalPicker.getValue()]);
                 editor.putString("remindEveryTime", hours[intervalPicker.getValue()]);
                 intervalTime = Integer.parseInt(hours[intervalPicker.getValue()]) * millisInHour;
+                Toast.makeText(getContext(), "interval time "+intervalTime, Toast.LENGTH_SHORT).show();
+                editor.putFloat("intervalTime",intervalTime);
             }
             else {
                 remindEveryTime.setText(minutes[intervalPicker.getValue()]);
                 editor.putString("remindEveryTime", minutes[intervalPicker.getValue()]);
                 intervalTime = Integer.parseInt(minutes[intervalPicker.getValue()]) * millisInMinute;
+                Toast.makeText(getContext(), "interval time "+intervalTime, Toast.LENGTH_SHORT).show();
+                editor.putFloat("intervalTime",intervalTime);
             }
             System.out.println("interval: " + intervalTime);
             dialog.dismiss();
             editor.apply();
+            //
         });
 
         dialog.show();
@@ -365,7 +477,9 @@
             int pickedMinute = timePicker.getMinute();
 
             pickedToTime = pickedHour * millisInHour + pickedMinute * millisInMinute;
-
+            SharedPreferences.Editor editor = sharedPreferences.edit();
+            editor.putFloat("pickedTimeTo",pickedToTime);
+            editor.apply();
             setTextFieldsTo(pickedHour, pickedMinute);
         });
     }
@@ -414,6 +528,10 @@
             long millisInMinute = 60 * 1000;
             pickedFromTime = pickedHour * millisInHour + pickedMinute * millisInMinute;
 
+            SharedPreferences.Editor editor = sharedPreferences.edit();
+            editor.putFloat("pickedTimeFrom",pickedFromTime);
+            editor.apply();
+            Log.i("TAG", "timePickerFrom: value set");
             setTextFieldsFrom(pickedHour, pickedMinute);
         });
     }
Index: app/src/main/res/values/style.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n\r\n    <style name=\"account_edt_views\">\r\n        <item name=\"android:layout_width\">200dp</item>\r\n        <item name=\"android:layout_height\">35dp</item>\r\n        <item name=\"android:background\">@drawable/edit_text_background</item>\r\n        <item name=\"android:fontFamily\">@font/nats_regular</item>\r\n        <item name=\"android:layout_marginTop\">2dp</item>\r\n        <item name=\"android:layout_marginBottom\">10dp</item>\r\n        <item name=\"android:paddingHorizontal\">10dp</item>\r\n        <item name=\"text_size\">14sp</item>\r\n    </style>\r\n\r\n    <style name=\"account_edt_views1\">\r\n        <item name=\"android:layout_width\">200dp</item>\r\n        <item name=\"android:layout_height\">400dp</item>\r\n        <item name=\"android:background\">@drawable/textboxing</item>\r\n        <item name=\"android:fontFamily\">@font/nats_regular</item>\r\n        <item name=\"android:layout_marginTop\">2dp</item>\r\n        <item name=\"android:layout_marginBottom\">10dp</item>\r\n        <item name=\"android:paddingHorizontal\">10dp</item>\r\n        <item name=\"text_size\">18sp</item>\r\n    </style>\r\n\r\n    <style name=\"account_txt_views\">\r\n        <item name=\"android:fontFamily\">@font/nats_regular</item>\r\n        <item name=\"android:textColor\">#6A6A6A</item>\r\n        <item name=\"android:textSize\">14sp</item>\r\n    </style>\r\n\r\n    <style name=\"CustomCalendarMonth\" parent=\"AppTheme\">\r\n        <item name=\"android:textColorPrimary\">@color/orange</item>\r\n        <item name=\"fontFamily\">@font/baloo2</item>\r\n    </style>\r\n\r\n    <style name=\"CustomCalendarWeek\" parent=\"TextAppearance.MaterialComponents.Caption\">\r\n        <item name=\"android:textColor\">@color/weightgreen</item>\r\n    </style>\r\n\r\n    <style name=\"diet_chart_week_style\">\r\n        <item name=\"android:layout_width\">0dp</item>\r\n        <item name=\"android:layout_height\">match_parent</item>\r\n        <item name=\"android:textSize\">16sp</item>\r\n        <item name=\"android:fontFamily\">@font/baloo2</item>\r\n        <item name=\"android:layout_weight\">1</item>\r\n        <item name=\"android:textColor\">#6F81F8</item>\r\n        <item name=\"android:textStyle\">bold</item>\r\n        <item name=\"android:gravity\">center</item>\r\n    </style>\r\n\r\n    <style name=\"details_title\">\r\n        <item name=\"android:layout_width\">wrap_content</item>\r\n        <item name=\"android:layout_height\">wrap_content</item>\r\n        <item name=\"android:layout_marginHorizontal\">25dp</item>\r\n        <item name=\"android:layout_marginTop\">5dp</item>\r\n        <item name=\"android:textSize\">24sp</item>\r\n        <item name=\"android:fontFamily\">@font/nats_regular</item>\r\n        <item name=\"android:textColor\">@color/black</item>\r\n    </style>\r\n    <style name=\"food_spacing\">\r\n        <item name=\"android:layout_width\">match_parent</item>\r\n        <item name=\"android:layout_height\">wrap_content</item>\r\n        <item name=\"android:fontFamily\">@font/nats_regular</item>\r\n        <item name=\"android:layout_marginHorizontal\">25dp</item>\r\n        <item name=\"android:lineHeight\">20dp</item>\r\n    </style>\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/style.xml b/app/src/main/res/values/style.xml
--- a/app/src/main/res/values/style.xml	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/res/values/style.xml	(date 1699865378267)
@@ -66,4 +66,6 @@
         <item name="android:lineHeight">20dp</item>
     </style>
 
+
+
 </resources>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2aac381d-1e75-4f05-95d2-1f36e0826556\" name=\"Changes\" comment=\"MealtrackerTodays_Breakfast.java-modified\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gitignore\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/app/Infits.app.androidTest.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules/app/Infits.app.androidTest.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/app/Infits.app.main.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules/app/Infits.app.main.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/app/Infits.app.unitTest.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules/app/Infits.app.unitTest.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/navEditor.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/navEditor.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_24-07-2023_10_01_pm__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_24-07-2023_10_01_pm__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-07-2023_09_38_pm_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-07-2023_09_38_pm__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-07-2023_09_41_pm_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-07-2023_09_41_pm__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/build.gradle\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/build.gradle\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/androidTest/java/com/example/infits/ExampleInstrumentedTest.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/CalorieTrackerFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/CalorieTrackerFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardMain.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardMain.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DataFromDatabase.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/DataFromDatabase.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/EditProfile.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/EditProfile.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/EnterFoodDetails.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/EnterFoodDetails.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/FetchTrackerInfos.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/FetchTrackerInfos.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/FragmentTodays_BreakFast.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/FragmentTodays_BreakFast.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/Login.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/Login.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/Signup.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/Signup.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/Statistics.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/Statistics.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/StepsFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/StepsFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterTrackerFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterTrackerFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/WeightFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/WeightFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/activitySecondFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/activitySecondFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/activityTracker2.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/activityTracker2.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/activityfourthfragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/activityfourthfragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/activitythirdfragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/activitythirdfragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/caloriesetgoalFragment.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/caloriesetgoalFragment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/cycling_frag2.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/cycling_frag2.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/diet_fourth.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/diet_fourth.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/mealInfoWithPhoto.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/mealInfoWithPhoto.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/walking_frag2.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/example/infits/walking_frag2.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_activity_tracker2.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_activity_tracker2.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_activityfourthfragment.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_activityfourthfragment.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_activitythirdfragment.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_activitythirdfragment.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_caloriesetgoal.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_caloriesetgoal.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_overview.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_overview.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/navigation/trackers_graph.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/navigation/trackers_graph.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/test/java/com/example/infits/ExampleUnitTest.java\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[BE5TDEROPNWKS4WC]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$/app\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Infits\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Infits\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Infits\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Infits\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n                <item name=\"other\" type=\"c8890929:TasksNode$1\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"resourceFile\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"navigationResourceFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2SZdxqVpDNjD8yULKFzrqaMJSUE\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollFromSource\" value=\"true\" />\r\n    <option name=\"autoscrollToSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Git.Branch.Popup.ShowAllRemotes&quot;: &quot;true&quot;,\r\n    &quot;PROJECT_TRUSTED_KEY&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;ScreenshotViewer.SavePath&quot;: &quot;E:/INFITS PROJECTS/Screenshots&quot;,\r\n    &quot;android-custom-viewC:/Users/devab/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment/1.5.4/5404b0f8aeccb2fe882bee99ef8843711c01c156/fragment-1.5.4-sources.jar!/androidx/fragment/app/FragmentContainerView.kt_SELECTED&quot;: &quot;FragmentContainerView&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;com.android.tools.idea.devicemanager.tab&quot;: &quot;Physical&quot;,\r\n    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,\r\n    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,\r\n    &quot;full.screen.before.presentation.mode&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;devabrath&quot;,\r\n    &quot;last_directory_selection&quot;: &quot;E:/internship/INFITS_CLIENT_APP/app/src/main/res/drawable&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;E:/INFITS PROJECTS/INFITS_CLIENT_APP&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Suggestions&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.17&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.folding&quot;,\r\n    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;\r\n  }\r\n}</component>\r\n  <component name=\"PsdUISettings\">\r\n    <option name=\"MODULE_TAB\" value=\"Properties\" />\r\n    <option name=\"LAST_EDITED_SIGNING_CONFIG\" value=\"debug\" />\r\n    <option name=\"LAST_EDITED_BUILD_TYPE\" value=\"release\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\INFITS PROJECTS\\INFITS_CLIENT_APP\\app\\src\\main\\java\\com\\example\\infits\" />\r\n      <recent name=\"D:\\Internship\\infits_project\\app\\src\\main\\res\\layout\" />\r\n      <recent name=\"D:\\Internship\\infits_project\\app\\src\\main\\res\\drawable\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\">\r\n      <module name=\"Infits.app.main\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"INSPECTION_WITHOUT_ACTIVITY_RESTART\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"$USER_HOME$/.jdks/openjdk-20.0.1\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <module name=\"Infits.app\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2aac381d-1e75-4f05-95d2-1f36e0826556\" name=\"Changes\" comment=\"MealtrackerTodays_Breakfast.java-modified\" />\r\n      <created>1689358288903</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1689358288903</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/.idea/workspace.xml	(date 1700821616823)
@@ -9,53 +9,29 @@
     <option name="autoReloadType" value="NONE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="2aac381d-1e75-4f05-95d2-1f36e0826556" name="Changes" comment="MealtrackerTodays_Breakfast.java-modified">
-      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
+    <list default="true" id="2aac381d-1e75-4f05-95d2-1f36e0826556" name="Changes" comment="Created interface for calculating total sleep duration">
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/modules/app/Infits.app.androidTest.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/app/Infits.app.androidTest.iml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/modules/app/Infits.app.main.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/app/Infits.app.main.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules/app/Infits.app.unitTest.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/app/Infits.app.unitTest.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/navEditor.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/navEditor.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_24-07-2023_10_01_pm__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_24-07-2023_10_01_pm__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-07-2023_09_38_pm_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-07-2023_09_38_pm__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-07-2023_09_41_pm_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-07-2023_09_41_pm__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/androidTest/java/com/example/infits/ExampleInstrumentedTest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/CalorieTrackerFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/CalorieTrackerFragment.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/AdapterForPastActivity.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/AdapterForPastActivity.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardFragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DashBoardMain.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DataFromDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/DataFromDatabase.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/EditProfile.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/EditProfile.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/EnterFoodDetails.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/EnterFoodDetails.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/FetchTrackerInfos.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/FetchTrackerInfos.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/FragmentTodays_BreakFast.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/FragmentTodays_BreakFast.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/Login.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/Signup.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/Signup.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepFragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/Statistics.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/Statistics.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/StepsFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/StepsFragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterFragment.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/NotificationReceiver.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/NotificationReceiver.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepReminderFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepReminderFragment.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepTrackerFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/SleepTrackerFragment.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/StepReminderFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/StepReminderFragment.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterReminderFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterReminderFragment.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterTrackerFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WaterTrackerFragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WeightFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WeightFragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/activitySecondFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/activitySecondFragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/activityTracker2.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/activityTracker2.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/activityfourthfragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/activityfourthfragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/activitythirdfragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/activitythirdfragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/caloriesetgoalFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/caloriesetgoalFragment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/cycling_frag2.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/cycling_frag2.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/diet_fourth.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/diet_fourth.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/mealInfoWithPhoto.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/mealInfoWithPhoto.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/walking_frag2.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/walking_frag2.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_activity_tracker2.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_activity_tracker2.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_activityfourthfragment.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_activityfourthfragment.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_activitythirdfragment.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_activitythirdfragment.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_caloriesetgoal.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_caloriesetgoal.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_overview.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_overview.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/res/navigation/trackers_graph.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/navigation/trackers_graph.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/test/java/com/example/infits/ExampleUnitTest.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WeightReminderFragment.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/WeightReminderFragment.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/example/infits/connectingDietitian.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/example/infits/connectingDietitian.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/activity_connecting_dietitian.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/activity_connecting_dietitian.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_sleep_reminder.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_sleep_reminder.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_step_reminder.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_step_reminder.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_weight_reminder.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_weight_reminder.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/res/values/strings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/values/strings.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/res/values/style.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/values/style.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -65,7 +41,7 @@
   <component name="ClangdSettings">
     <option name="formatViaClangd" value="false" />
   </component>
-  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[BE5TDEROPNWKS4WC]" />
+  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[C:\Users\HP\.android\avd\Pixel_2_API_30.avd]" />
   <component name="ExternalProjectsData">
     <projectState path="$PROJECT_DIR$">
       <ProjectState />
@@ -112,14 +88,20 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="navigationResourceFile" />
+        <option value="Interface" />
+        <option value="layoutResourceFile" />
         <option value="resourceFile" />
         <option value="Class" />
-        <option value="layoutResourceFile" />
-        <option value="navigationResourceFile" />
       </list>
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="master" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="MarkdownSettingsMigration">
@@ -129,45 +111,51 @@
     <option name="selectedTabId" value="ProjectErrors" />
   </component>
   <component name="ProjectId" id="2SZdxqVpDNjD8yULKFzrqaMJSUE" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="autoscrollFromSource" value="true" />
     <option name="autoscrollToSource" value="true" />
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Git.Branch.Popup.ShowAllRemotes&quot;: &quot;true&quot;,
-    &quot;PROJECT_TRUSTED_KEY&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;ScreenshotViewer.SavePath&quot;: &quot;E:/INFITS PROJECTS/Screenshots&quot;,
-    &quot;android-custom-viewC:/Users/devab/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment/1.5.4/5404b0f8aeccb2fe882bee99ef8843711c01c156/fragment-1.5.4-sources.jar!/androidx/fragment/app/FragmentContainerView.kt_SELECTED&quot;: &quot;FragmentContainerView&quot;,
-    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
-    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;com.android.tools.idea.devicemanager.tab&quot;: &quot;Physical&quot;,
-    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,
-    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
-    &quot;full.screen.before.presentation.mode&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;devabrath&quot;,
-    &quot;last_directory_selection&quot;: &quot;E:/internship/INFITS_CLIENT_APP/app/src/main/res/drawable&quot;,
-    &quot;last_opened_file_path&quot;: &quot;E:/INFITS PROJECTS/INFITS_CLIENT_APP&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Suggestions&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.17&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.folding&quot;,
-    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Git.Branch.Popup.ShowAllRemotes": "true",
+    "PROJECT_TRUSTED_KEY": "true",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.cidr.known.project.marker": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "ScreenshotViewer.SavePath": "E:/INFITS PROJECTS/Screenshots",
+    "android-custom-viewC:/Users/HP/AppData/Local/Android/Sdk/sources/android-31/android/widget/TextView.java_SELECTED": "TextView",
+    "android-custom-viewC:/Users/devab/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment/1.5.4/5404b0f8aeccb2fe882bee99ef8843711c01c156/fragment-1.5.4-sources.jar!/androidx/fragment/app/FragmentContainerView.kt_SELECTED": "FragmentContainerView",
+    "cf.first.check.clang-format": "false",
+    "cidr.known.project.marker": "true",
+    "com.android.tools.idea.devicemanager.tab": "Physical",
+    "com.google.services.firebase.aqiPopupShown": "true",
+    "dart.analysis.tool.window.visible": "false",
+    "full.screen.before.presentation.mode": "true",
+    "git-widget-placeholder": "devabrath",
+    "last_directory_selection": "C:/Users/HP/AndroidStudioProjects/Test-Branch/app/src/main/res/drawable",
+    "last_opened_file_path": "C:/Users/HP/AndroidStudioProjects/NotificationsAlarmManager",
+    "project.structure.last.edited": "Suggestions",
+    "project.structure.proportion": "0.17",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "editor.preferences.fonts.default",
+    "show.migrate.to.gradle.popup": "false"
   }
-}</component>
+}]]></component>
   <component name="PsdUISettings">
     <option name="MODULE_TAB" value="Properties" />
     <option name="LAST_EDITED_SIGNING_CONFIG" value="debug" />
     <option name="LAST_EDITED_BUILD_TYPE" value="release" />
   </component>
   <component name="RecentsManager">
+    <key name="CreateClassDialog.RecentsKey">
+      <recent name="com.example.infits" />
+    </key>
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\HP\AndroidStudioProjects\Test-Branch\app\src\main\res\drawable" />
       <recent name="E:\INFITS PROJECTS\INFITS_CLIENT_APP\app\src\main\java\com\example\infits" />
       <recent name="D:\Internship\infits_project\app\src\main\res\layout" />
       <recent name="D:\Internship\infits_project\app\src\main\res\drawable" />
@@ -258,6 +246,21 @@
       <option name="presentableId" value="Default" />
       <updated>1689358288903</updated>
     </task>
+    <task id="LOCAL-00001" summary="Adding dialog for selecting water intake">
+      <created>1699539215909</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1699539215910</updated>
+    </task>
+    <task id="LOCAL-00002" summary="Created interface for calculating total sleep duration">
+      <created>1699621450175</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1699621450175</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -271,4 +274,9 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Adding dialog for selecting water intake" />
+    <MESSAGE value="Created interface for calculating total sleep duration" />
+    <option name="LAST_COMMIT_MESSAGE" value="Created interface for calculating total sleep duration" />
+  </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">Infits</string>\r\n\r\n    <string name=\"navigation_open\">Open Navigation drawer</string>\r\n    <string name=\"navigation_close\">Close Navigation drawer</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"facebook_app_id\">1234</string>\r\n    <string name=\"facebook_client_token\">56789</string>\r\n    <string name=\"Loremipsum\">Lorem ipsum dolor sit amet, consectetur\r\nadipiscing elit, sed do eiusmod tempo\r\nincididunt ut labore et dolore magna aliqua.\r\nUt enim ad minim veniam, quis nostrud\r\nexercitation ullamco laboris nisi ut aliquip</string>\r\n    <string name=\"referral_text\">Sign  your  friends  up\\nShare  the  app  via:</string>\r\n    <string name=\"Lorem_Ipsum\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</string>\r\n    <string name=\"feature_1\">Feature 1</string>\r\n    <string name=\"feature_2\">Feature 2</string>\r\n    <string name=\"feature_3\">Feature 3</string>\r\n    <string name=\"breakfast\">B</string>\r\n    <string name=\"lunch\">L</string>\r\n    <string name=\"dinner\">D</string>\r\n    <string name=\"snacks\">S</string>\r\n    <string name=\"go_pro\">Go Pro!</string>\r\n    <string name=\"workout_tracker\">Workout Tracker</string>\r\n    <string name=\"consultation\">Dietitian &#38; Plan</string>\r\n    <string name=\"meals_tracker\">Share with dietitian</string>\r\n    <string name=\"diet_chart\">All Meal Courses</string>\r\n    <string name=\"goal\">Goal</string>\r\n    <string name=\"limit\">Limit</string>\r\n    <string name=\"No_data\">No data available</string>\r\n\r\n    <!--Hints for signup xml-->\r\n    <string name=\"fullName_hint\"><font size=\"12\">Full Name</font></string>\r\n    <string name=\"userName_hint\"><font size=\"12\">Enter a Username</font></string>\r\n    <string name=\"email_hint\"><font size=\"12\">Email ID</font></string>\r\n    <string name=\"password_hint\"><font size=\"12\">Password</font></string>\r\n    <string name=\"phone_hint\"><font size=\"12\">Phone No.</font></string>\r\n    <string name=\"Age_hint\"><font size=\"12\">Age</font></string>\r\n    <string name=\"Height_hint\"><font size=\"12\">Height</font></string>\r\n    <string name=\"Weight_hint\"><font size=\"12\">Weight</font></string>\r\n\r\n\r\n    <!--PLEASE PUT YOUR DEFAULT WEB CLIENT ID TO CONNECT TO FIREBASE OR GOOGLE PROJECT ONLINE -->\r\n\r\n    <array name=\"month\">\r\n        <item>Jan</item>\r\n        <item>Feb</item>\r\n        <item>Mar</item>\r\n        <item>Apr</item>\r\n        <item>May</item>\r\n        <item>June</item>\r\n        <item>July</item>\r\n        <item>Aug</item>\r\n        <item>Sep</item>\r\n        <item>Oct</item>\r\n        <item>Nov</item>\r\n        <item>Dec</item>\r\n    </array>\r\n\r\n    <string-array name=\"spinner_diet_daily\">\r\n        <item>Daily</item>\r\n        <item>Weekly</item>\r\n        <item>Monthly</item>\r\n        <item>Yearly</item>\r\n    </string-array>\r\n    <string-array name=\"spinner_diet_breakfast\">\r\n        <item>Breakfast</item>\r\n        <item>Snacks</item>\r\n        <item>Lunch</item>\r\n        <item>Dinner</item>\r\n    </string-array>\r\n\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/res/values/strings.xml	(date 1699865378376)
@@ -42,6 +42,7 @@
     <string name="Weight_hint"><font size="12">Weight</font></string>
 
 
+
     <!--PLEASE PUT YOUR DEFAULT WEB CLIENT ID TO CONNECT TO FIREBASE OR GOOGLE PROJECT ONLINE -->
 
     <array name="month">
Index: app/src/main/java/com/example/infits/WaterTrackerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\n\r\nimport android.app.AlarmManager;\r\nimport android.app.Dialog;\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentResultListener;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.airbnb.lottie.LottieAnimationView;\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.facebook.share.Share;\r\nimport com.google.android.material.slider.Slider;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.DecimalFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\npublic class WaterTrackerFragment extends Fragment {\r\n\r\n    ImageView imgback, addliq, decliq, reminder;\r\n\r\n    LottieAnimationView lottieAnimationViewWater;\r\n    TextView waterGoalPercent, wgoal3, consumed;\r\n    TextView waterGoal;\r\n    String liqType = \"water\", liqAmt;\r\n    Button setgoal;\r\n    RecyclerView rc ;\r\n    float goalWater;\r\n    static int goal = 1800;\r\n\r\n    ProgressBar progressBar;\r\n    int consumedInDay;\r\n\r\n    AlarmManager alarmManager;\r\n    PendingIntent waterReceiverPendingIntent;\r\n    Calendar calendar;\r\n\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    private int progr = 0;\r\n    SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd H:m:s\", Locale.getDefault());\r\n    SimpleDateFormat timeFormat = new SimpleDateFormat(\"HH:mm:ss\", Locale.getDefault());\r\n    Date date = new Date();\r\n\r\n    String curr_date=dateFormat.format(date);\r\n    public WaterTrackerFragment() {\r\n\r\n    }\r\n\r\n    public static WaterTrackerFragment newInstance(String param1, String param2) {\r\n        WaterTrackerFragment fragment = new WaterTrackerFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n//        lottieAnimationViewWater.playAnimation();\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n\r\n        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                if(getArguments() != null && getArguments().getBoolean(\"notification\") /* coming from notification */) {\r\n                    startActivity(new Intent(getActivity(),DashBoardMain.class));\r\n                    requireActivity().finish();\r\n                } else {\r\n                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_waterTrackerFragment_to_dashBoardFragment);\r\n                }\r\n            }\r\n        };\r\n        requireActivity().getOnBackPressedDispatcher().addCallback(this, callback);\r\n\r\n    }\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_water_tracker, container, false);\r\n//        progressBar = (ProgressBar) view.findViewById(R.id.progress_barr);\r\n//        CircularProgressIndicator circularProgress = view.findViewById(R.id.progress_barr);\r\n\r\n        SharedPreferences preConsumed = getContext().getApplicationContext().getSharedPreferences(\"preStoredDrinkData\", MODE_PRIVATE);\r\n\r\n        addliq = view.findViewById(R.id.addliq);\r\n        decliq = view.findViewById(R.id.decliq);\r\n        imgback = view.findViewById(R.id.imgback);\r\n        lottieAnimationViewWater = view.findViewById(R.id.waterAnimation);\r\n        waterGoalPercent = view.findViewById(R.id.water_goal_percent);\r\n        wgoal3 = view.findViewById(R.id.wgoal3);\r\n        setgoal = view.findViewById(R.id.setgoal_watertracker);\r\n        consumed = view.findViewById(R.id.water_consumed);\r\n        waterGoal = view.findViewById(R.id.water_goal);\r\n        reminder = view.findViewById(R.id.reminder);\r\n        rc = view.findViewById(R.id.past_activity);\r\n        getLatestWaterData();\r\n        //updateProgressBar();\r\n        if (DataFromDatabase.waterGoal.equals(null) || DataFromDatabase.waterGoal.equalsIgnoreCase(\"null\")) {\r\n            waterGoal.setText(\"0 ml\");\r\n        } else {\r\n            waterGoal.setText(DataFromDatabase.waterGoal + \" ml\");\r\n            try {\r\n                goal = Integer.parseInt(DataFromDatabase.waterGoal);\r\n                // Log.d(\"Goal\",String.valueOf(goal));\r\n            } catch (NumberFormatException ex) {\r\n                goal = 1800;\r\n                waterGoal.setText(1800 + \" ml\");\r\n                // Log.d(\"Goal\",String.valueOf(goal));\r\n                System.out.println(ex);\r\n            }\r\n        }\r\n\r\n        if (DataFromDatabase.waterStr.equals(null) || DataFromDatabase.waterStr.equalsIgnoreCase(\"null\")) {\r\n            consumed.setText(\"0 ml\");\r\n        } else {\r\n            consumed.setText(DataFromDatabase.waterStr + \" ml\");  // waterStr = waterConsumed\r\n            try {\r\n                consumedInDay = Integer.parseInt(DataFromDatabase.waterStr);\r\n                waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));\r\n            } catch (NumberFormatException ex) {\r\n                consumedInDay = 0;\r\n                waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));\r\n            }\r\n        }\r\n\r\n        getLatestWaterData();\r\n\r\n        calendar = Calendar.getInstance();\r\n        Log.d(\"water\", \"currHour: \" + calendar.get(Calendar.HOUR_OF_DAY));\r\n\r\n        createNotificationChannel();\r\n        waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));\r\n\r\n\r\n        pastActivity();\r\n\r\n        setgoal.setOnClickListener(view1 -> {\r\n            final Dialog dialog = new Dialog(getActivity());\r\n            dialog.setCancelable(true);\r\n            dialog.setContentView(R.layout.watergoaldialog);\r\n            Slider goal_slider = dialog.findViewById(R.id.slider);\r\n            dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n            ImageView up_arrow = dialog.findViewById(R.id.number_Picker_up_button);\r\n            ImageView down_arrow = dialog.findViewById(R.id.number_Picker_down_button);\r\n            ImageView close_dialog = dialog.findViewById(R.id.close_btn);\r\n            TextView numberPickerText = dialog.findViewById(R.id.current_number_picked);\r\n            TextView selectedGoal = dialog.findViewById(R.id.selected_text);\r\n            TextView selectedGlass = dialog.findViewById(R.id.selected_glass_number);\r\n            TextView r1 = dialog.findViewById(R.id.r1);\r\n            TextView r2 = dialog.findViewById(R.id.r2);\r\n            TextView r3 = dialog.findViewById(R.id.r3);\r\n            TextView r4 = dialog.findViewById(R.id.r4);\r\n            TextView r5 = dialog.findViewById(R.id.r5);\r\n            TextView r6 = dialog.findViewById(R.id.r6);\r\n            TextView r7 = dialog.findViewById(R.id.r7);\r\n            close_dialog.setOnClickListener(v -> dialog.dismiss());\r\n\r\n            //  Button setGoalBtn = dialog.findViewById(R.id.set_water_goal);\r\n\r\n            selectedGoal.setText(String.valueOf(goal_slider.getValue())+\" L\");\r\n\r\n            goal_slider.setCustomThumbDrawable(R.drawable.thumb_for_water_draw);\r\n\r\n            goal_slider.addOnChangeListener((slider, value, fromUser) -> {\r\n                DecimalFormat df = new DecimalFormat(\"0.0\");\r\n                selectedGoal.setText(df.format(slider.getValue())+ \" L\");\r\n                int pickedNumber = Integer.parseInt(numberPickerText.getText().toString());\r\n                int selected_val = (int) ((value*1000)/pickedNumber);\r\n                selectedGlass.setText(String.valueOf(selected_val) +\" Glass\");\r\n            });\r\n\r\n\r\n\r\n            up_arrow.setOnClickListener(v -> {\r\n                int pickedNumber = Integer.parseInt(numberPickerText.getText().toString());\r\n                int incrementNumber = pickedNumber+100;\r\n                // Toast.makeText(getContext(), \"clicked: \"+incrementNumber, Toast.LENGTH_SHORT).show();\r\n                numberPickerText.setText(String.valueOf(incrementNumber));\r\n                float val = Float.parseFloat((numberPickerText.getText().toString()));\r\n                float rangeVal = (val/1000)*2;\r\n                float interval = (rangeVal*10 - rangeVal*1)/6;\r\n                DecimalFormat df = new DecimalFormat(\"0.0\");\r\n\r\n                r1.setText(df.format(rangeVal*1)+\" L\");\r\n                r2.setText(df.format(rangeVal+interval*1)+\" L\");\r\n                r3.setText(df.format(rangeVal+interval*2)+\" L\");\r\n                r4.setText(df.format(rangeVal+interval*3)+\" L\");\r\n                r5.setText(df.format(rangeVal+interval*4)+\" L\");\r\n                r6.setText(df.format(rangeVal+interval*5)+\" L\");\r\n                r7.setText(df.format(rangeVal*10)+\" L\");\r\n\r\n                goal_slider.setValueFrom(rangeVal);\r\n                goal_slider.setValueTo(rangeVal*10);\r\n                goal_slider.setValue(rangeVal);\r\n                DecimalFormat df1 = new DecimalFormat(\"0.0\");\r\n                goal_slider.setStepSize(Float.parseFloat(df1.format(val/1000)));\r\n            });\r\n\r\n            down_arrow.setOnClickListener(v -> {\r\n                if(Integer.parseInt(numberPickerText.getText().toString())>100) {\r\n                    int pickedNumber = Integer.parseInt(numberPickerText.getText().toString());\r\n                    int DecNumber = pickedNumber - 100;\r\n                    //  Toast.makeText(getContext(), \"clicked: \" + incrementNumber, Toast.LENGTH_SHORT).show();\r\n                    numberPickerText.setText(String.valueOf(DecNumber));\r\n                    float val = Float.parseFloat((numberPickerText.getText().toString()));\r\n                    float rangeVal = (val/1000)*2;\r\n\r\n                    float interval = (rangeVal*10 - rangeVal*1)/6;\r\n\r\n                    DecimalFormat df = new DecimalFormat(\"0.0\");\r\n\r\n                    r1.setText(df.format(rangeVal*1)+\" L\");\r\n                    r2.setText(df.format(rangeVal+interval*1)+\" L\");\r\n                    r3.setText(df.format(rangeVal+interval*2)+\" L\");\r\n                    r4.setText(df.format(rangeVal+interval*3)+\" L\");\r\n                    r5.setText(df.format(rangeVal+interval*4)+\" L\");\r\n                    r6.setText(df.format(rangeVal+interval*5)+\" L\");\r\n                    r7.setText(df.format(rangeVal*10)+\" L\");\r\n\r\n                    goal_slider.setValueFrom(rangeVal);\r\n                    goal_slider.setValueTo(rangeVal*10);\r\n                    goal_slider.setValue(rangeVal);\r\n                    DecimalFormat df1 = new DecimalFormat(\"0.0\");\r\n                    goal_slider.setStepSize(Float.parseFloat(df1.format(val/1000)));\r\n                }\r\n            });\r\n\r\n\r\n            Button setGoalBtn = dialog.findViewById(R.id.set_water_goal);  // Save Button in SetGoal Fragment\r\n            setGoalBtn.setOnClickListener(v -> {\r\n\r\n                int goalInt = (int) (goal_slider.getValue() * 1000);\r\n                final String[] goaltxt = {String.valueOf(goalInt)};\r\n\r\n                goal = Integer.parseInt(goaltxt[0].toString());\r\n                Log.d(\"Goal\",String.valueOf(goal));\r\n\r\n                waterGoal.setText(goaltxt[0].toString() + \" ml\");\r\n                waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));\r\n                consumedInDay = 0;\r\n\r\n\r\n                //String url = String.format(\"%supdatewatergoal.php\",DataFromDatabase.ipConfig);\r\n                // String url =  DataFromDatabase.ipConfig +\"watergoalupdate.php\";\r\n                String url = \"https://infits.in/androidApi/updatewatergoal.php\";\r\n                StringRequest stringRequest = new StringRequest(Request.Method.POST, url,\r\n                        response -> {\r\n\r\n                            try {\r\n                                Log.i(\"response from server\", \"onResponse: \"+response);\r\n                                JSONObject jsonObject = new JSONObject(response);\r\n                                String message = jsonObject.getString(\"message\");\r\n\r\n                                int newGoal = jsonObject.getInt(\"goal\");\r\n\r\n                                // Update the UI with the new goal value if the operation was successful\r\n                                if (goal!=newGoal) {\r\n                                    goaltxt[0] = (String.valueOf(newGoal));\r\n                                    waterGoalPercent.setText(String.valueOf(calculateGoal(newGoal)));\r\n                                    getLatestWaterData();\r\n                                }\r\n                            } catch (Exception e) {\r\n                                e.printStackTrace();\r\n                                Log.d(\"response;;\", \"JSON parsing error.\"+e);\r\n                            }\r\n                        },\r\n                        error -> {\r\n                            Log.e(\"response from server ;\", \"error:\" + error);\r\n                        }\r\n                ) {\r\n                    @Nullable\r\n                    @Override\r\n                    protected Map<String, String> getParams() throws AuthFailureError {\r\n                        Date date = new Date();\r\n                        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\r\n                        // int amt = (int) Float.parseFloat(choosed.getText().toString());\r\n                        Map<String, String> data = new HashMap<>();\r\n                        data.put(\"client_id\", DataFromDatabase.client_id);\r\n                        data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                        data.put(\"dateandtime\", sdf.format(date));\r\n                        data.put(\"drinkConsumed\", String.valueOf(consumedInDay));\r\n                        data.put(\"goal\", String.valueOf(goal));\r\n                        data.put(\"type\", liqType);\r\n                        data.put(\"amount\", String.valueOf(consumedInDay));\r\n                        data.put(\"dietitian_id\",DataFromDatabase.dietitian_id);\r\n                        data.put(\"dietitianuserID\",DataFromDatabase.dietitianuserID);\r\n\r\n\r\n\r\n                        Log.i(\"goal uploaded\", \"data uploaded date=\"+sdf.format(date)+\"\\n\"+\r\n                                \"goal:\"+goal+\"\\n\"+\r\n                                \"clientuserID:\"+DataFromDatabase.clientuserID+\"\\n\"+\r\n                                \"type:\"+\"water\"+\"\\n\"+\r\n                                \"amount:\"+ (consumedInDay)+\"\\n\"+\r\n                                \"drinkConsumed:\"+(consumedInDay)+\"\\n\"+\r\n                                \"client_id:\"+DataFromDatabase.client_id+\"\\n\"+\r\n                                \"dietitian_id:\"+DataFromDatabase.dietitian_id+\"\\n\"+\r\n                                \"dietitianuserID:\"+DataFromDatabase.dietitianuserID);\r\n\r\n                        return data;\r\n                    }\r\n                };\r\n                Volley.newRequestQueue(getActivity().getApplicationContext()).add(stringRequest);\r\n                stringRequest.setRetryPolicy(new DefaultRetryPolicy(10000,\r\n                        DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                        DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n\r\n                SharedPreferences notificationPrefs = requireActivity().getSharedPreferences(\"notificationDetails\", MODE_PRIVATE);\r\n                boolean waterNotificationPermission = notificationPrefs.getBoolean(\"waterSwitch\", false);\r\n\r\n                if (false /*waterNotificationPermission*/) {\r\n                    setNotificationAlarm();\r\n                    cancelNotificationAlarmAtEndOfDay();\r\n                }\r\n\r\n                dialog.dismiss();\r\n            });\r\n\r\n\r\n\r\n            dialog.show();\r\n            waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));\r\n\r\n        });\r\n\r\n        addliq.setOnClickListener(v -> {\r\n            final Dialog dialog = new Dialog(getActivity());\r\n            dialog.setCancelable(true);\r\n            dialog.setContentView(R.layout.fragment_add_liquid);\r\n            dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n            Button addDrank = dialog.findViewById(R.id.addbtn);\r\n\r\n            Slider slider = dialog.findViewById(R.id.slider);\r\n\r\n            TextView choosed = dialog.findViewById(R.id.liqamt); // choosed = choosedLiquedAmount\r\n\r\n            final int[] value = new int[1];\r\n\r\n\r\n            RadioGroup typeOfLiquid = dialog.findViewById(R.id.radioGroup);\r\n            typeOfLiquid.setOnCheckedChangeListener((group, checkedId) -> {\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                    if (checkedId == R.id.soda) {\r\n                        dialog.findViewById(checkedId).setForeground(getActivity().getDrawable(R.drawable.outline_liq));\r\n                        dialog.findViewById(R.id.coffee).setForeground(null);\r\n                        dialog.findViewById(R.id.water).setForeground(null);\r\n                        dialog.findViewById(R.id.juice).setForeground(null);\r\n                        liqType = \"soda\";\r\n                    }\r\n                    if (checkedId == R.id.water) {\r\n                        dialog.findViewById(checkedId).setForeground(getActivity().getDrawable(R.drawable.outline_liq));\r\n                        dialog.findViewById(R.id.coffee).setForeground(null);\r\n                        dialog.findViewById(R.id.soda).setForeground(null);\r\n                        dialog.findViewById(R.id.juice).setForeground(null);\r\n                        liqType = \"water\";\r\n                    }\r\n                    if (checkedId == R.id.juice) {\r\n                        dialog.findViewById(checkedId).setForeground(getActivity().getDrawable(R.drawable.outline_liq));\r\n                        dialog.findViewById(R.id.coffee).setForeground(null);\r\n                        dialog.findViewById(R.id.water).setForeground(null);\r\n                        dialog.findViewById(R.id.soda).setForeground(null);\r\n                        liqType = \"juice\";\r\n                    }\r\n                    if(checkedId == R.id.coffee) {\r\n                        dialog.findViewById(checkedId).setForeground(getActivity().getDrawable(R.drawable.outline_liq));\r\n                        dialog.findViewById(R.id.soda).setForeground(null);\r\n                        dialog.findViewById(R.id.water).setForeground(null);\r\n                        dialog.findViewById(R.id.juice).setForeground(null);\r\n                        liqType = \"coffee\";\r\n                    }\r\n                }\r\n            });\r\n\r\n            slider.addOnSliderTouchListener(new Slider.OnSliderTouchListener() {\r\n                @Override\r\n                public void onStartTrackingTouch(@NonNull Slider slider) {\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onStopTrackingTouch(@NonNull Slider slider) {\r\n\r\n                    value[0] = (int) slider.getValue();\r\n                    choosed.setText(String.valueOf((float) value[0]));\r\n                    Log.d(\"Water\", String.valueOf(value[0]));\r\n\r\n                }\r\n            });\r\n\r\n            choosed.setText(String.valueOf(slider.getValue()));\r\n\r\n            addDrank.setOnClickListener(v1 -> {\r\n\r\n                SharedPreferences.Editor editor = preConsumed.edit();\r\n                editor.putInt(\"prevConsumedInt\",(int) Float.parseFloat(choosed.getText().toString()));\r\n                editor.putString(\"drinkType\",liqType);\r\n                editor.apply();\r\n\r\n\r\n                consumedInDay = (int) Float.parseFloat(choosed.getText().toString());\r\n                //consumed.setText(consumedInDay);\r\n\r\n\r\n//                    int progress = (goal*value[0])/100; // setting progress\r\n//                    circularProgress.setProgress(progress, goal); // Added max to goal\r\n                if(consumedInDay >= goal) {\r\n                    cancelNotificationAlarm();\r\n                    updateInAppNotifications(goal);\r\n                }\r\n\r\n                dialog.dismiss();\r\n//                    String url = String.format(\"%swatertracker.php\", DataFromDatabase.ipConfig);\r\n//                    StringRequest request = new StringRequest(Request.Method.POST, url, response -> {\r\n//                        if (response.equals(\"updated\")) {\r\n//                            consumed.setText(consumedInDay + \" ml\");\r\n//                            waterGoalPercent.setText(String.valueOf(calculateGoal()));\r\n//                        } else {\r\n//                            Toast.makeText(getActivity(), \"Not working\", Toast.LENGTH_SHORT).show();\r\n//                        }\r\n//                    }, error -> {\r\n//                        Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();\r\n//                    }) {\r\n//                        @Nullable\r\n//                        @Override\r\n//                        protected Map<String, String> getParams() throws AuthFailureError {\r\n//                            Date date = new Date();\r\n//                            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n//                            sdf.format(date);\r\n//                            Map<String, String> data = new HashMap<>();\r\n//                            SimpleDateFormat stf = new SimpleDateFormat(\"HH:mm:ss\");\r\n//                            data.put(\"userID\", DataFromDatabase.clientuserID);\r\n//                            data.put(\"date\", String.valueOf(date));\r\n//                            data.put(\"consumed\", String.valueOf(consumedInDay));\r\n//                            data.put(\"goal\", String.valueOf(goal));\r\n//                            data.put(\"time\", stf.format(date));\r\n//                            data.put(\"type\", liqType);\r\n//                            data.put(\"amount\", String.valueOf(value[0]));\r\n//                            return data;\r\n//                        }\r\n//                    };\r\n//                    Date date = new Date();\r\n//                    SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n//                    Log.d(\"date\", sdf.format(date));\r\n//                    Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);\r\n\r\n//                    updateLastRecord();\r\n\r\n                //String url = String.format(\"%supdatewatertracker.php\", DataFromDatabase.ipConfig);\r\n                //String url = DataFromDatabase.ipConfig+\"updateWatertracker.php\";\r\n                String url = String.format(\"%supdateWatertracker.php\",DataFromDatabase.ipConfig);\r\n\r\n                //  String url = \"https://infits.in/androidApi/updateWatertracker.php\";\r\n\r\n                StringRequest request = new StringRequest(Request.Method.POST, url, response -> {\r\n                    try {\r\n                        Log.i(\"response from server\", \"onCreateView: response:\"+response);\r\n                        JSONObject jsonObject=new JSONObject(response);\r\n                        String amount=jsonObject.getString(\"total\");\r\n                        consumedInDay= Integer.parseInt(amount);\r\n                        //String total=jsonObject.getString(\"total\");\r\n                        consumed.setText(consumedInDay);\r\n                        waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));\r\n//                        circularProgress.setProgress(calculateGoalReturnInt(),100);\r\n                        lottieAnimationViewWater.setAnimation(R.raw.water_loading_animation_bottle);\r\n                        int durationOfAnimationFromLottie = 6000;\r\n                        int durationOfWaterAnimation = (durationOfAnimationFromLottie*calculateGoalReturnInt()/100)-500;\r\n                        lottieAnimationViewWater.playAnimation();\r\n                        new Handler().postDelayed(new Runnable() {\r\n                                                      @Override\r\n                                                      public void run() {\r\n                                                          lottieAnimationViewWater.pauseAnimation();\r\n                                                      }\r\n                                                  },durationOfWaterAnimation\r\n                        );\r\n                        // consumed.setText(String.valueOf(consumedInDay));\r\n                        pastActivity();\r\n                    } catch (JSONException e) {\r\n                        Log.d(\"response\",\"error\");\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }, error -> {\r\n                    Log.i(\"error\", \"response:\"+error);\r\n                    Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();\r\n                }) {\r\n                    @Nullable\r\n                    @Override\r\n                    protected Map<String, String> getParams() throws AuthFailureError {\r\n                        Date date = new Date();\r\n                        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\r\n                        int amt = (int) Float.parseFloat(choosed.getText().toString());\r\n                        Map<String, String> data = new HashMap<>();\r\n                        data.put(\"client_id\", DataFromDatabase.client_id);\r\n                        data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                        data.put(\"dateandtime\", sdf.format(date));\r\n                        data.put(\"drinkConsumed\", String.valueOf(consumedInDay));\r\n                        data.put(\"goal\", String.valueOf(goal));\r\n                        data.put(\"type\", liqType);\r\n                        data.put(\"amount\", String.valueOf(consumedInDay));\r\n                        data.put(\"dietitian_id\",DataFromDatabase.dietitian_id);\r\n                        data.put(\"dietitianuserID\",DataFromDatabase.dietitianuserID);\r\n\r\n\r\n                        //  Log.d(\"update\", \"consumed: \" + consumedInDay);\r\n                        // Log.d(\"update\", \"amount: \" + amt);\r\n                        return data;\r\n                    }\r\n                };\r\n                Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);\r\n                request.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                        DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                        DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n\r\n                // waterGoalPercent\r\n                if(goal != 0)\r\n                    waterGoalPercent.setText((consumedInDay * 100) / goal + \" %\");\r\n                else{\r\n                    waterGoalPercent.setText(\"0 %\");\r\n                }\r\n            });\r\n\r\n            dialog.show();\r\n\r\n        });\r\n\r\n        decliq.setOnClickListener(v -> {\r\n            int prevConsumedDrink = preConsumed.getInt(\"prevConsumedInt\",0);\r\n            if(prevConsumedDrink==0){\r\n                Toast.makeText(getContext(), \"not consumed anything\", Toast.LENGTH_SHORT).show();\r\n            }else {\r\n                int afterDeduc = ((int)Integer.parseInt(consumed.getText().toString()))-prevConsumedDrink;\r\n                Toast.makeText(getContext(), \"data: prevDrink:\"+prevConsumedDrink+\" diff:\"+afterDeduc, Toast.LENGTH_SHORT).show();\r\n\r\n                String url = String.format(\"%supdateWatertrackerDec.php\",DataFromDatabase.ipConfig);\r\n\r\n\r\n                StringRequest request = new StringRequest(Request.Method.POST, url, response -> {\r\n                    try {\r\n                        Log.i(\"response from server\", \"onCreateView: response:\"+response);\r\n                        JSONObject jsonObject=new JSONObject(response);\r\n                        String amount=jsonObject.getString(\"total\");\r\n                        consumedInDay= Integer.parseInt(amount);\r\n                        //String total=jsonObject.getString(\"total\");\r\n                        consumed.setText(consumedInDay);\r\n                        waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));\r\n//                        circularProgress.setProgress(calculateGoalReturnInt(),100);\r\n                        lottieAnimationViewWater.setAnimation(R.raw.water_loading_animation_bottle);\r\n                        int durationOfAnimationFromLottie = 6000;\r\n                        int durationOfWaterAnimation = (durationOfAnimationFromLottie*calculateGoalReturnInt()/100)-500;\r\n                        lottieAnimationViewWater.playAnimation();\r\n                        new Handler().postDelayed(new Runnable() {\r\n                                                      @Override\r\n                                                      public void run() {\r\n                                                          lottieAnimationViewWater.pauseAnimation();\r\n                                                      }\r\n                                                  },durationOfWaterAnimation\r\n                        );\r\n                        // consumed.setText(String.valueOf(consumedInDay));\r\n                        pastActivity();\r\n                    } catch (JSONException e) {\r\n                        Log.d(\"response\",\"error\");\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }, error -> {\r\n                    Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();\r\n                }) {\r\n                    @Nullable\r\n                    @Override\r\n                    protected Map<String, String> getParams() throws AuthFailureError {\r\n                        Date date = new Date();\r\n                        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\r\n\r\n                        Map<String, String> data = new HashMap<>();\r\n                        data.put(\"client_id\", DataFromDatabase.client_id);\r\n                        data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                        data.put(\"dateandtime\", sdf.format(date));\r\n                        data.put(\"drinkConsumed\", String.valueOf(prevConsumedDrink));\r\n                        data.put(\"goal\", String.valueOf(goal));\r\n                        data.put(\"type\", liqType);\r\n                        data.put(\"amount\", String.valueOf(prevConsumedDrink));\r\n                        data.put(\"dietitian_id\",DataFromDatabase.dietitian_id);\r\n                        data.put(\"dietitianuserID\",DataFromDatabase.dietitianuserID);\r\n\r\n\r\n                        //  Log.d(\"update\", \"consumed: \" + consumedInDay);\r\n                        // Log.d(\"update\", \"amount: \" + amt);\r\n                        return data;\r\n                    }\r\n                };\r\n                Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);\r\n                request.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                        DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                        DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n\r\n                // waterGoalPercent\r\n                if(goal != 0)\r\n                    waterGoalPercent.setText((consumedInDay * 100) / goal + \" %\");\r\n                else{\r\n                    waterGoalPercent.setText(\"0 %\");\r\n                }\r\n\r\n            }\r\n            //   Toast.makeText(getContext(), \"not crashed!\", Toast.LENGTH_SHORT).show();\r\n        });\r\n\r\n        imgback.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(getArguments() != null && getArguments().getBoolean(\"notification\") /* coming from notification */) {\r\n                    startActivity(new Intent(getActivity(),DashBoardMain.class));\r\n                    requireActivity().finish();\r\n                } else {\r\n                    Navigation.findNavController(v).navigate(R.id.action_waterTrackerFragment_to_dashBoardFragment);\r\n                }\r\n            }\r\n        });\r\n\r\n        reminder.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_waterTrackerFragment_to_waterReminderFragment));\r\n\r\n        getParentFragmentManager().setFragmentResultListener(\"liquidData\", this, new FragmentResultListener() {\r\n            @Override\r\n            public void onFragmentResult(@NonNull String requestKey, @NonNull Bundle result) {\r\n                liqType = result.getString(\"liquidType\");\r\n                liqAmt = result.getString(\"liquidAmt\");\r\n            }\r\n        });\r\n\r\n        /*\r\n        public void onClick(DialogInterface dialog,\r\n                                int id) {\r\n                            Dialog f = (Dialog) dialog;\r\n                            //This is the input I can't get text from\r\n                            EditText inputTemp = (EditText) f.findViewById(R.id.search_input_text);\r\n                            query = inputTemp.getText().toString();\r\n                           ...\r\n                        }\r\n         */\r\n\r\n//        waterGoal.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//\r\n//                final Dialog dialog = new Dialog(getContext());\r\n//                dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n//                dialog.setCancelable(true);\r\n//                dialog.setContentView(R.layout.watergoaldialog);\r\n//\r\n//                final EditText goal = dialog.findViewById(R.id.goal);\r\n//                Button button = dialog.findViewById(R.id.button);\r\n//\r\n//                button.setOnClickListener(new View.OnClickListener() {\r\n//                    @Override\r\n//                    public void onClick(View v) {\r\n//                        String wGoal = goal.getText().toString();\r\n//\r\n//                        //textViewsleep.setText(\"Goal: \"+wGoal);\r\n//\r\n//\r\n//                        float liqAmount = Float.parseFloat(liqAmt);\r\n//                        //textViewsleep.setText(\"Goal: \"+wGoal);\r\n//\r\n//\r\n//                        float res = (liqAmount/Float.parseFloat(wGoal)) *100;\r\n//\r\n//                        wgoalperc.setText((int)res+ \" %\");\r\n//\r\n//                        goalWater = Float.parseFloat(wGoal);\r\n//\r\n//                        dialog.dismiss();\r\n//\r\n//                    }\r\n//                });\r\n//\r\n//                dialog.show();\r\n//\r\n//                //Navigation.findNavController(v).navigate(R.id.action_waterTrackerFragment_to_addLiquidFragment);\r\n//            }\r\n//        });\r\n\r\n        //textViewsleep.setText(\"Goal: \"+goalWater);\r\n\r\n\r\n        return view;\r\n    }\r\n\r\n    private void updateProgressBar() {\r\n\r\n        progressBar.setProgress(progr);\r\n    }\r\n    private void pastActivity(){\r\n\r\n\r\n        ArrayList<String> dates = new ArrayList<>(); // ArrayList for past Activity\r\n        ArrayList<String> datas = new ArrayList<>(); // ArrayList for past Activity\r\n        ArrayList<String> fetchedDateswater=new ArrayList<>();\r\n        fetchedDateswater.clear();\r\n        //String url = String.format(\"%spastActivitywater.php\", DataFromDatabase.ipConfig);\r\n        String url = \"https://infits.in/androidApi/pastActivitywater.php\";\r\n\r\n        DateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, url, response -> {\r\n            try {\r\n\r\n                System.out.println(\"water data=\"+response);\r\n                JSONObject jsonObject = new JSONObject(response);\r\n                JSONArray jsonArray = jsonObject.getJSONArray(\"water\");\r\n                Log.d(\"arraylength\",String.valueOf(jsonArray.length()));\r\n                Log.d(\"watervalue:\",jsonArray.toString());\r\n                for (int i=0;i<jsonArray.length();i++){\r\n                    fetchedDateswater.add(jsonArray.getJSONObject(i).getString(\"date\"));\r\n                    datas.add(jsonArray.getJSONObject(i).getString(\"water\"));\r\n                    Log.d(\"watt\",datas.toString());\r\n                }\r\n//                for (int i=0;i<5;i++){ //noOfDays\r\n//                    Calendar cal = Calendar.getInstance();\r\n////                    cal.add(Calendar.DATE, -i);\r\n//                    Log.d(\"featched\",fetchedDateswater.toString());\r\n//                    //Log.d(\"currentInstance\",dateFormat.format(cal.getTime()).toString());\r\n//                    if(fetchedDateswater.contains(dateFormat.format(cal.getTime()).toString())==true){\r\n//                        int index=fetchedDateswater.indexOf(dateFormat.format(cal.getTime()));\r\n//                        Log.d(\"index\",String.valueOf(index));\r\n//                        JSONObject object=jsonArray.getJSONObject(index);\r\n//                        dates.add(dateFormat.format(cal.getTime()));\r\n//                        //String data=object.getString(\"water\");\r\n//                        //datas.add(data);\r\n//                    }\r\n//                    else {\r\n//                        dates.add(dateFormat.format(cal.getTime()));\r\n//                        //datas.add(\"0\");\r\n//                    }\r\n//                }\r\n\r\n\r\n//                    for (int i = 0; i < jsonArray.length(); i++) {\r\n//                        JSONObject object = jsonArray.getJSONObject(i);\r\n//                        String data = object.getString(\"water\");\r\n//                        String date = object.getString(\"date\");\r\n//                        dates.add(date);\r\n//                        datas.add(data);\r\n//                        System.out.println(datas.get(i));\r\n//                        System.out.println(dates.get(i));\r\n//                }\r\n\r\n                AdapterForPastActivity ad = new AdapterForPastActivity(getContext(), fetchedDateswater, datas, Color.parseColor(\"#76A5FF\"));\r\n                rc.setLayoutManager(new LinearLayoutManager(getContext()));\r\n                rc.setAdapter(ad);\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }, error -> {\r\n            Toast.makeText(getActivity().getApplicationContext(), error.toString(), Toast.LENGTH_SHORT).show();\r\n            Log.d(\"Error\", error.toString());\r\n        }) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n//                data.put(\"client_id\", DataFromDatabase.client_id);\r\n                data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                Log.d(\"clientuserID\",DataFromDatabase.clientuserID);\r\n                return data;\r\n            }\r\n        };\r\n\r\n        Volley.newRequestQueue(getActivity()).add(stringRequest);\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n    private void updateInAppNotifications(int goal) {\r\n        SharedPreferences inAppPrefs = requireActivity().getSharedPreferences(\"inAppNotification\", MODE_PRIVATE);\r\n        SharedPreferences.Editor inAppEditor = inAppPrefs.edit();\r\n        inAppEditor.putBoolean(\"newNotification\", true);\r\n        inAppEditor.apply();\r\n\r\n        String inAppUrl = String.format(\"%sinAppNotifications.php\", DataFromDatabase.ipConfig);\r\n\r\n        String type = \"water\";\r\n        String text = \"You have reached your goal of \" + goal + \" ml.\";\r\n\r\n        Date date = new Date();\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\r\n        sdf.format(date);\r\n\r\n        StringRequest inAppRequest = new StringRequest(\r\n                Request.Method.POST,\r\n                inAppUrl,\r\n                response -> {\r\n                    if (response.equals(\"inserted\")) Log.d(\"WaterTrackerFragment\", \"success\");\r\n                    else Log.d(\"WaterTrackerFragment\", \"failure\");\r\n                },\r\n                error -> Log.e(\"WaterTrackerFragment\",error.toString())\r\n        ) {\r\n            @NotNull\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n\r\n                data.put(\"client_id\", DataFromDatabase.client_id);\r\n                data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                data.put(\"type\", type);\r\n                data.put(\"text\", text);\r\n                data.put(\"date\", String.valueOf(date));\r\n\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(inAppRequest);\r\n        inAppRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    private void getLatestWaterData() {\r\n        //String url = String.format(\"%sgetLatestWaterdt.php\", DataFromDatabase.ipConfig);\r\n        String url = \"https://infits.in/androidApi/getLatestWaterdt.php\";\r\n\r\n        StringRequest request = new StringRequest(Request.Method.POST, url,\r\n                response -> {\r\n                    Log.d(\"dashboardFrag\", response);\r\n\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        JSONObject array = object.getJSONObject(\"water\");\r\n\r\n\r\n                        if(array.length() != 0) {\r\n                            String waterGoalStr = array.getString(\"goal\");\r\n                            String waterConsumedStr = array.getString(\"drinkConsumed\");\r\n                            goal = Integer.parseInt(waterGoalStr);\r\n                            consumedInDay = Integer.parseInt(waterConsumedStr);\r\n\r\n                            waterGoal.setText(goal + \" ml\");\r\n                            try {\r\n                                waterGoalPercent.setText((consumedInDay * 100) / goal + \" %\");\r\n                            }catch (ArithmeticException e){\r\n                                Toast.makeText(getContext(), \"Cannot be divided by zero: error\"+e.toString(), Toast.LENGTH_SHORT).show();\r\n                            }\r\n\r\n                            consumed.setText(consumedInDay + \" ml\");\r\n                            lottieAnimationViewWater.setAnimation(R.raw.water_loading_animation_bottle);\r\n                            int durationOfAnimationFromLottie = 6000;\r\n                            int durationOfWaterAnimation = (durationOfAnimationFromLottie*calculateGoalReturnInt()/100)-500;\r\n                            lottieAnimationViewWater.playAnimation();\r\n                            new Handler().postDelayed(new Runnable() {\r\n                                                          @Override\r\n                                                          public void run() {\r\n                                                              lottieAnimationViewWater.pauseAnimation();\r\n                                                          }\r\n                                                      },durationOfWaterAnimation\r\n                            );\r\n                            consumed.setText(String.valueOf(consumedInDay));\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }, error -> Log.e(\"dashboardFrag\", error.toString())) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n                Date date= new Date();\r\n                data.put(\"client_id\", DataFromDatabase.client_id);\r\n                data.put(\"clientuserID\",DataFromDatabase.clientuserID);\r\n                data.put(\"dateandtime\",dateFormat.format(date));\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(request);\r\n        request.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    private void updateLastRecord() {\r\n        //String url = String.format(\"%sgetLatestWaterdt.php\", DataFromDatabase.ipConfig);\r\n        String url = \"https://infits.in/androidApi/getLatestWaterdt.php\";\r\n        StringRequest request = new StringRequest(Request.Method.POST, url,\r\n                response -> {\r\n                    Log.d(\"water\", response);\r\n\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        JSONArray array = object.getJSONArray(\"water\");\r\n\r\n                        if(array.length() != 0) {\r\n                            int waterConsumedStr = Integer.parseInt(array.getJSONObject(0).getString(\"drinkConsumed\"));\r\n                        } else {\r\n                            createNewEntry();\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }, error -> Log.e(\"dashboardFrag\", error.toString())) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n\r\n                data.put(\"clientuserID\",DataFromDatabase.clientuserID);\r\n\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(request);\r\n        request.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    private void createNewEntry() {\r\n        //String url = String.format(\"%swatertracker.php\",DataFromDatabase.ipConfig);\r\n        String url = \"https://infits.in/androidApi/watertracker.php\";\r\n        StringRequest request = new StringRequest(Request.Method.POST,url, response -> {\r\n            consumed.setText(consumedInDay +\" ml\");\r\n            waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));\r\n        },error -> {\r\n            Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Date date = new Date();\r\n                SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\r\n                sdf.format(date);\r\n                Map<String, String> data = new HashMap<>();\r\n                data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                data.put(\"client_id\",DataFromDatabase.client_id);\r\n                data.put(\"dateandtime\", String.valueOf(date));\r\n                data.put(\"consumed\", String.valueOf(consumedInDay));\r\n                data.put(\"goal\", \"0\");\r\n                data.put(\"type\", liqType);\r\n                data.put(\"amount\", \"0\");\r\n                data.put(\"dietitian_id\",DataFromDatabase.dietitian_id);\r\n                data.put(\"dietitianuserID\",DataFromDatabase.dietitianuserID);\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);\r\n        request.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    private void setNotificationAlarm() {\r\n        Log.d(\"water\", \"createAlarm\");\r\n        alarmManager = (AlarmManager) requireActivity().getSystemService(Context.ALARM_SERVICE);\r\n\r\n        Intent waterReceiverIntent = new Intent(requireContext(), WaterNotificationReceiver.class);\r\n        PendingIntent waterReceiverPendingIntent = PendingIntent.getBroadcast(requireContext(), 0, waterReceiverIntent, PendingIntent.FLAG_IMMUTABLE);\r\n\r\n        long time = calendar.getTimeInMillis() + 60*60*1000; // current time + 1 hour\r\n        long interval = 4*60*60*1000; // 4 hours\r\n\r\n        alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, time, interval, waterReceiverPendingIntent);\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    private void cancelNotificationAlarm() {\r\n        Intent waterReceiverIntent = new Intent(requireContext(), WaterNotificationReceiver.class);\r\n        waterReceiverPendingIntent = PendingIntent.getBroadcast(requireContext(), 0, waterReceiverIntent, PendingIntent.FLAG_IMMUTABLE);\r\n\r\n        if(alarmManager == null) {\r\n            alarmManager = (AlarmManager) requireActivity().getSystemService(Context.ALARM_SERVICE);\r\n        }\r\n\r\n        alarmManager.cancel(waterReceiverPendingIntent);\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    private void cancelNotificationAlarmAtEndOfDay() {\r\n        Intent waterCancelReceiverIntent = new Intent(requireContext(), WaterNotificationCancelReceiver.class);\r\n        waterCancelReceiverIntent.putExtra(\"AlarmToCancel\", waterReceiverPendingIntent);\r\n\r\n        PendingIntent waterCancelReceiverPendingIntent = PendingIntent.getBroadcast(requireContext(), 0, waterCancelReceiverIntent, PendingIntent.FLAG_IMMUTABLE);\r\n\r\n        if(alarmManager == null) {\r\n            alarmManager = (AlarmManager) requireActivity().getSystemService(Context.ALARM_SERVICE);\r\n        }\r\n\r\n        long endOfDay = 86400 * 1000; // 24:00:00\r\n\r\n        alarmManager.set(AlarmManager.RTC_WAKEUP, endOfDay, waterCancelReceiverPendingIntent);\r\n    }\r\n\r\n    private void createNotificationChannel() {\r\n        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            NotificationChannel channel = new NotificationChannel(\"WaterChannelId\", \"Water Tracker\", NotificationManager.IMPORTANCE_HIGH);\r\n            NotificationManager manager = requireActivity().getSystemService(NotificationManager.class);\r\n            manager.createNotificationChannel(channel);\r\n        }\r\n    }\r\n\r\n    String calculateGoal(int goal) {\r\n        int per = 0;\r\n        try {\r\n            per = consumedInDay * 100 / goal;\r\n        } catch (ArithmeticException e) {\r\n            Log.d(\"WaterTrackFrag\", \"Arithmetic Ex, consumedInDay, goal: \" + consumedInDay + \", \" + goal);\r\n        }\r\n        System.out.println(per);\r\n        System.out.println(consumedInDay);\r\n        System.out.println(goal);\r\n        return per + \" %\";\r\n    }\r\n    int calculateGoalReturnInt() {\r\n        int per = 0;\r\n        try {\r\n            per = consumedInDay * 100 / goal;\r\n\r\n        } catch (ArithmeticException e) {\r\n            per= 1724*100/2423;\r\n            Log.d(\"WaterTrackFrag\", \"Arithmetic Ex, consumedInDay, goal: \" + consumedInDay + \", \" + goal);\r\n        }\r\n        System.out.println(per);\r\n        //System.out.println(consumedInDay);\r\n        //System.out.println(goal);\r\n        return per;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/WaterTrackerFragment.java b/app/src/main/java/com/example/infits/WaterTrackerFragment.java
--- a/app/src/main/java/com/example/infits/WaterTrackerFragment.java	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/java/com/example/infits/WaterTrackerFragment.java	(date 1700930336810)
@@ -7,6 +7,7 @@
 import android.app.NotificationChannel;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
+import android.app.ProgressDialog;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -43,7 +44,6 @@
 import com.android.volley.VolleyError;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
-import com.facebook.share.Share;
 import com.google.android.material.slider.Slider;
 
 import org.jetbrains.annotations.NotNull;
@@ -54,14 +54,15 @@
 import java.text.DateFormat;
 import java.text.DecimalFormat;
 import java.text.SimpleDateFormat;
-import java.time.LocalDateTime;
-import java.time.format.DateTimeFormatter;
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Date;
 import java.util.HashMap;
+import java.util.LinkedHashSet;
+import java.util.List;
 import java.util.Locale;
 import java.util.Map;
+import java.util.Set;
 
 public class WaterTrackerFragment extends Fragment {
 
@@ -76,6 +77,10 @@
     float goalWater;
     static int goal = 1800;
 
+
+    List<String> pastDrink;   //for storing previous drinkConsumed
+    Set<String> setPastDrink;
+
     ProgressBar progressBar;
     int consumedInDay;
 
@@ -89,7 +94,7 @@
     private String mParam1;
     private String mParam2;
 
-    private int progr = 0;
+    private final int progr = 0;
     SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd H:m:s", Locale.getDefault());
     SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss", Locale.getDefault());
     Date date = new Date();
@@ -139,7 +144,18 @@
 //        progressBar = (ProgressBar) view.findViewById(R.id.progress_barr);
 //        CircularProgressIndicator circularProgress = view.findViewById(R.id.progress_barr);
 
-        SharedPreferences preConsumed = getContext().getApplicationContext().getSharedPreferences("preStoredDrinkData", MODE_PRIVATE);
+//        SharedPreferences preConsumed = getContext().getApplicationContext().getSharedPreferences("preStoredDrinkData", MODE_PRIVATE);
+//        setPastDrink = preConsumed.getStringSet("Prev_Array",new LinkedHashSet<>());
+//
+//        if(setPastDrink.size() >0){
+//            pastDrink = new ArrayList<>(setPastDrink);
+//            for (int i=0;i<pastDrink.size();i++) {
+//                Log.i("pastDrink["+i+"]", "val on retrieve :" + pastDrink.get(i));
+//            }
+//        }else {
+//            Toast.makeText(getContext(), "pastDrink is null", Toast.LENGTH_SHORT).show();
+//        }
+
 
         addliq = view.findViewById(R.id.addliq);
         decliq = view.findViewById(R.id.decliq);
@@ -152,8 +168,10 @@
         waterGoal = view.findViewById(R.id.water_goal);
         reminder = view.findViewById(R.id.reminder);
         rc = view.findViewById(R.id.past_activity);
+
         getLatestWaterData();
         //updateProgressBar();
+
         if (DataFromDatabase.waterGoal.equals(null) || DataFromDatabase.waterGoal.equalsIgnoreCase("null")) {
             waterGoal.setText("0 ml");
         } else {
@@ -182,8 +200,6 @@
             }
         }
 
-        getLatestWaterData();
-
         calendar = Calendar.getInstance();
         Log.d("water", "currHour: " + calendar.get(Calendar.HOUR_OF_DAY));
 
@@ -214,21 +230,16 @@
             TextView r7 = dialog.findViewById(R.id.r7);
             close_dialog.setOnClickListener(v -> dialog.dismiss());
 
-            //  Button setGoalBtn = dialog.findViewById(R.id.set_water_goal);
-
-            selectedGoal.setText(String.valueOf(goal_slider.getValue())+" L");
+            selectedGoal.setText(goal_slider.getValue() +" L");
 
             goal_slider.setCustomThumbDrawable(R.drawable.thumb_for_water_draw);
-
             goal_slider.addOnChangeListener((slider, value, fromUser) -> {
                 DecimalFormat df = new DecimalFormat("0.0");
                 selectedGoal.setText(df.format(slider.getValue())+ " L");
                 int pickedNumber = Integer.parseInt(numberPickerText.getText().toString());
                 int selected_val = (int) ((value*1000)/pickedNumber);
-                selectedGlass.setText(String.valueOf(selected_val) +" Glass");
+                selectedGlass.setText(selected_val +" Glass");
             });
-
-
 
             up_arrow.setOnClickListener(v -> {
                 int pickedNumber = Integer.parseInt(numberPickerText.getText().toString());
@@ -291,17 +302,17 @@
                 int goalInt = (int) (goal_slider.getValue() * 1000);
                 final String[] goaltxt = {String.valueOf(goalInt)};
 
-                goal = Integer.parseInt(goaltxt[0].toString());
+                goal = Integer.parseInt(goaltxt[0]);
                 Log.d("Goal",String.valueOf(goal));
 
-                waterGoal.setText(goaltxt[0].toString() + " ml");
+                waterGoal.setText(goaltxt[0] + " ml");
                 waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));
                 consumedInDay = 0;
 
 
-                //String url = String.format("%supdatewatergoal.php",DataFromDatabase.ipConfig);
+                String url = String.format("%supdatewatergoal.php",DataFromDatabase.ipConfig);
                 // String url =  DataFromDatabase.ipConfig +"watergoalupdate.php";
-                String url = "https://infits.in/androidApi/updatewatergoal.php";
+                // String url = "https://infits.in/androidApi/updatewatergoal.php";
                 StringRequest stringRequest = new StringRequest(Request.Method.POST, url,
                         response -> {
 
@@ -316,8 +327,8 @@
                                 if (goal!=newGoal) {
                                     goaltxt[0] = (String.valueOf(newGoal));
                                     waterGoalPercent.setText(String.valueOf(calculateGoal(newGoal)));
-                                    getLatestWaterData();
-                                }
+                                }
+                                getLatestWaterData();
                             } catch (Exception e) {
                                 e.printStackTrace();
                                 Log.d("response;;", "JSON parsing error."+e);
@@ -345,7 +356,6 @@
                         data.put("dietitianuserID",DataFromDatabase.dietitianuserID);
 
 
-
                         Log.i("goal uploaded", "data uploaded date="+sdf.format(date)+"\n"+
                                 "goal:"+goal+"\n"+
                                 "clientuserID:"+DataFromDatabase.clientuserID+"\n"+
@@ -375,13 +385,12 @@
                 dialog.dismiss();
             });
 
-
-
             dialog.show();
             waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));
 
         });
 
+        //for adding liquid
         addliq.setOnClickListener(v -> {
             final Dialog dialog = new Dialog(getActivity());
             dialog.setCancelable(true);
@@ -450,132 +459,64 @@
             choosed.setText(String.valueOf(slider.getValue()));
 
             addDrank.setOnClickListener(v1 -> {
-
-                SharedPreferences.Editor editor = preConsumed.edit();
-                editor.putInt("prevConsumedInt",(int) Float.parseFloat(choosed.getText().toString()));
-                editor.putString("drinkType",liqType);
-                editor.apply();
-
+                if(goal == 0)
+                    Toast.makeText(getContext(), "Daily goal not set", Toast.LENGTH_SHORT).show();
+                else {
+                    int selectedDrink = (int) Float.parseFloat(choosed.getText().toString());
 
-                consumedInDay = (int) Float.parseFloat(choosed.getText().toString());
-                //consumed.setText(consumedInDay);
+                    consumedInDay = (int) Float.parseFloat(choosed.getText().toString());
 
-
-//                    int progress = (goal*value[0])/100; // setting progress
-//                    circularProgress.setProgress(progress, goal); // Added max to goal
-                if(consumedInDay >= goal) {
-                    cancelNotificationAlarm();
-                    updateInAppNotifications(goal);
-                }
+                    if(consumedInDay >= goal) {
+                        cancelNotificationAlarm();
+                        updateInAppNotifications(goal);
+                    }
 
-                dialog.dismiss();
-//                    String url = String.format("%swatertracker.php", DataFromDatabase.ipConfig);
-//                    StringRequest request = new StringRequest(Request.Method.POST, url, response -> {
-//                        if (response.equals("updated")) {
-//                            consumed.setText(consumedInDay + " ml");
-//                            waterGoalPercent.setText(String.valueOf(calculateGoal()));
-//                        } else {
-//                            Toast.makeText(getActivity(), "Not working", Toast.LENGTH_SHORT).show();
-//                        }
-//                    }, error -> {
-//                        Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();
-//                    }) {
-//                        @Nullable
-//                        @Override
-//                        protected Map<String, String> getParams() throws AuthFailureError {
-//                            Date date = new Date();
-//                            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
-//                            sdf.format(date);
-//                            Map<String, String> data = new HashMap<>();
-//                            SimpleDateFormat stf = new SimpleDateFormat("HH:mm:ss");
-//                            data.put("userID", DataFromDatabase.clientuserID);
-//                            data.put("date", String.valueOf(date));
-//                            data.put("consumed", String.valueOf(consumedInDay));
-//                            data.put("goal", String.valueOf(goal));
-//                            data.put("time", stf.format(date));
-//                            data.put("type", liqType);
-//                            data.put("amount", String.valueOf(value[0]));
-//                            return data;
-//                        }
-//                    };
-//                    Date date = new Date();
-//                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
-//                    Log.d("date", sdf.format(date));
-//                    Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);
+                    dialog.dismiss();
 
-//                    updateLastRecord();
-
-                //String url = String.format("%supdatewatertracker.php", DataFromDatabase.ipConfig);
-                //String url = DataFromDatabase.ipConfig+"updateWatertracker.php";
-                String url = String.format("%supdateWatertracker.php",DataFromDatabase.ipConfig);
+                    String url = String.format("%supdateWatertracker.php",DataFromDatabase.ipConfig);
 
-                //  String url = "https://infits.in/androidApi/updateWatertracker.php";
+                    // String url = "https://infits.in/androidApi/updateWatertracker.php";
 
-                StringRequest request = new StringRequest(Request.Method.POST, url, response -> {
-                    try {
-                        Log.i("response from server", "onCreateView: response:"+response);
-                        JSONObject jsonObject=new JSONObject(response);
-                        String amount=jsonObject.getString("total");
-                        consumedInDay= Integer.parseInt(amount);
-                        //String total=jsonObject.getString("total");
-                        consumed.setText(consumedInDay);
-                        waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));
-//                        circularProgress.setProgress(calculateGoalReturnInt(),100);
-                        lottieAnimationViewWater.setAnimation(R.raw.water_loading_animation_bottle);
-                        int durationOfAnimationFromLottie = 6000;
-                        int durationOfWaterAnimation = (durationOfAnimationFromLottie*calculateGoalReturnInt()/100)-500;
-                        lottieAnimationViewWater.playAnimation();
-                        new Handler().postDelayed(new Runnable() {
-                                                      @Override
-                                                      public void run() {
-                                                          lottieAnimationViewWater.pauseAnimation();
-                                                      }
-                                                  },durationOfWaterAnimation
-                        );
-                        // consumed.setText(String.valueOf(consumedInDay));
+                    StringRequest request = new StringRequest(Request.Method.POST, url, response -> {
+                        Log.e("drunk", "onCreateView: "+response );
+                        Toast.makeText(getContext(), "updated", Toast.LENGTH_SHORT).show();
                         pastActivity();
-                    } catch (JSONException e) {
-                        Log.d("response","error");
-                        e.printStackTrace();
-                    }
-
-                }, error -> {
-                    Log.i("error", "response:"+error);
-                    Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();
-                }) {
-                    @Nullable
-                    @Override
-                    protected Map<String, String> getParams() throws AuthFailureError {
-                        Date date = new Date();
-                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
-                        int amt = (int) Float.parseFloat(choosed.getText().toString());
-                        Map<String, String> data = new HashMap<>();
-                        data.put("client_id", DataFromDatabase.client_id);
-                        data.put("clientuserID", DataFromDatabase.clientuserID);
-                        data.put("dateandtime", sdf.format(date));
-                        data.put("drinkConsumed", String.valueOf(consumedInDay));
-                        data.put("goal", String.valueOf(goal));
-                        data.put("type", liqType);
-                        data.put("amount", String.valueOf(consumedInDay));
-                        data.put("dietitian_id",DataFromDatabase.dietitian_id);
-                        data.put("dietitianuserID",DataFromDatabase.dietitianuserID);
-
-
-                        //  Log.d("update", "consumed: " + consumedInDay);
-                        // Log.d("update", "amount: " + amt);
-                        return data;
-                    }
-                };
-                Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);
-                request.setRetryPolicy(new DefaultRetryPolicy(50000,
-                        DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
-                        DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+                        getLatestWaterData();
+                    }, error -> {
+                        Toast.makeText(getContext(), "error", Toast.LENGTH_SHORT).show();
+                        Log.i("error", "response:"+error);
+                        Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();
+                    }) {
+                        @Nullable
+                        @Override
+                        protected Map<String, String> getParams() throws AuthFailureError {
+                            Date date = new Date();
+                            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
+                            int amt = (int) Float.parseFloat(choosed.getText().toString());
+                            Map<String, String> data = new HashMap<>();
+                            data.put("client_id", DataFromDatabase.client_id);
+                            data.put("clientuserID", DataFromDatabase.clientuserID);
+                            data.put("dateandtime", sdf.format(date));
+                            data.put("drinkConsumed", String.valueOf(consumedInDay));
+                            data.put("goal", String.valueOf(goal));
+                            data.put("type", liqType);
+                            data.put("amount", String.valueOf(consumedInDay));
+                            data.put("dietitian_id",DataFromDatabase.dietitian_id);
+                            data.put("dietitianuserID",DataFromDatabase.dietitianuserID);
+                            return data;
+                        }
+                    };
+                    Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);
+                    request.setRetryPolicy(new DefaultRetryPolicy(50000,
+                            DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                            DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
 
-                // waterGoalPercent
-                if(goal != 0)
-                    waterGoalPercent.setText((consumedInDay * 100) / goal + " %");
-                else{
-                    waterGoalPercent.setText("0 %");
+                    // waterGoalPercent
+                    if(goal != 0)
+                        waterGoalPercent.setText((consumedInDay * 100) / goal + " %");
+                    else{
+                        waterGoalPercent.setText("0 %");
+                    }
                 }
             });
 
@@ -583,85 +524,50 @@
 
         });
 
+        //for deducting liquid
         decliq.setOnClickListener(v -> {
-            int prevConsumedDrink = preConsumed.getInt("prevConsumedInt",0);
-            if(prevConsumedDrink==0){
-                Toast.makeText(getContext(), "not consumed anything", Toast.LENGTH_SHORT).show();
-            }else {
-                int afterDeduc = ((int)Integer.parseInt(consumed.getText().toString()))-prevConsumedDrink;
-                Toast.makeText(getContext(), "data: prevDrink:"+prevConsumedDrink+" diff:"+afterDeduc, Toast.LENGTH_SHORT).show();
-
+            if(consumed.getText().toString().equals("0 ml")){
+                Toast.makeText(getContext(), "Not consumed anything!", Toast.LENGTH_SHORT).show();
+            }else{
                 String url = String.format("%supdateWatertrackerDec.php",DataFromDatabase.ipConfig);
-
-
-                StringRequest request = new StringRequest(Request.Method.POST, url, response -> {
-                    try {
-                        Log.i("response from server", "onCreateView: response:"+response);
-                        JSONObject jsonObject=new JSONObject(response);
-                        String amount=jsonObject.getString("total");
-                        consumedInDay= Integer.parseInt(amount);
-                        //String total=jsonObject.getString("total");
-                        consumed.setText(consumedInDay);
-                        waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));
-//                        circularProgress.setProgress(calculateGoalReturnInt(),100);
-                        lottieAnimationViewWater.setAnimation(R.raw.water_loading_animation_bottle);
-                        int durationOfAnimationFromLottie = 6000;
-                        int durationOfWaterAnimation = (durationOfAnimationFromLottie*calculateGoalReturnInt()/100)-500;
-                        lottieAnimationViewWater.playAnimation();
-                        new Handler().postDelayed(new Runnable() {
-                                                      @Override
-                                                      public void run() {
-                                                          lottieAnimationViewWater.pauseAnimation();
-                                                      }
-                                                  },durationOfWaterAnimation
-                        );
-                        // consumed.setText(String.valueOf(consumedInDay));
-                        pastActivity();
-                    } catch (JSONException e) {
-                        Log.d("response","error");
-                        e.printStackTrace();
+                // String url = "http://192.168.152.231/infits/test.php";
+                StringRequest demoRequest = new StringRequest(Request.Method.POST, url, response -> {
+                    try{
+                        Log.i("dec response", "response: "+response);
+                        JSONObject object = new JSONObject(response);
+                        String msg = object.getString("message");
+                        if(msg.equals("deleted")){
+                            Toast.makeText(getContext(), "Deleted", Toast.LENGTH_SHORT).show();
+                            getLatestWaterData();
+                            pastActivity();
+                            Log.i("dec response", "response: "+response);
+                            //Toast.makeText(getContext(), "response "+ response, Toast.LENGTH_SHORT).show();
+                        } else if (msg.equals("Zeroamount")) {
+                            Log.i("dec response ", "conumedDrink is 0!");
+                        }
+                    }catch (JSONException e){
+                        Log.i("json error while dec", "error response:"+response);
+                        Log.e("json error while dec","Error: "+e.toString());
                     }
-
-                }, error -> {
-                    Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();
-                }) {
-                    @Nullable
+                }, error -> Toast.makeText(getContext(), "error"+error, Toast.LENGTH_SHORT).show()) {
                     @Override
                     protected Map<String, String> getParams() throws AuthFailureError {
-                        Date date = new Date();
-                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
-
                         Map<String, String> data = new HashMap<>();
+                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                         data.put("client_id", DataFromDatabase.client_id);
                         data.put("clientuserID", DataFromDatabase.clientuserID);
                         data.put("dateandtime", sdf.format(date));
-                        data.put("drinkConsumed", String.valueOf(prevConsumedDrink));
                         data.put("goal", String.valueOf(goal));
-                        data.put("type", liqType);
-                        data.put("amount", String.valueOf(prevConsumedDrink));
                         data.put("dietitian_id",DataFromDatabase.dietitian_id);
                         data.put("dietitianuserID",DataFromDatabase.dietitianuserID);
-
-
-                        //  Log.d("update", "consumed: " + consumedInDay);
-                        // Log.d("update", "amount: " + amt);
                         return data;
                     }
                 };
-                Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);
-                request.setRetryPolicy(new DefaultRetryPolicy(50000,
-                        DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
-                        DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
 
-                // waterGoalPercent
-                if(goal != 0)
-                    waterGoalPercent.setText((consumedInDay * 100) / goal + " %");
-                else{
-                    waterGoalPercent.setText("0 %");
-                }
+                Volley.newRequestQueue(getContext()).add(demoRequest);
+                demoRequest.setRetryPolicy(new DefaultRetryPolicy(10000,DefaultRetryPolicy.DEFAULT_MAX_RETRIES,DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
 
             }
-            //   Toast.makeText(getContext(), "not crashed!", Toast.LENGTH_SHORT).show();
         });
 
         imgback.setOnClickListener(new View.OnClickListener() {
@@ -686,61 +592,6 @@
             }
         });
 
-        /*
-        public void onClick(DialogInterface dialog,
-                                int id) {
-                            Dialog f = (Dialog) dialog;
-                            //This is the input I can't get text from
-                            EditText inputTemp = (EditText) f.findViewById(R.id.search_input_text);
-                            query = inputTemp.getText().toString();
-                           ...
-                        }
-         */
-
-//        waterGoal.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View v) {
-//
-//                final Dialog dialog = new Dialog(getContext());
-//                dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
-//                dialog.setCancelable(true);
-//                dialog.setContentView(R.layout.watergoaldialog);
-//
-//                final EditText goal = dialog.findViewById(R.id.goal);
-//                Button button = dialog.findViewById(R.id.button);
-//
-//                button.setOnClickListener(new View.OnClickListener() {
-//                    @Override
-//                    public void onClick(View v) {
-//                        String wGoal = goal.getText().toString();
-//
-//                        //textViewsleep.setText("Goal: "+wGoal);
-//
-//
-//                        float liqAmount = Float.parseFloat(liqAmt);
-//                        //textViewsleep.setText("Goal: "+wGoal);
-//
-//
-//                        float res = (liqAmount/Float.parseFloat(wGoal)) *100;
-//
-//                        wgoalperc.setText((int)res+ " %");
-//
-//                        goalWater = Float.parseFloat(wGoal);
-//
-//                        dialog.dismiss();
-//
-//                    }
-//                });
-//
-//                dialog.show();
-//
-//                //Navigation.findNavController(v).navigate(R.id.action_waterTrackerFragment_to_addLiquidFragment);
-//            }
-//        });
-
-        //textViewsleep.setText("Goal: "+goalWater);
-
-
         return view;
     }
 
@@ -755,8 +606,8 @@
         ArrayList<String> datas = new ArrayList<>(); // ArrayList for past Activity
         ArrayList<String> fetchedDateswater=new ArrayList<>();
         fetchedDateswater.clear();
-        //String url = String.format("%spastActivitywater.php", DataFromDatabase.ipConfig);
-        String url = "https://infits.in/androidApi/pastActivitywater.php";
+        String url = String.format("%spastActivitywater.php", DataFromDatabase.ipConfig);
+        //String url = "https://infits.in/androidApi/pastActivitywater.php";
 
         DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
         StringRequest stringRequest = new StringRequest(Request.Method.POST, url, response -> {
@@ -772,41 +623,13 @@
                     datas.add(jsonArray.getJSONObject(i).getString("water"));
                     Log.d("watt",datas.toString());
                 }
-//                for (int i=0;i<5;i++){ //noOfDays
-//                    Calendar cal = Calendar.getInstance();
-////                    cal.add(Calendar.DATE, -i);
-//                    Log.d("featched",fetchedDateswater.toString());
-//                    //Log.d("currentInstance",dateFormat.format(cal.getTime()).toString());
-//                    if(fetchedDateswater.contains(dateFormat.format(cal.getTime()).toString())==true){
-//                        int index=fetchedDateswater.indexOf(dateFormat.format(cal.getTime()));
-//                        Log.d("index",String.valueOf(index));
-//                        JSONObject object=jsonArray.getJSONObject(index);
-//                        dates.add(dateFormat.format(cal.getTime()));
-//                        //String data=object.getString("water");
-//                        //datas.add(data);
-//                    }
-//                    else {
-//                        dates.add(dateFormat.format(cal.getTime()));
-//                        //datas.add("0");
-//                    }
-//                }
-
-
-//                    for (int i = 0; i < jsonArray.length(); i++) {
-//                        JSONObject object = jsonArray.getJSONObject(i);
-//                        String data = object.getString("water");
-//                        String date = object.getString("date");
-//                        dates.add(date);
-//                        datas.add(data);
-//                        System.out.println(datas.get(i));
-//                        System.out.println(dates.get(i));
-//                }
 
                 AdapterForPastActivity ad = new AdapterForPastActivity(getContext(), fetchedDateswater, datas, Color.parseColor("#76A5FF"));
                 rc.setLayoutManager(new LinearLayoutManager(getContext()));
                 rc.setAdapter(ad);
             } catch (JSONException e) {
                 e.printStackTrace();
+                Log.e("pastActivity", "pastActivity: "+e );
             }
         }, error -> {
             Toast.makeText(getActivity().getApplicationContext(), error.toString(), Toast.LENGTH_SHORT).show();
@@ -873,8 +696,8 @@
     }
 
     private void getLatestWaterData() {
-        //String url = String.format("%sgetLatestWaterdt.php", DataFromDatabase.ipConfig);
-        String url = "https://infits.in/androidApi/getLatestWaterdt.php";
+        String url = String.format("%sgetLatestWaterdt.php", DataFromDatabase.ipConfig);
+        // String url = "https://infits.in/androidApi/getLatestWaterdt.php";
 
         StringRequest request = new StringRequest(Request.Method.POST, url,
                 response -> {
@@ -895,7 +718,7 @@
                             try {
                                 waterGoalPercent.setText((consumedInDay * 100) / goal + " %");
                             }catch (ArithmeticException e){
-                                Toast.makeText(getContext(), "Cannot be divided by zero: error"+e.toString(), Toast.LENGTH_SHORT).show();
+                                Toast.makeText(getContext(), "Cannot be divided by zero: error"+ e, Toast.LENGTH_SHORT).show();
                             }
 
                             consumed.setText(consumedInDay + " ml");
@@ -910,7 +733,7 @@
                                                           }
                                                       },durationOfWaterAnimation
                             );
-                            consumed.setText(String.valueOf(consumedInDay));
+                            consumed.setText(String.valueOf(consumedInDay)+ " ml");
                         }
 
                     } catch (JSONException e) {
@@ -974,8 +797,8 @@
     }
 
     private void createNewEntry() {
-        //String url = String.format("%swatertracker.php",DataFromDatabase.ipConfig);
-        String url = "https://infits.in/androidApi/watertracker.php";
+        String url = String.format("%swatertracker.php",DataFromDatabase.ipConfig);
+        //  String url = "https://infits.in/androidApi/watertracker.php";
         StringRequest request = new StringRequest(Request.Method.POST,url, response -> {
             consumed.setText(consumedInDay +" ml");
             waterGoalPercent.setText(String.valueOf(calculateGoal(goal)));
Index: .idea/modules/app/Infits.app.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"android\" name=\"Android\">\r\n      <configuration>\r\n        <option name=\"SELECTED_BUILD_VARIANT\" value=\"debug\" />\r\n        <option name=\"ALLOW_USER_CONFIGURATION\" value=\"false\" />\r\n        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/src/main/AndroidManifest.xml\" />\r\n        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/src/main/res\" />\r\n        <option name=\"RES_FOLDERS_RELATIVE_PATH\" value=\"file://$MODULE_DIR$/../../../app/src/main/res;file://$MODULE_DIR$/../../../app/src/debug/res;file://$MODULE_DIR$/../../../app/build/generated/res/rs/debug;file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug\" />\r\n        <option name=\"TEST_RES_FOLDERS_RELATIVE_PATH\" value=\"\" />\r\n        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/src/main/assets\" />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$/../../../app/src/main\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/assets\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/res\" type=\"java-resource\" />\r\n    </content>\r\n    <content url=\"file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug\" isTestSource=\"false\" generated=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug\" isTestSource=\"false\" generated=\"true\" />\r\n    </content>\r\n    <content url=\"file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug\" type=\"java-resource\" />\r\n    </content>\r\n    <content url=\"file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out\" isTestSource=\"false\" generated=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out\" isTestSource=\"false\" generated=\"true\" />\r\n    </content>\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/app/Infits.app.main.iml b/.idea/modules/app/Infits.app.main.iml
--- a/.idea/modules/app/Infits.app.main.iml	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/.idea/modules/app/Infits.app.main.iml	(date 1700145636837)
@@ -14,10 +14,9 @@
     </facet>
   </component>
   <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$/../../../app/src/main">
-      <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/assets" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/res" type="java-resource" />
+    <content url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out">
+      <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out" isTestSource="false" generated="true" />
     </content>
     <content url="file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug">
       <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
@@ -26,9 +25,10 @@
     <content url="file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug">
       <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug" type="java-resource" />
     </content>
-    <content url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out">
-      <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out" isTestSource="false" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out" isTestSource="false" generated="true" />
+    <content url="file://$MODULE_DIR$/../../../app/src/main">
+      <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/res" type="java-resource" />
     </content>
   </component>
 </module>
\ No newline at end of file
Index: app/src/main/java/com/example/infits/SleepTrackerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\n\r\nimport android.app.Activity;\r\nimport android.app.ActivityManager;\r\nimport android.app.Notification;\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.app.TaskStackBuilder;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.os.Handler;\r\nimport android.os.PowerManager;\r\nimport android.provider.AlarmClock;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.NetworkError;\r\nimport com.android.volley.NoConnectionError;\r\nimport com.android.volley.ParseError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.RetryPolicy;\r\nimport com.android.volley.ServerError;\r\nimport com.android.volley.TimeoutError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\n\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\npublic class SleepTrackerFragment extends Fragment {\r\n\r\n    String sleep;\r\n    String hours, minutes, secs;\r\n\r\n    Button setalarm, startcycle, endcycle;\r\n    ImageView imgback, reminder;\r\n    TextView texttime, tvDuration;\r\n    Calendar calendar;\r\n    SimpleDateFormat simpleDateFormat;\r\n    String timerTime;\r\n\r\n    private int seconds;\r\n    private boolean running;\r\n    private boolean wasRunning;\r\n\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public SleepTrackerFragment() {\r\n\r\n    }\r\n\r\n    public static SleepTrackerFragment newInstance(String param1, String param2) {\r\n        SleepTrackerFragment fragment = new SleepTrackerFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n\r\n        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                if(getArguments() != null && getArguments().getBoolean(\"notification\") /* coming from notification */) {\r\n                    startActivity(new Intent(getActivity(),DashBoardMain.class));\r\n                    requireActivity().finish();\r\n                } else {\r\n                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_sleepTrackerFragment_to_dashBoardFragment);\r\n                }\r\n            }\r\n        };\r\n        requireActivity().getOnBackPressedDispatcher().addCallback(this, callback);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_sleep_tracker, container, false);\r\n\r\n        RecyclerView pastActivity = view.findViewById(R.id.past_activity);\r\n\r\n        ArrayList<String> dates = new ArrayList<>();\r\n        ArrayList<String> datas = new ArrayList<>();\r\n\r\n        // String url = String.format(\"%spastActivitySleep.php\",DataFromDatabase.ipConfig);\r\n        String url = \"https://infits.in/androidApi/pastActivitySleep.php\";\r\n        int customTimeout = 15000; // 15 seconds (you can adjust this)\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, url, response -> {\r\n            try {\r\n                Log.d(\"response123\", response.toString());\r\n                JSONObject jsonObject = new JSONObject(response);\r\n                JSONArray jsonArray = jsonObject.getJSONArray(\"sleep\");\r\n                for (int i = 0; i < jsonArray.length(); i++) {\r\n                    JSONObject object = jsonArray.getJSONObject(i);\r\n                    String data = object.getString(\"hrsSlept\");\r\n                    String date = object.getString(\"date\");\r\n                    dates.add(date);\r\n                    datas.add(data);\r\n                    System.out.println(datas.get(i));\r\n                    System.out.println(dates.get(i));\r\n                }\r\n                AdapterForPastActivity ad = new AdapterForPastActivity(getContext(), dates, datas, Color.parseColor(\"#9C74F5\"));\r\n                pastActivity.setLayoutManager(new LinearLayoutManager(getContext()));\r\n                pastActivity.setAdapter(ad);\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }, error -> {\r\n            if (error instanceof NetworkError) {\r\n                // Handle network-related errors\r\n                Toast.makeText(getActivity().getApplicationContext(), \"Network Error\", Toast.LENGTH_SHORT).show();\r\n            } else if (error instanceof ServerError) {\r\n                // Handle server errors\r\n                Toast.makeText(getActivity().getApplicationContext(), \"Server Error\", Toast.LENGTH_SHORT).show();\r\n            } else if (error instanceof ParseError) {\r\n                // Handle parse errors\r\n                Toast.makeText(getActivity().getApplicationContext(), \"Parse Error\", Toast.LENGTH_SHORT).show();\r\n            } else if (error instanceof NoConnectionError) {\r\n                // Handle no connection errors\r\n                Toast.makeText(getActivity().getApplicationContext(), \"No Connection Error\", Toast.LENGTH_SHORT).show();\r\n            } else if (error instanceof TimeoutError) {\r\n                // Handle timeout errors\r\n                Toast.makeText(getActivity().getApplicationContext(), \"Timeout Error for loading previous activity\", Toast.LENGTH_SHORT).show();\r\n            } else {\r\n                // Handle other errors\r\n                Toast.makeText(getActivity().getApplicationContext(), \"Other Error: \" + error.toString(), Toast.LENGTH_SHORT).show();\r\n            }\r\n            Log.d(\"Error\", error.toString());\r\n            Log.d(\"Error\", error.toString());\r\n        }) {\r\n            @Override\r\n            public RetryPolicy getRetryPolicy() {\r\n                return new DefaultRetryPolicy(customTimeout, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);\r\n            }\r\n\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> data = new HashMap<>();\r\n                data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                return data;\r\n            }\r\n        };\r\n\r\n// Add the request to the request queue (assuming you have a RequestQueue instance)\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getContext());\r\n        requestQueue.add(stringRequest);\r\n\r\n\r\n        PowerManager powerManager = null;\r\n        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\r\n            powerManager = (PowerManager) getActivity().getSystemService(getActivity().POWER_SERVICE);\r\n        }\r\n        PowerManager.WakeLock wakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,\r\n                \"MyApp::MyWakelockTag\");\r\n        wakeLock.acquire();\r\n\r\n        imgback = view.findViewById(R.id.imgback);\r\n        setalarm = view.findViewById(R.id.setalarm);\r\n        startcycle = view.findViewById(R.id.startcycle);\r\n        endcycle = view.findViewById(R.id.endcycle);\r\n        texttime = view.findViewById(R.id.texttime);\r\n        tvDuration = view.findViewById(R.id.tvDuration);\r\n        reminder = view.findViewById(R.id.reminder);\r\n\r\n        tvDuration.setVisibility(View.INVISIBLE);\r\n\r\n        if(getArguments() != null && getArguments().getBoolean(\"notification\")) {\r\n            texttime.setText(getArguments().getString(\"sleepTime\"));\r\n            tvDuration.setVisibility(View.VISIBLE);\r\n            tvDuration.setText(\"You slept for \" + getArguments().getString(\"sleepTime\"));\r\n        }\r\n\r\n        if (foregroundServiceRunning()){\r\n            endcycle.setVisibility(View.VISIBLE);\r\n            startcycle.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!foregroundServiceRunning()){\r\n            endcycle.setVisibility(View.GONE);\r\n            startcycle.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n        getActivity().registerReceiver(broadcastReceiver,new IntentFilter(\"com.example.infits.sleep\"));\r\n\r\n        calendar = Calendar.getInstance();\r\n        simpleDateFormat = new SimpleDateFormat(\"HH:mm\");\r\n        String time = simpleDateFormat.format(calendar.getTime());\r\n\r\n        if(savedInstanceState != null) {\r\n            savedInstanceState.getInt(\"seconds\");\r\n            savedInstanceState.getBoolean(\"running\");\r\n            savedInstanceState.getBoolean(\"wasRunning\");\r\n        }\r\n\r\n//        runTimer();\r\n\r\n\r\n        imgback.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(getArguments() != null && getArguments().getBoolean(\"notification\") /* coming from notification */) {\r\n                    startActivity(new Intent(getActivity(),DashBoardMain.class));\r\n                    requireActivity().finish();\r\n                } else {\r\n                    Navigation.findNavController(v).navigate(R.id.action_sleepTrackerFragment_to_dashBoardFragment);\r\n                }\r\n            }\r\n        });\r\n\r\n        reminder.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_sleepTrackerFragment_to_sleepReminderFragment));\r\n\r\n        setalarm.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent mClockIntent = new Intent(AlarmClock.ACTION_SHOW_ALARMS);\r\n                mClockIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(mClockIntent);\r\n            }\r\n        });\r\n\r\n\r\n        startcycle.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Date date = new Date();\r\n                Calendar calendar = Calendar.getInstance();\r\n                calendar.setTime(date);\r\n                SimpleDateFormat sleepTime = new SimpleDateFormat(\"yyyy-MM-dd H:m:s\");\r\n                SharedPreferences sharedPreferences = getActivity().getSharedPreferences(\"MySharedPref\",Context.MODE_PRIVATE);\r\n\r\n                SharedPreferences.Editor myEdit = sharedPreferences.edit();\r\n\r\n                myEdit.putString(\"sleepTime\", sleepTime.format(date));\r\n                myEdit.commit();\r\n                calendar.add(Calendar.HOUR_OF_DAY, 8);\r\n                tvDuration.setVisibility(View.VISIBLE);\r\n                SimpleDateFormat sim = new SimpleDateFormat(\"HH:mm\");\r\n                tvDuration.setText(\"Optimal time to wake up is \"+sim.format(calendar.getTime()));\r\n                startcycle.setVisibility(View.GONE);\r\n                endcycle.setVisibility(View.VISIBLE);\r\n                if (!foregroundServiceRunning()) {\r\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                        Intent intent = new Intent(getActivity(), StopWatchService.class);\r\n                        getActivity().startForegroundService(new Intent(getActivity(), StopWatchService.class));\r\n                    }\r\n                    sleep = \"\";\r\n                    getActivity().registerReceiver(broadcastReceiver, new IntentFilter(\"com.example.infits.sleep\"));\r\n                }\r\n            }\r\n        });\r\n\r\n        endcycle.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String time = sleep;\r\n                endcycle.setVisibility(View.GONE);\r\n                startcycle.setVisibility(View.VISIBLE);\r\n                Intent i = new Intent(getActivity(), StopWatchService.class);\r\n                i.putExtra(\"status\", true);\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                    getActivity().getApplicationContext().stopService(new Intent(getActivity(), StopWatchService.class));\r\n                }\r\n                getActivity().unregisterReceiver(broadcastReceiver);\r\n                tvDuration.setText(\"You slept for \" + sleep);\r\n\r\n                updateInAppNotifications(hours, minutes, secs);\r\n\r\n                SharedPreferences notificationPrefs = requireActivity().getSharedPreferences(\"notificationDetails\", MODE_PRIVATE);\r\n                boolean sleepNotificationPermission = notificationPrefs.getBoolean(\"sleepSwitch\", false);\r\n\r\n                if (sleepNotificationPermission) {\r\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                        Log.d(\"sleep\", \"permitted\");\r\n                        NotificationChannel channel = new NotificationChannel(\r\n                                \"SleepChannelId\",\r\n                                \"Sleep Tracker\",\r\n                                NotificationManager.IMPORTANCE_HIGH\r\n                        );\r\n                        channel.setLightColor(Color.BLUE);\r\n                        channel.setLockscreenVisibility(Notification.VISIBILITY_SECRET);\r\n\r\n                        NotificationManager manager = (NotificationManager) requireActivity().getSystemService(Context.NOTIFICATION_SERVICE);\r\n                        manager.createNotificationChannel(channel);\r\n\r\n                        String sleptFor = \"You slept for \" + hours + \" hours, \" + minutes + \" minutes, \" + secs + \" seconds.\";\r\n\r\n                        Intent intent = new Intent(requireContext(), SplashScreen.class);\r\n                        intent.putExtra(\"notification\", \"sleep\");\r\n                        intent.putExtra(\"hours\", hours);\r\n                        intent.putExtra(\"minutes\", minutes);\r\n                        intent.putExtra(\"secs\", secs);\r\n\r\n                        PendingIntent pendingIntent = PendingIntent.getActivity(requireContext(), 0, intent, PendingIntent.FLAG_IMMUTABLE);\r\n\r\n                        NotificationCompat.Builder builder = new NotificationCompat.Builder(requireContext(), \"SleepChannelId\");\r\n                        Notification goalReachedNotification = builder.setOngoing(false)\r\n                                .setSmallIcon(R.mipmap.logo)\r\n                                .setContentTitle(\"Sleep Tracker\")\r\n                                .setContentText(sleptFor)\r\n                                .setChannelId(\"SleepChannelId\")\r\n                                .setContentIntent(pendingIntent)\r\n                                .setAutoCancel(true)\r\n                                .build();\r\n\r\n                        manager.notify(2, goalReachedNotification);\r\n                    }\r\n                }\r\n\r\n                // String url=String.format(\"%ssleepTracker.php\", DataFromDatabase.ipConfig);\r\n                String url = \"https://infits.in/androidApi/sleepTracker.php\";\r\n\r\n                StringRequest request = new StringRequest(Request.Method.POST, url, response -> {\r\n                    if (response.equals(\"updated\")) {\r\n                        Toast.makeText(getActivity(), \"Good Morning\", Toast.LENGTH_SHORT).show();\r\n                        // After successfully updating the data on the server, update the RecyclerView\r\n                        updateRecyclerViewData(pastActivity);\r\n                    } else {\r\n                        System.out.println(response);\r\n                        Toast.makeText(getActivity(), \"Not working\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }, error -> {\r\n\r\n                    if (error instanceof NetworkError) {\r\n                        // Handle network-related errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Network Error\", Toast.LENGTH_SHORT).show();\r\n                    } else if (error instanceof ServerError) {\r\n                        // Handle server errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Server Error\", Toast.LENGTH_SHORT).show();\r\n                    } else if (error instanceof ParseError) {\r\n                        // Handle parse errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Parse Error\", Toast.LENGTH_SHORT).show();\r\n                    } else if (error instanceof NoConnectionError) {\r\n                        // Handle no connection errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"No Connection Error\", Toast.LENGTH_SHORT).show();\r\n                    } else if (error instanceof TimeoutError) {\r\n                        // Handle timeout errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Timeout Error\", Toast.LENGTH_SHORT).show();\r\n                    } else {\r\n                        // Handle other errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Other Error: \" + error.toString(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    Log.d(\"Error\", error.toString());\r\n                })\r\n                {\r\n                    @Override\r\n                    public RetryPolicy getRetryPolicy() {\r\n                        return new DefaultRetryPolicy(customTimeout, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);\r\n                    }\r\n\r\n                    @Nullable\r\n                    @Override\r\n                    protected Map<String, String> getParams() throws AuthFailureError {\r\n                        SharedPreferences sh = getActivity().getSharedPreferences(\"MySharedPref\", MODE_PRIVATE);\r\n\r\n                        String sleepTime = sh.getString(\"sleepTime\", \"\");\r\n\r\n                        Date date = new Date();\r\n                        String pat = \"dd-MM-yyyy H:m:s\";\r\n                        SimpleDateFormat sdf = new SimpleDateFormat(pat);\r\n                        Map<String, String> data = new HashMap<>();\r\n                        data.put(\"userID\", DataFromDatabase.clientuserID);\r\n                        data.put(\"sleeptime\", sleepTime);\r\n                        data.put(\"waketime\", sdf.format(date));\r\n                        data.put(\"timeslept\", time);\r\n                        //   System.print(\"hi\" + time);\r\n                        data.put(\"goal\", \"8\");\r\n                        data.put(\"hrsslept\", hours);\r\n                        data.put(\"minsslept\", minutes);\r\n                        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy-MM-dd H:m:s\");\r\n                        LocalDateTime now = LocalDateTime.now();\r\n                        data.put(\"date\", dtf.format(now));\r\n                        Log.d(\"sleep\", \"userId: \" + DataFromDatabase.clientuserID);\r\n                        Log.d(\"sleep\", \"sleepTime: \" + sleepTime);\r\n                        Log.d(\"sleep\", \"wakeTime: \" + sdf.format(date));\r\n                        Log.d(\"sleep\", \"timeSlept: \" + time);\r\n                        Log.d(\"sleep\", \"goal: \" + 8);\r\n                        Log.d(\"sleep\", \"hrsSlept: \" + hours);\r\n                        Log.d(\"sleep\", \"minSlept: \" + minutes);\r\n                        Log.d(\"sleep\", dtf.format(now));\r\n                        return data;\r\n                    }\r\n                };\r\n                Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);\r\n                sleep = \"\";\r\n\r\n                SharedPreferences sleepPrefs = requireActivity().getSharedPreferences(\"sleepPrefs\", MODE_PRIVATE);\r\n                SharedPreferences.Editor editor = sleepPrefs.edit();\r\n\r\n                editor.putString(\"hours\", hours);\r\n                editor.putString(\"minutes\", minutes);\r\n\r\n                editor.apply();\r\n            }\r\n\r\n            private void updateRecyclerViewData(RecyclerView pastActivity) {\r\n                String url = \"https://infits.in/androidApi/pastActivitySleep.php\";\r\n                //String url = \"http://10.12.2.128/infits/pastActivitySleep.php\";\r\n                StringRequest stringRequest = new StringRequest(Request.Method.POST, url, response -> {\r\n                    try {\r\n                        Log.d(\"response123\", response.toString());\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"sleep\");\r\n                        ArrayList<String> dates = new ArrayList<>();\r\n                        ArrayList<String> datas = new ArrayList();\r\n                        for (int i = 0; i < jsonArray.length(); i++) {\r\n                            JSONObject object = jsonArray.getJSONObject(i);\r\n                            String data = object.getString(\"hrsSlept\");\r\n                            String date = object.getString(\"date\");\r\n                            dates.add(date);\r\n                            datas.add(data);\r\n                            System.out.println(datas.get(i));\r\n                            System.out.println(dates.get(i));\r\n                        }\r\n                        AdapterForPastActivity ad = new AdapterForPastActivity(getContext(), dates, datas, Color.parseColor(\"#9C74F5\"));\r\n                        pastActivity.setLayoutManager(new LinearLayoutManager(getContext()));\r\n                        pastActivity.setAdapter(ad);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }, error -> {\r\n\r\n                    if (error instanceof NetworkError) {\r\n                        // Handle network-related errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Network Error\", Toast.LENGTH_SHORT).show();\r\n                    } else if (error instanceof ServerError) {\r\n                        // Handle server errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Server Error\", Toast.LENGTH_SHORT).show();\r\n                    } else if (error instanceof ParseError) {\r\n                        // Handle parse errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Parse Error\", Toast.LENGTH_SHORT).show();\r\n                    } else if (error instanceof NoConnectionError) {\r\n                        // Handle no connection errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"No Connection Error\", Toast.LENGTH_SHORT).show();\r\n                    } else if (error instanceof TimeoutError) {\r\n                        // Handle timeout errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Timeout Error for past activity\", Toast.LENGTH_SHORT).show();\r\n                    } else {\r\n                        // Handle other errors\r\n                        Toast.makeText(getActivity().getApplicationContext(), \"Other Error: \" + error.toString(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    Log.d(\"Error\", error.toString());\r\n                }) {\r\n                    //                    @Override\r\n//                    public RetryPolicy getRetryPolicy() {\r\n//                        return new DefaultRetryPolicy(customTimeout, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);\r\n//                    }\r\n                    @Nullable\r\n                    @Override\r\n                    protected Map<String, String> getParams() throws AuthFailureError {\r\n                        Map<String, String> data = new HashMap<>();\r\n                        data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                        return data;\r\n                    }\r\n                };\r\n\r\n                Volley.newRequestQueue(getActivity()).add(stringRequest);\r\n            }\r\n        });\r\n        return view;\r\n\r\n    }\r\n\r\n    private void updateInAppNotifications(String hours, String minutes, String secs) {\r\n        SharedPreferences inAppPrefs = requireActivity().getSharedPreferences(\"inAppNotification\", MODE_PRIVATE);\r\n        SharedPreferences.Editor inAppEditor = inAppPrefs.edit();\r\n        inAppEditor.putBoolean(\"newNotification\", true);\r\n        inAppEditor.apply();\r\n\r\n        // String inAppUrl = String.format(\"%sinAppNotifications.php\", DataFromDatabase.ipConfig);\r\n        String inAppUrl = \"https://infits.in/androidApi/inAppNotifications.php\";\r\n\r\n        String type = \"sleep\";\r\n        String text = \"You slept for \" + hours + \" hours, \" + minutes + \" minutes, \" + secs + \" seconds.\";\r\n\r\n        Date date = new Date();\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\r\n        sdf.format(date);\r\n\r\n        StringRequest inAppRequest = new StringRequest(\r\n                Request.Method.POST,\r\n                inAppUrl,\r\n                response -> {\r\n                    if (response.equals(\"inserted\")) Log.d(\"SleepTrackerFragment\", \"success\");\r\n                    else Log.d(\"SleepTrackerFragment\", \"failure\");\r\n                },\r\n                error -> Log.e(\"SleepTrackerFragment\",error.toString())\r\n        ) {\r\n            @NotNull\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n\r\n                data.put(\"clientID\", DataFromDatabase.clientuserID);\r\n                data.put(\"type\", type);\r\n                data.put(\"text\", text);\r\n                data.put(\"dateandtime\", String.valueOf(date));\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(inAppRequest);\r\n    }\r\n\r\n    private BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            updateGUI(intent);\r\n        }\r\n    };\r\n\r\n    private void updateGUI(Intent intent) {\r\n        if (intent.getExtras() != null) {\r\n            sleep = intent.getStringExtra(\"sleep\");\r\n            hours = sleep.substring(0, 2);\r\n            minutes = sleep.substring(3, 5);\r\n            secs = sleep.substring(6);\r\n            Log.i(\"StepTracker\",\"Countdown seconds remaining:\" + sleep);\r\n            texttime.setText(sleep);\r\n        }\r\n    }\r\n\r\n    public boolean foregroundServiceRunning(){\r\n        ActivityManager activityManager = (ActivityManager) getActivity().getSystemService(Context.ACTIVITY_SERVICE);\r\n        for (ActivityManager.RunningServiceInfo service : activityManager.getRunningServices(Integer.MAX_VALUE)){\r\n            if (StopWatchService.class.getName().equals(service.service.getClassName())){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/SleepTrackerFragment.java b/app/src/main/java/com/example/infits/SleepTrackerFragment.java
--- a/app/src/main/java/com/example/infits/SleepTrackerFragment.java	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/java/com/example/infits/SleepTrackerFragment.java	(date 1699606499127)
@@ -49,9 +49,11 @@
 import com.android.volley.ParseError;
 import com.android.volley.Request;
 import com.android.volley.RequestQueue;
+import com.android.volley.Response;
 import com.android.volley.RetryPolicy;
 import com.android.volley.ServerError;
 import com.android.volley.TimeoutError;
+import com.android.volley.VolleyError;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
 
@@ -68,24 +70,28 @@
 
 import java.util.Date;
 import java.util.HashMap;
+import java.util.List;
 import java.util.Locale;
 import java.util.Map;
 
 public class SleepTrackerFragment extends Fragment {
 
-    String sleep;
-    String hours, minutes, secs;
+    //    UI elements
+    private ImageView imgback, reminder;
+    private Button setalarm, startcycle, endcycle;
+    private TextView texttime, tvDuration;
+    private RecyclerView pastActivity;
+    private ArrayList<SleepData> recyclerViewItems = new ArrayList<>();
 
-    Button setalarm, startcycle, endcycle;
-    ImageView imgback, reminder;
-    TextView texttime, tvDuration;
-    Calendar calendar;
-    SimpleDateFormat simpleDateFormat;
-    String timerTime;
+    //    Date
+    private Calendar calendar;
+    private SimpleDateFormat simpleDateFormat;
+    private String timerTime;
 
-    private int seconds;
-    private boolean running;
-    private boolean wasRunning;
+    //    Sleep related timings
+    private String sleep;
+    private String hours, minutes, secs;
+
 
     private static final String ARG_PARAM1 = "param1";
     private static final String ARG_PARAM2 = "param2";
@@ -117,8 +123,8 @@
         OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {
             @Override
             public void handleOnBackPressed() {
-                if(getArguments() != null && getArguments().getBoolean("notification") /* coming from notification */) {
-                    startActivity(new Intent(getActivity(),DashBoardMain.class));
+                if (getArguments() != null && getArguments().getBoolean("notification") /* coming from notification */) {
+                    startActivity(new Intent(getActivity(), DashBoardMain.class));
                     requireActivity().finish();
                 } else {
                     Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_sleepTrackerFragment_to_dashBoardFragment);
@@ -133,77 +139,13 @@
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_sleep_tracker, container, false);
-
-        RecyclerView pastActivity = view.findViewById(R.id.past_activity);
-
-        ArrayList<String> dates = new ArrayList<>();
-        ArrayList<String> datas = new ArrayList<>();
-
-        // String url = String.format("%spastActivitySleep.php",DataFromDatabase.ipConfig);
-        String url = "https://infits.in/androidApi/pastActivitySleep.php";
         int customTimeout = 15000; // 15 seconds (you can adjust this)
 
-        StringRequest stringRequest = new StringRequest(Request.Method.POST, url, response -> {
-            try {
-                Log.d("response123", response.toString());
-                JSONObject jsonObject = new JSONObject(response);
-                JSONArray jsonArray = jsonObject.getJSONArray("sleep");
-                for (int i = 0; i < jsonArray.length(); i++) {
-                    JSONObject object = jsonArray.getJSONObject(i);
-                    String data = object.getString("hrsSlept");
-                    String date = object.getString("date");
-                    dates.add(date);
-                    datas.add(data);
-                    System.out.println(datas.get(i));
-                    System.out.println(dates.get(i));
-                }
-                AdapterForPastActivity ad = new AdapterForPastActivity(getContext(), dates, datas, Color.parseColor("#9C74F5"));
-                pastActivity.setLayoutManager(new LinearLayoutManager(getContext()));
-                pastActivity.setAdapter(ad);
-            } catch (JSONException e) {
-                e.printStackTrace();
-            }
-        }, error -> {
-            if (error instanceof NetworkError) {
-                // Handle network-related errors
-                Toast.makeText(getActivity().getApplicationContext(), "Network Error", Toast.LENGTH_SHORT).show();
-            } else if (error instanceof ServerError) {
-                // Handle server errors
-                Toast.makeText(getActivity().getApplicationContext(), "Server Error", Toast.LENGTH_SHORT).show();
-            } else if (error instanceof ParseError) {
-                // Handle parse errors
-                Toast.makeText(getActivity().getApplicationContext(), "Parse Error", Toast.LENGTH_SHORT).show();
-            } else if (error instanceof NoConnectionError) {
-                // Handle no connection errors
-                Toast.makeText(getActivity().getApplicationContext(), "No Connection Error", Toast.LENGTH_SHORT).show();
-            } else if (error instanceof TimeoutError) {
-                // Handle timeout errors
-                Toast.makeText(getActivity().getApplicationContext(), "Timeout Error for loading previous activity", Toast.LENGTH_SHORT).show();
-            } else {
-                // Handle other errors
-                Toast.makeText(getActivity().getApplicationContext(), "Other Error: " + error.toString(), Toast.LENGTH_SHORT).show();
-            }
-            Log.d("Error", error.toString());
-            Log.d("Error", error.toString());
-        }) {
-            @Override
-            public RetryPolicy getRetryPolicy() {
-                return new DefaultRetryPolicy(customTimeout, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);
-            }
-
-            @Nullable
-            @Override
-            protected Map<String, String> getParams() {
-                Map<String, String> data = new HashMap<>();
-                data.put("clientuserID", DataFromDatabase.clientuserID);
-                return data;
-            }
-        };
-
-// Add the request to the request queue (assuming you have a RequestQueue instance)
-        RequestQueue requestQueue = Volley.newRequestQueue(getContext());
-        requestQueue.add(stringRequest);
+        View view = inflater.inflate(R.layout.fragment_sleep_tracker, container, false);
+        hooks(view);
+        initializeUI();
+        setupListeners();
+        updateRecyclerViewData(pastActivity);
 
 
         PowerManager powerManager = null;
@@ -214,158 +156,61 @@
                 "MyApp::MyWakelockTag");
         wakeLock.acquire();
 
-        imgback = view.findViewById(R.id.imgback);
-        setalarm = view.findViewById(R.id.setalarm);
-        startcycle = view.findViewById(R.id.startcycle);
-        endcycle = view.findViewById(R.id.endcycle);
-        texttime = view.findViewById(R.id.texttime);
-        tvDuration = view.findViewById(R.id.tvDuration);
-        reminder = view.findViewById(R.id.reminder);
-
-        tvDuration.setVisibility(View.INVISIBLE);
+        handleNotificationFromArguments();
 
-        if(getArguments() != null && getArguments().getBoolean("notification")) {
-            texttime.setText(getArguments().getString("sleepTime"));
-            tvDuration.setVisibility(View.VISIBLE);
-            tvDuration.setText("You slept for " + getArguments().getString("sleepTime"));
-        }
-
-        if (foregroundServiceRunning()){
-            endcycle.setVisibility(View.VISIBLE);
-            startcycle.setVisibility(View.GONE);
-        }
-
-        if (!foregroundServiceRunning()){
-            endcycle.setVisibility(View.GONE);
-            startcycle.setVisibility(View.VISIBLE);
-        }
+        checkForegroundService();
 
-        getActivity().registerReceiver(broadcastReceiver,new IntentFilter("com.example.infits.sleep"));
+        getActivity().registerReceiver(broadcastReceiver, new IntentFilter("com.example.infits.sleep"));
 
         calendar = Calendar.getInstance();
         simpleDateFormat = new SimpleDateFormat("HH:mm");
         String time = simpleDateFormat.format(calendar.getTime());
 
-        if(savedInstanceState != null) {
+        if (savedInstanceState != null) {
             savedInstanceState.getInt("seconds");
             savedInstanceState.getBoolean("running");
             savedInstanceState.getBoolean("wasRunning");
         }
 
-//        runTimer();
-
-
-        imgback.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if(getArguments() != null && getArguments().getBoolean("notification") /* coming from notification */) {
-                    startActivity(new Intent(getActivity(),DashBoardMain.class));
-                    requireActivity().finish();
-                } else {
-                    Navigation.findNavController(v).navigate(R.id.action_sleepTrackerFragment_to_dashBoardFragment);
-                }
-            }
-        });
-
-        reminder.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_sleepTrackerFragment_to_sleepReminderFragment));
-
-        setalarm.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent mClockIntent = new Intent(AlarmClock.ACTION_SHOW_ALARMS);
-                mClockIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                startActivity(mClockIntent);
-            }
-        });
-
-
-        startcycle.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Date date = new Date();
-                Calendar calendar = Calendar.getInstance();
-                calendar.setTime(date);
-                SimpleDateFormat sleepTime = new SimpleDateFormat("yyyy-MM-dd H:m:s");
-                SharedPreferences sharedPreferences = getActivity().getSharedPreferences("MySharedPref",Context.MODE_PRIVATE);
-
-                SharedPreferences.Editor myEdit = sharedPreferences.edit();
-
-                myEdit.putString("sleepTime", sleepTime.format(date));
-                myEdit.commit();
-                calendar.add(Calendar.HOUR_OF_DAY, 8);
-                tvDuration.setVisibility(View.VISIBLE);
-                SimpleDateFormat sim = new SimpleDateFormat("HH:mm");
-                tvDuration.setText("Optimal time to wake up is "+sim.format(calendar.getTime()));
-                startcycle.setVisibility(View.GONE);
-                endcycle.setVisibility(View.VISIBLE);
-                if (!foregroundServiceRunning()) {
-                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                        Intent intent = new Intent(getActivity(), StopWatchService.class);
-                        getActivity().startForegroundService(new Intent(getActivity(), StopWatchService.class));
-                    }
-                    sleep = "";
-                    getActivity().registerReceiver(broadcastReceiver, new IntentFilter("com.example.infits.sleep"));
-                }
-            }
-        });
-
         endcycle.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+
+//                Get the sleep time
                 String time = sleep;
+
+//                Hide and show UI elements
                 endcycle.setVisibility(View.GONE);
                 startcycle.setVisibility(View.VISIBLE);
+
+//                Stop the stopwatch service
                 Intent i = new Intent(getActivity(), StopWatchService.class);
                 i.putExtra("status", true);
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                     getActivity().getApplicationContext().stopService(new Intent(getActivity(), StopWatchService.class));
                 }
+
+//                unregister the broadcast receiver
                 getActivity().unregisterReceiver(broadcastReceiver);
+
+//                Update the displayed sleep duration
+
                 tvDuration.setText("You slept for " + sleep);
+//             update in app notification
 
                 updateInAppNotifications(hours, minutes, secs);
 
+                //Check if sleep notifications are permitted
                 SharedPreferences notificationPrefs = requireActivity().getSharedPreferences("notificationDetails", MODE_PRIVATE);
                 boolean sleepNotificationPermission = notificationPrefs.getBoolean("sleepSwitch", false);
-
-                if (sleepNotificationPermission) {
-                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                        Log.d("sleep", "permitted");
-                        NotificationChannel channel = new NotificationChannel(
-                                "SleepChannelId",
-                                "Sleep Tracker",
-                                NotificationManager.IMPORTANCE_HIGH
-                        );
-                        channel.setLightColor(Color.BLUE);
-                        channel.setLockscreenVisibility(Notification.VISIBILITY_SECRET);
+                if (sleepNotificationPermission && Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+                    // Create a notification channel for sleep tracking
+                    createSleepNotificationChannel();
 
-                        NotificationManager manager = (NotificationManager) requireActivity().getSystemService(Context.NOTIFICATION_SERVICE);
-                        manager.createNotificationChannel(channel);
-
-                        String sleptFor = "You slept for " + hours + " hours, " + minutes + " minutes, " + secs + " seconds.";
-
-                        Intent intent = new Intent(requireContext(), SplashScreen.class);
-                        intent.putExtra("notification", "sleep");
-                        intent.putExtra("hours", hours);
-                        intent.putExtra("minutes", minutes);
-                        intent.putExtra("secs", secs);
-
-                        PendingIntent pendingIntent = PendingIntent.getActivity(requireContext(), 0, intent, PendingIntent.FLAG_IMMUTABLE);
-
-                        NotificationCompat.Builder builder = new NotificationCompat.Builder(requireContext(), "SleepChannelId");
-                        Notification goalReachedNotification = builder.setOngoing(false)
-                                .setSmallIcon(R.mipmap.logo)
-                                .setContentTitle("Sleep Tracker")
-                                .setContentText(sleptFor)
-                                .setChannelId("SleepChannelId")
-                                .setContentIntent(pendingIntent)
-                                .setAutoCancel(true)
-                                .build();
-
-                        manager.notify(2, goalReachedNotification);
-                    }
+                    // Build and display the sleep tracking notification
+                    String sleptFor = "You slept for " + hours + " hours, " + minutes + " minutes, " + secs + " seconds.";
+                    displaySleepNotification(sleptFor);
                 }
-
                 // String url=String.format("%ssleepTracker.php", DataFromDatabase.ipConfig);
                 String url = "https://infits.in/androidApi/sleepTracker.php";
 
@@ -378,30 +223,7 @@
                         System.out.println(response);
                         Toast.makeText(getActivity(), "Not working", Toast.LENGTH_SHORT).show();
                     }
-                }, error -> {
-
-                    if (error instanceof NetworkError) {
-                        // Handle network-related errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Network Error", Toast.LENGTH_SHORT).show();
-                    } else if (error instanceof ServerError) {
-                        // Handle server errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Server Error", Toast.LENGTH_SHORT).show();
-                    } else if (error instanceof ParseError) {
-                        // Handle parse errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Parse Error", Toast.LENGTH_SHORT).show();
-                    } else if (error instanceof NoConnectionError) {
-                        // Handle no connection errors
-                        Toast.makeText(getActivity().getApplicationContext(), "No Connection Error", Toast.LENGTH_SHORT).show();
-                    } else if (error instanceof TimeoutError) {
-                        // Handle timeout errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Timeout Error", Toast.LENGTH_SHORT).show();
-                    } else {
-                        // Handle other errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Other Error: " + error.toString(), Toast.LENGTH_SHORT).show();
-                    }
-                    Log.d("Error", error.toString());
-                })
-                {
+                }, error -> handleVolleyError(error)) {
                     @Override
                     public RetryPolicy getRetryPolicy() {
                         return new DefaultRetryPolicy(customTimeout, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);
@@ -442,83 +264,218 @@
                 };
                 Volley.newRequestQueue(getActivity().getApplicationContext()).add(request);
                 sleep = "";
+                saveSleepDurationInPrefs();
+
+
+            }
+
+
+        });
+        return view;
+
+    }
+
+    private void displaySleepNotification(String sleptFor) {
+        Intent intent = new Intent(requireContext(), SplashScreen.class);
+        intent.putExtra("notification", "sleep");
+        intent.putExtra("hours", hours);
+        intent.putExtra("minutes", minutes);
+        intent.putExtra("secs", secs);
+
+        PendingIntent pendingIntent = PendingIntent.getActivity(requireContext(), 0, intent, PendingIntent.FLAG_IMMUTABLE);
 
-                SharedPreferences sleepPrefs = requireActivity().getSharedPreferences("sleepPrefs", MODE_PRIVATE);
-                SharedPreferences.Editor editor = sleepPrefs.edit();
+        NotificationCompat.Builder builder = new NotificationCompat.Builder(requireContext(), "SleepChannelId");
+        Notification goalReachedNotification = builder.setOngoing(false)
+                .setSmallIcon(R.mipmap.logo)
+                .setContentTitle("Sleep Tracker")
+                .setContentText(sleptFor)
+                .setChannelId("SleepChannelId")
+                .setContentIntent(pendingIntent)
+                .setAutoCancel(true)
+                .build();
 
-                editor.putString("hours", hours);
-                editor.putString("minutes", minutes);
+        NotificationManager manager = (NotificationManager) requireActivity().getSystemService(Context.NOTIFICATION_SERVICE);
+        manager.notify(2, goalReachedNotification);
+    }
 
-                editor.apply();
-            }
+    private void createSleepNotificationChannel() {
+        NotificationChannel channel = new NotificationChannel(
+                "SleepChannelId",
+                "Sleep Tracker",
+                NotificationManager.IMPORTANCE_HIGH
+        );
+        channel.setLightColor(Color.BLUE);
+        channel.setLockscreenVisibility(Notification.VISIBILITY_SECRET);
+
+        NotificationManager manager = (NotificationManager) requireActivity().getSystemService(Context.NOTIFICATION_SERVICE);
+        manager.createNotificationChannel(channel);
+    }
 
-            private void updateRecyclerViewData(RecyclerView pastActivity) {
-                String url = "https://infits.in/androidApi/pastActivitySleep.php";
-                //String url = "http://10.12.2.128/infits/pastActivitySleep.php";
-                StringRequest stringRequest = new StringRequest(Request.Method.POST, url, response -> {
-                    try {
-                        Log.d("response123", response.toString());
-                        JSONObject jsonObject = new JSONObject(response);
-                        JSONArray jsonArray = jsonObject.getJSONArray("sleep");
-                        ArrayList<String> dates = new ArrayList<>();
-                        ArrayList<String> datas = new ArrayList();
-                        for (int i = 0; i < jsonArray.length(); i++) {
-                            JSONObject object = jsonArray.getJSONObject(i);
-                            String data = object.getString("hrsSlept");
-                            String date = object.getString("date");
-                            dates.add(date);
-                            datas.add(data);
-                            System.out.println(datas.get(i));
-                            System.out.println(dates.get(i));
-                        }
-                        AdapterForPastActivity ad = new AdapterForPastActivity(getContext(), dates, datas, Color.parseColor("#9C74F5"));
-                        pastActivity.setLayoutManager(new LinearLayoutManager(getContext()));
-                        pastActivity.setAdapter(ad);
-                    } catch (JSONException e) {
-                        e.printStackTrace();
-                    }
-                }, error -> {
+    private void updateRecyclerViewData(RecyclerView pastActivity) {
+        String url = "https://infits.in/androidApi/pastActivitySleep.php";
+
+        StringRequest stringRequest = new StringRequest(Request.Method.POST, url, response -> {
+            try {
+                Log.d("response123", response.toString());
+                JSONObject jsonObject = new JSONObject(response);
+                JSONArray jsonArray = jsonObject.getJSONArray("sleep");
+//                ArrayList<String> dates = new ArrayList<>();
+//                ArrayList<String> datas = new ArrayList();
+                ArrayList<SleepData>  sleepDataArrayList= new ArrayList<>();
+                for (int i = 0; i < jsonArray.length(); i++) {
+                    JSONObject object = jsonArray.getJSONObject(i);
+                    String data = object.getString("hrsSlept");
+                    String date = object.getString("date");
+                    Log.d("data from server", "data" + data + "date" + date);
+                    SleepData sleepData = new SleepData(date, data);
+                    sleepDataArrayList.add(sleepData);
+//                    dates.add(date);
+//                    datas.add(data);
+//                    System.out.println(datas.get(i));
+//                    System.out.println(dates.get(i));
+                }
+                AdapterForSleepPastActivity ad= new AdapterForSleepPastActivity(getContext(),sleepDataArrayList, Color.parseColor("#9C74F5"));
+                pastActivity.setLayoutManager(new LinearLayoutManager(getContext()));
+                pastActivity.setAdapter(ad);
+
+//               int totalTime= ad.calculateTotalSleepTimeForCurrentDate();
+//               Log.d("totalTime","minutes"+totalTime);
+
+            } catch (JSONException e) {
+                e.printStackTrace();
+            }
+        }, error -> handleVolleyError(error)) {
+            @Nullable
+            @Override
+            protected Map<String, String> getParams() throws AuthFailureError {
+                Map<String, String> data = new HashMap<>();
+                data.put("clientuserID", DataFromDatabase.clientuserID);
+                return data;
+            }
+        };
+        Volley.newRequestQueue(getActivity()).add(stringRequest);
+
+    }
+
+
 
-                    if (error instanceof NetworkError) {
-                        // Handle network-related errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Network Error", Toast.LENGTH_SHORT).show();
-                    } else if (error instanceof ServerError) {
-                        // Handle server errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Server Error", Toast.LENGTH_SHORT).show();
-                    } else if (error instanceof ParseError) {
-                        // Handle parse errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Parse Error", Toast.LENGTH_SHORT).show();
-                    } else if (error instanceof NoConnectionError) {
-                        // Handle no connection errors
-                        Toast.makeText(getActivity().getApplicationContext(), "No Connection Error", Toast.LENGTH_SHORT).show();
-                    } else if (error instanceof TimeoutError) {
-                        // Handle timeout errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Timeout Error for past activity", Toast.LENGTH_SHORT).show();
-                    } else {
-                        // Handle other errors
-                        Toast.makeText(getActivity().getApplicationContext(), "Other Error: " + error.toString(), Toast.LENGTH_SHORT).show();
-                    }
-                    Log.d("Error", error.toString());
-                }) {
-                    //                    @Override
-//                    public RetryPolicy getRetryPolicy() {
-//                        return new DefaultRetryPolicy(customTimeout, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);
-//                    }
-                    @Nullable
-                    @Override
-                    protected Map<String, String> getParams() throws AuthFailureError {
-                        Map<String, String> data = new HashMap<>();
-                        data.put("clientuserID", DataFromDatabase.clientuserID);
-                        return data;
-                    }
-                };
+
+    private void handleVolleyError(VolleyError error) {
+        if (error instanceof NetworkError) {
+            Toast.makeText(getActivity().getApplicationContext(), "Network Error", Toast.LENGTH_SHORT).show();
+        } else if (error instanceof ServerError) {
+            Toast.makeText(getActivity().getApplicationContext(), "Server Error", Toast.LENGTH_SHORT).show();
+        } else if (error instanceof ParseError) {
+            Toast.makeText(getActivity().getApplicationContext(), "Parse Error", Toast.LENGTH_SHORT).show();
+        } else if (error instanceof NoConnectionError) {
+            Toast.makeText(getActivity().getApplicationContext(), "No Connection Error", Toast.LENGTH_SHORT).show();
+        } else if (error instanceof TimeoutError) {
+            Toast.makeText(getActivity().getApplicationContext(), "Timeout Error", Toast.LENGTH_SHORT).show();
+        } else {
+            Toast.makeText(getActivity().getApplicationContext(), "Other Error: " + error.toString(), Toast.LENGTH_SHORT).show();
+        }
+        Log.d("Error", error.toString());
+    }
+
+    private void handleNotificationFromArguments() {
+        if (getArguments() != null && getArguments().getBoolean("notification")) {
+            texttime.setText(getArguments().getString("sleepTime"));
+            tvDuration.setVisibility(View.VISIBLE);
+            tvDuration.setText("You slept for " + getArguments().getString("sleepTime"));
+        }
+    }
+
+    private void checkForegroundService() {
+        if (foregroundServiceRunning()) {
+            endcycle.setVisibility(View.VISIBLE);
+            startcycle.setVisibility(View.GONE);
+        } else {
+            endcycle.setVisibility(View.GONE);
+            startcycle.setVisibility(View.VISIBLE);
+        }
+    }
+
+    private void saveSleepDurationInPrefs() {
+        SharedPreferences sleepPrefs = requireActivity().getSharedPreferences("sleepPrefs", MODE_PRIVATE);
+        SharedPreferences.Editor editor = sleepPrefs.edit();
+
+        editor.putString("hours", hours);
+        editor.putString("minutes", minutes);
+
+        editor.apply();
+    }
+
+    private void setupListeners() {
+        imgback.setOnClickListener(v -> navigateBackOrFinishActivity(v));
+        reminder.setOnClickListener(v -> navigateToSleepReminderFragment(v));
+        setalarm.setOnClickListener(v -> openAlarmClock(v));
+        startcycle.setOnClickListener(v -> startSleepCycle(v));
 
-                Volley.newRequestQueue(getActivity()).add(stringRequest);
-            }
-        });
-        return view;
+    }
+
+
+    private void startSleepCycle(View v) {
+        Date date = new Date();
+        Calendar calendar = Calendar.getInstance();
+        calendar.setTime(date);
+        SimpleDateFormat sleepTime = new SimpleDateFormat("yyyy-MM-dd H:m:s");
+
+        SharedPreferences sharedPreferences = getActivity().getSharedPreferences("MySharedPref", MODE_PRIVATE);
+        SharedPreferences.Editor myEdit = sharedPreferences.edit();
+        myEdit.putString("sleepTime", sleepTime.format(date));
+        myEdit.commit();
+        calendar.add(Calendar.HOUR_OF_DAY, 8);
+        tvDuration.setVisibility(View.VISIBLE);
+        SimpleDateFormat sim = new SimpleDateFormat("HH:mm");
 
+        tvDuration.setText("Optimal time to wake up is" + sim.format(calendar.getTime()));
+        startcycle.setVisibility(View.GONE);
+        endcycle.setVisibility(View.VISIBLE);
+        if (!foregroundServiceRunning()) {
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+                getActivity().startForegroundService(new Intent(getActivity(), StopWatchService.class));
+            }
+            sleep = "";
+            getActivity().registerReceiver(broadcastReceiver, new IntentFilter("com.example.infits.sleep"));
+        }
+
+
     }
+
+    private void openAlarmClock(View v) {
+        CustomDialogFragment dialog = new CustomDialogFragment();
+        dialog.show(getChildFragmentManager(), "custom_dialog");
+    }
+
+
+    private void navigateToSleepReminderFragment(View v) {
+        Navigation.findNavController(v).navigate(R.id.action_sleepTrackerFragment_to_sleepReminderFragment);
+    }
+
+    private void navigateBackOrFinishActivity(View v) {
+        if (getArguments() != null && getArguments().getBoolean("notification")) {
+            startActivity(new Intent(getActivity(), DashBoardMain.class));
+            requireActivity().finish();
+        } else {
+            Navigation.findNavController(v).navigate(R.id.action_sleepTrackerFragment_to_dashBoardFragment);
+        }
+    }
+
+    private void initializeUI() {
+        tvDuration.setVisibility(View.INVISIBLE);
+    }
+
+    private void hooks(View view) {
+        imgback = view.findViewById(R.id.imgback);
+        setalarm = view.findViewById(R.id.setalarm);
+        startcycle = view.findViewById(R.id.startcycle);
+        endcycle = view.findViewById(R.id.endcycle);
+        texttime = view.findViewById(R.id.texttime);
+        tvDuration = view.findViewById(R.id.tvDuration);
+        reminder = view.findViewById(R.id.reminder);
+        pastActivity = view.findViewById(R.id.past_activity);
+    }
+
 
     private void updateInAppNotifications(String hours, String minutes, String secs) {
         SharedPreferences inAppPrefs = requireActivity().getSharedPreferences("inAppNotification", MODE_PRIVATE);
@@ -543,7 +500,7 @@
                     if (response.equals("inserted")) Log.d("SleepTrackerFragment", "success");
                     else Log.d("SleepTrackerFragment", "failure");
                 },
-                error -> Log.e("SleepTrackerFragment",error.toString())
+                error -> Log.e("SleepTrackerFragment", error.toString())
         ) {
             @NotNull
             @Override
@@ -573,15 +530,15 @@
             hours = sleep.substring(0, 2);
             minutes = sleep.substring(3, 5);
             secs = sleep.substring(6);
-            Log.i("StepTracker","Countdown seconds remaining:" + sleep);
+            Log.i("StepTracker", "Countdown seconds remaining:" + sleep);
             texttime.setText(sleep);
         }
     }
 
-    public boolean foregroundServiceRunning(){
+    public boolean foregroundServiceRunning() {
         ActivityManager activityManager = (ActivityManager) getActivity().getSystemService(Context.ACTIVITY_SERVICE);
-        for (ActivityManager.RunningServiceInfo service : activityManager.getRunningServices(Integer.MAX_VALUE)){
-            if (StopWatchService.class.getName().equals(service.service.getClassName())){
+        for (ActivityManager.RunningServiceInfo service : activityManager.getRunningServices(Integer.MAX_VALUE)) {
+            if (StopWatchService.class.getName().equals(service.service.getClassName())) {
                 return true;
             }
         }
Index: app/src/main/res/layout/fragment_weight_reminder.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    tools:context=\".WeightReminderFragment\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"56dp\"\r\n        android:alpha=\"0.92\"\r\n        android:background=\"#11998E\"\r\n        android:gravity=\"center\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/img_back\"\r\n            android:layout_width=\"25dp\"\r\n            android:layout_height=\"25dp\"\r\n            android:layout_gravity=\"center_vertical|start\"\r\n            android:src=\"@drawable/back\"\r\n            tools:ignore=\"ContentDescription,ImageContrastCheck,ImageContrastCheck\"\r\n            tools:layout_editor_absoluteX=\"18dp\"\r\n            tools:layout_editor_absoluteY=\"18dp\"\r\n            app:tint=\"@color/white\" />\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:fontFamily=\"@font/nats_regular\"\r\n            android:text=\"Reminder\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textSize=\"25sp\"\r\n            tools:ignore=\"TextContrastCheck\"\r\n            tools:layout_editor_absoluteX=\"54dp\" />\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/stepsImage\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"265dp\"\r\n        android:contentDescription=\"stepsImage\"\r\n        android:scaleType=\"centerCrop\"\r\n        android:src=\"@drawable/weight_reminder_bg\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/toolbar\" />\r\n\r\n    <androidx.appcompat.widget.LinearLayoutCompat\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"-55dp\"\r\n        android:background=\"@drawable/reminder_bottom_sheet\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/stepsImage\">\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"35dp\"\r\n            android:fontFamily=\"@font/nats_regular\"\r\n            android:text=\"Sleep Time\"\r\n            android:textColor=\"#555353\"\r\n            android:textSize=\"22sp\" />\r\n\r\n        <androidx.appcompat.widget.LinearLayoutCompat\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"35dp\"\r\n            android:layout_marginTop=\"-50dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/sleep_time\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:fontFamily=\"@font/nats_regular\"\r\n                android:text=\"9:20\"\r\n                android:textColor=\"#11998E\"\r\n                android:textSize=\"42sp\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/sleep_time_am_pm\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"5dp\"\r\n                android:fontFamily=\"@font/nats_regular\"\r\n                android:text=\"pm\"\r\n                android:textAllCaps=\"true\"\r\n                android:textColor=\"#11998E\"\r\n                android:textSize=\"22sp\" />\r\n        </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n        <View\r\n            android:layout_width=\"142dp\"\r\n            android:layout_height=\"2dp\"\r\n            android:background=\"#11998E\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"80dp\" />\r\n\r\n        <androidx.appcompat.widget.LinearLayoutCompat\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginStart=\"35dp\"\r\n            android:layout_marginEnd=\"35dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <CheckBox\r\n                android:id=\"@+id/checkbox\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:clickable=\"true\"\r\n                android:buttonTint=\"#11998E\"\r\n                tools:ignore=\"TouchTargetSizeCheck\"\r\n                android:focusable=\"true\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginTop=\"-4dp\"/>\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:layout_gravity=\"start\"\r\n                android:fontFamily=\"@font/nats_regular\"\r\n                android:text=\"Remind me once at\"\r\n                android:textColor=\"#555353\"\r\n                android:textSize=\"16sp\" />\r\n\r\n            <androidx.appcompat.widget.LinearLayoutCompat\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"end\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/remind_once_time\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/nats_regular\"\r\n                    android:text=\"9:20\"\r\n                    android:textColor=\"#11998E\"\r\n                    android:textSize=\"15sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/remind_once_time_am_pm\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"5dp\"\r\n                    android:fontFamily=\"@font/nats_regular\"\r\n                    android:text=\"pm\"\r\n                    android:textAllCaps=\"true\"\r\n                    android:textColor=\"#11998E\"\r\n                    android:textSize=\"15sp\" />\r\n            </androidx.appcompat.widget.LinearLayoutCompat>\r\n        </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n    </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n    <androidx.appcompat.widget.AppCompatButton\r\n        android:id=\"@+id/dismiss\"\r\n        android:layout_width=\"138dp\"\r\n        android:layout_height=\"61dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_marginBottom=\"30dp\"\r\n        android:background=\"@drawable/dismiss_btn\"\r\n        android:fontFamily=\"@font/nats_regular\"\r\n        android:text=\"Dismiss\"\r\n        android:textSize=\"22sp\"\r\n        android:backgroundTint=\"#11998E\"\r\n        android:textColor=\"@color/white\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"/>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_weight_reminder.xml b/app/src/main/res/layout/fragment_weight_reminder.xml
--- a/app/src/main/res/layout/fragment_weight_reminder.xml	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/res/layout/fragment_weight_reminder.xml	(date 1698758582507)
@@ -173,13 +173,31 @@
         android:layout_gravity="center"
         android:layout_marginBottom="30dp"
         android:background="@drawable/dismiss_btn"
+        android:backgroundTint="#11998E"
         android:fontFamily="@font/nats_regular"
         android:text="Dismiss"
+        android:textColor="@color/white"
         android:textSize="22sp"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/set" />
+
+    <androidx.appcompat.widget.AppCompatButton
+        android:id="@+id/set"
+        android:layout_width="138dp"
+        android:layout_height="61dp"
+        android:layout_gravity="center"
+        android:layout_marginBottom="30dp"
+        android:background="@drawable/dismiss_btn"
         android:backgroundTint="#11998E"
+        android:fontFamily="@font/nats_regular"
+        android:text="set"
         android:textColor="@color/white"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"/>
+        android:textSize="22sp"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/dismiss"
+        app:layout_constraintStart_toStartOf="parent" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n//    id 'org.jetbrains.kotlin.android' version \"1.7.10\" // commented\r\n}\r\n\r\nandroid {\r\n    compileSdk 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.infits\"\r\n        minSdk 26\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    task wrapper(type: Wrapper) {\r\n        gradleVersion = '8.0'\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_11\r\n        targetCompatibility JavaVersion.VERSION_11\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n    namespace 'com.example.infits'\r\n}\r\n\r\ndependencies {\r\n    implementation 'androidx.appcompat:appcompat:1.6.0'\r\n    implementation 'com.google.android.material:material:1.8.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'com.google.android.material:material:1.8.0'\r\n    //noinspection GradleCompatible\r\n    implementation 'com.android.support:design:28.0.0'\r\n    implementation 'com.kevalpatel2106:ruler-picker:1.1'\r\n    implementation 'me.angrybyte.picker:picker:1.3.1'\r\n//    implementation 'com.shawnlin:number-picker:2.4.6'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.recyclerview:recyclerview:1.2.1'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'androidx.navigation:navigation-fragment:2.5.3'\r\n    implementation 'androidx.navigation:navigation-ui:2.5.3'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'\r\n    implementation 'com.android.volley:volley:1.2.1'\r\n    implementation files('libs/activation.jar')\r\n    implementation files('libs/additionnal.jar')\r\n    implementation files('libs/mail.jar')\r\n    implementation 'com.google.android.gms:play-services-vision-common:19.1.3'\r\n    implementation 'com.google.android.gms:play-services-vision:20.1.3'\r\n    testImplementation 'junit:junit:4.+'\r\n    implementation 'sun.bob:mcalendarview:1.0.0'\r\n    implementation 'com.savvi.datepicker:rangepicker:1.3.0'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n    implementation 'com.github.gastricspark:scrolldatepicker:0.0.1'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.jjoe64:graphview:4.2.2'\r\n    implementation 'com.itextpdf:itextg:5.5.10'\r\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\r\n    implementation 'com.github.oooooldzhu:gaugeseekbar:1.3'\r\n    implementation 'com.archit.calendar:awesome-calendar:2.0.0'\r\n    implementation 'com.github.MOLO17:CustomizableCalendar:v0.1.4'\r\n    implementation 'com.github.dwfox:DWRulerView:1.0.0'\r\n    implementation 'com.github.prolificinteractive:material-calendarview:1.5.0'\r\n    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.1'\r\n    implementation 'io.github.ShawnLin013:number-picker:2.4.13'\r\n    implementation 'androidx.work:work-runtime:2.8.0'\r\n    implementation 'com.gauravbhola.ripplepulsebackground:library:1.0.0'\r\n    implementation 'androidx.activity:activity:1.2.0'\r\n\r\n    implementation 'com.github.ruzhan123:RippleView:v1.0'\r\n\r\n    implementation ('io.socket:socket.io-client:2.0.0') {\r\n        exclude group: 'org.json', module: 'json'\r\n    }\r\n\r\n    implementation 'com.txusballesteros:snake:1.0'\r\n\r\n    implementation 'com.github.bumptech.glide:glide:4.13.2'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'\r\n    implementation \"com.polidea.rxandroidble3:rxandroidble:1.16.0\"\r\n\r\n    // heart rate graph\r\n    implementation'com.github.gastricspark:scrolldatepicker:0.0.1'\r\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\r\n\r\n    implementation 'com.chaos.view:pinview:1.4.3'\r\n\r\n    // health connect\r\n//    implementation \"androidx.health.connect:connect-client:1.0.0-alpha10\" // commented\r\n\r\n    // google fit\r\n    implementation 'com.google.android.gms:play-services-fitness:21.1.0'\r\n    implementation 'com.google.android.gms:play-services-auth:20.4.1'\r\n\r\n    // SplashScreen\r\n    implementation \"androidx.core:core-splashscreen:1.0.0\"\r\n    // ViewPager Dependency for Onboarding Screen\r\n    implementation \"androidx.viewpager2:viewpager2:1.0.0\"\r\n    // Added for cardView\r\n    implementation \"androidx.compose.ui:ui:$compose_ui_version\"\r\n    implementation \"androidx.compose.ui:ui-tooling-preview:$compose_ui_version\"\r\n    androidTestImplementation \"androidx.compose.ui:ui-test-junit4:$compose_ui_version\"\r\n    debugImplementation \"androidx.compose.ui:ui-tooling:$compose_ui_version\"\r\n    debugImplementation \"androidx.compose.ui:ui-test-manifest:$compose_ui_version\"\r\n    implementation 'androidx.compose.material:material:1.3.1'\r\n    implementation 'androidx.activity:activity-compose:1.6.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n    implementation 'androidx.core:core-ktx:1.9.0'\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    implementation 'com.google.android.material:material:1.9.0-alpha02'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation \"androidx.viewpager:viewpager:1.1.0-alpha01\"\r\n    implementation(\"com.tbuonomo:dotsindicator:4.3\")\r\n    // Adding lottie library\r\n    def lottieVersion = \"4.2.2\"\r\n    implementation \"com.airbnb.android:lottie:$lottieVersion\"\r\n\r\n    implementation 'io.agora.rtc:full-sdk:4.0.1'\r\n    implementation 'com.intuit.sdp:sdp-android:1.1.0'\r\n    implementation 'com.intuit.ssp:ssp-android:1.1.0'\r\n    implementation 'com.github.4bh1nav:ProgressView:v1.0'\r\n\r\n    implementation 'com.github.antonKozyriatskyi:CircularProgressIndicator:1.3.0'\r\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\r\n\r\n    //feedback rating bar\r\n    implementation 'com.iarcuschin:simpleratingbar:0.1.5'\r\n\r\n    implementation 'com.facebook.android:facebook-android-sdk:5.0.0'\r\n\r\n    //payment\r\n    implementation 'com.razorpay:checkout:1.6.7'\r\n    implementation 'com.android.volley:volley:1.2.1'\r\n    implementation 'com.github.bumptech.glide:glide:4.15.1'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/build.gradle	(date 1700145541633)
@@ -144,4 +144,6 @@
     implementation 'com.razorpay:checkout:1.6.7'
     implementation 'com.android.volley:volley:1.2.1'
     implementation 'com.github.bumptech.glide:glide:4.15.1'
+    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
+
 }
\ No newline at end of file
Index: .idea/modules/app/Infits.app.androidTest.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"android\" name=\"Android\">\r\n      <configuration>\r\n        <option name=\"SELECTED_BUILD_VARIANT\" value=\"debug\" />\r\n        <option name=\"ALLOW_USER_CONFIGURATION\" value=\"false\" />\r\n        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/src/main/AndroidManifest.xml\" />\r\n        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/src/main/res\" />\r\n        <option name=\"RES_FOLDERS_RELATIVE_PATH\" value=\"\" />\r\n        <option name=\"TEST_RES_FOLDERS_RELATIVE_PATH\" value=\"file://$MODULE_DIR$/../../../app/src/androidTest/res;file://$MODULE_DIR$/../../../app/src/androidTestDebug/res;file://$MODULE_DIR$/../../../app/build/generated/res/rs/androidTest/debug;file://$MODULE_DIR$/../../../app/build/generated/res/resValues/androidTest/debug\" />\r\n        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/src/main/assets\" />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$/../../../app/src/androidTest\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/androidTest/java\" isTestSource=\"true\" />\r\n    </content>\r\n    <content url=\"file://$MODULE_DIR$/../../../app/build/generated/res/resValues/androidTest/debug\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/res/resValues/androidTest/debug\" type=\"java-test-resource\" />\r\n    </content>\r\n    <content url=\"file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debugAndroidTest/out\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debugAndroidTest/out\" isTestSource=\"true\" generated=\"true\" />\r\n    </content>\r\n    <content url=\"file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/androidTest/debug\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/androidTest/debug\" isTestSource=\"true\" generated=\"true\" />\r\n    </content>\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/app/Infits.app.androidTest.iml b/.idea/modules/app/Infits.app.androidTest.iml
--- a/.idea/modules/app/Infits.app.androidTest.iml	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/.idea/modules/app/Infits.app.androidTest.iml	(date 1700145637041)
@@ -20,11 +20,11 @@
     <content url="file://$MODULE_DIR$/../../../app/build/generated/res/resValues/androidTest/debug">
       <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/res/resValues/androidTest/debug" type="java-test-resource" />
     </content>
-    <content url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debugAndroidTest/out">
-      <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debugAndroidTest/out" isTestSource="true" generated="true" />
-    </content>
     <content url="file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/androidTest/debug">
       <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
+    </content>
+    <content url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debugAndroidTest/out">
+      <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debugAndroidTest/out" isTestSource="true" generated="true" />
     </content>
   </component>
 </module>
\ No newline at end of file
Index: app/src/main/java/com/example/infits/DashBoardFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\nimport static com.example.infits.StepTrackerFragment.goalVal;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.preference.PreferenceManager;\r\nimport android.text.Html;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.work.ExistingPeriodicWorkPolicy;\r\nimport androidx.work.PeriodicWorkRequest;\r\nimport androidx.work.WorkManager;\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.concurrent.TimeUnit;\r\npublic class DashBoardFragment extends Fragment {\r\n\r\n    //String urlRefer = String.format(\"%sverify.php\",DataFromDatabase.ipConfig);\r\n    String urlRefer = \"https://infits.in/androidApi/verify.php\";\r\n\r\n\r\n    String Entered;\r\n    SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd H:m:S\", Locale.getDefault());\r\n\r\n    SimpleDateFormat caloriedateFormat = new SimpleDateFormat(\"yyyy-MM-dd H:m:S\", Locale.getDefault());\r\n\r\n\r\n    String url = String.format(\"%sdashboard.php\",DataFromDatabase.ipConfig);\r\n    //String url = \"https://infits.in/androidApi/dashboard.php\";\r\n\r\n\r\n    // String url = String.format(\"%sDashboard.php\",DataFromDatabase.ipConfig);\r\n    //String url1 = String.format(\"%sgetDietitianDetail.php\", DataFromDatabase.ipConfig);\r\n    String url1 = \"https://infits.in/androidApi/getDietitianDetail.php\";\r\n    //String url1 = \"https://infits.in/androidApi/getDietitianDetail.php\";\r\n\r\n    //No such file!\r\n    // String url1 = String.format(\"%sprofilePicture.php\", DataFromDatabase.ipConfig);\r\n\r\n    TextView stepstv;\r\n    TextView glassestv;\r\n    TextView glassesGoaltv;\r\n    TextView sleeptv;\r\n    TextView sleepGoaltv;\r\n    TextView weighttv;\r\n    TextView weightGoaltv;\r\n    TextView calorietv;\r\n    TextView calorieGoaltv;\r\n    TextView bpmtv;\r\n    TextView bpmUptv;\r\n    TextView bpmDowntv;\r\n    TextView meal_date;\r\n    TextView diet_date,meal_tracker_text;\r\n    static TextView stepsProgressPercent;\r\n    RequestQueue queue;\r\n    ImageButton sidemenu, notifmenu;\r\n    CardView stepcard, heartcard, watercard, sleepcard, weightcard, caloriecard,dietcard,goProCard,mealTrackerCard,workout_card;\r\n    Button btnsub, btnsub1;\r\n    TextView name,date, workout_date, consul_date;\r\n    ImageView profile;\r\n\r\n    CardView consultation_gopro_btn, diet_chart_gopro_btn,meal_tracker_gopro_btn;\r\n\r\n    TextView consultation_text, diet_chart_text;\r\n    ImageView pro_identifier;\r\n\r\n    static ProgressBar stepsProgressBar;\r\n\r\n    ImageView menuBtn, notificationBell, notificationBellUpdate;\r\n    int waterGoal = 0, waterConsumed = 0;\r\n\r\n    String dietitianID,dietitianuserID,dietitianName;\r\n\r\n    public interface OnMenuClicked {\r\n        void menuClicked();\r\n    }\r\n\r\n    OnMenuClicked onMenuClicked;\r\n\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    //private final String urlDt = String.format(\"%sgetDietitianDetail.php\",DataFromDatabase.ipConfig);\r\n    private final String urlDt = \"https://infits.in/androidApi/getDietitianDetail.php\";\r\n\r\n    public DashBoardFragment() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onAttach(@NonNull Context context) {\r\n        super.onAttach(context);\r\n        onMenuClicked = (OnMenuClicked) context;\r\n    }\r\n\r\n    public static DashBoardFragment newInstance(String param1, String param2) {\r\n        DashBoardFragment fragment = new DashBoardFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n//        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {\r\n//            @Override\r\n//            public void handleOnBackPressed() {\r\n//                startActivity(new Intent(getActivity(),DashBoardMain.class));\r\n//            }\r\n//        };\r\n//        requireActivity().getOnBackPressedDispatcher().addCallback(this, callback);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_dash_board, container, false);\r\n\r\n        hooks(view);\r\n\r\n        SharedPreferences sharedPreferences = getActivity().getSharedPreferences(\"DateForSteps\", Context.MODE_PRIVATE);\r\n\r\n\r\n        Date dateForSteps = new Date();\r\n\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"d-M-yyyy\");\r\n\r\n        System.out.println(simpleDateFormat.format(dateForSteps));\r\n\r\n        SharedPreferences.Editor myEdit = sharedPreferences.edit();\r\n\r\n        myEdit.putString(\"date\", simpleDateFormat.format(dateForSteps));\r\n        myEdit.putBoolean(\"verified\",false);\r\n        myEdit.apply();\r\n\r\n        SharedPreferences prefs = requireContext().getSharedPreferences(\"loginDetails\", Context.MODE_PRIVATE);\r\n        String clientuserID = prefs.getString(\"clientuserID\", DataFromDatabase.clientuserID);\r\n\r\n        // Dashboard Profile pic from server\r\n        ImageView profileImageView = view.findViewById(R.id.profile1);\r\n        String DashboardprofilePic = \"https://infits.in/androidApi/upload/default.jpg\";\r\n        Glide.with(this).load(DashboardprofilePic).fitCenter().into(profileImageView);\r\n\r\n        // Execute the query using a Volley StringRequest\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, url1, response -> {\r\n            try {\r\n                JSONObject responseJson = new JSONObject(response);\r\n\r\n                String profilePhoto = responseJson.getString(\"profile\");\r\n                // decode the base64 string to a byte array\r\n                byte[] decodedBytes = Base64.decode(profilePhoto, Base64.DEFAULT);\r\n                Bitmap decodedBitmap = BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);\r\n                if (decodedBitmap != null) {\r\n                    profileImageView.setImageBitmap(decodedBitmap);\r\n                } else {\r\n                    Log.e(\"TAG\", \"Failed to decode bitmap.\");\r\n                }\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n                Log.e(\"ProfilePhotoFetcher\", \"JSON parsing error: \" + e.getMessage());\r\n                // Handle the JSONException here\r\n            }\r\n        }, error -> Toast.makeText(getContext(), error.toString().trim(), Toast.LENGTH_SHORT).show()) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"userID\",clientuserID);\r\n                return data;\r\n            }\r\n        };\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getContext());\r\n        requestQueue.add(stringRequest);\r\n\r\n\r\n        Date dateToday = new Date();\r\n        SimpleDateFormat sf = new SimpleDateFormat(\"MMM dd,yyyy\");\r\n\r\n        name.setText(\"Hi \" + DataFromDatabase.name);\r\n        date.setText(sf.format(dateToday));\r\n\r\n        meal_date.setText(sf.format(dateToday));\r\n        diet_date.setText(sf.format(dateToday));\r\n        workout_date.setText(sf.format(dateToday));\r\n        consul_date.setText(sf.format(dateToday));\r\n\r\n\r\n        menuBtn.setOnClickListener(v -> onMenuClicked.menuClicked());\r\n\r\n\r\n        if (DataFromDatabase.proUser){\r\n\r\n            consultation_gopro_btn.setVisibility(View.GONE);\r\n            meal_tracker_gopro_btn.setVisibility(View.GONE);\r\n            diet_chart_gopro_btn.setVisibility(View.GONE);\r\n\r\n            consul_date.setVisibility(View.VISIBLE);\r\n            meal_date.setVisibility(View.VISIBLE);\r\n            diet_date.setVisibility(View.VISIBLE);\r\n            consultation_text.setVisibility(View.VISIBLE);\r\n            meal_tracker_text.setVisibility(View.VISIBLE);\r\n            diet_chart_text.setVisibility(View.VISIBLE);\r\n\r\n            pro_identifier.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n\r\n        SharedPreferences inAppPrefs = requireActivity().getSharedPreferences(\"inAppNotification\", Context.MODE_PRIVATE);\r\n        boolean newNotification = inAppPrefs.getBoolean(\"newNotification\", false);\r\n\r\n        if(newNotification) {\r\n            notificationBellUpdate.setVisibility(View.VISIBLE);\r\n        } else {\r\n            notificationBellUpdate.setVisibility(View.GONE);\r\n        }\r\n\r\n        notificationBell.setOnClickListener(v -> {\r\n            Intent intent = new Intent(requireContext(), InAppNotification.class);\r\n            startActivity(intent);\r\n\r\n            SharedPreferences.Editor inAppEditor = inAppPrefs.edit();\r\n            inAppEditor.putBoolean(\"newNotification\", false);\r\n            inAppEditor.apply();\r\n\r\n            requireActivity().finish();\r\n        });\r\n\r\n        stepcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_stepTrackerFragment));\r\n\r\n        SharedPreferences stepPrefs = PreferenceManager.getDefaultSharedPreferences(requireContext());\r\n        float stepGoal = stepPrefs.getFloat(\"goal\", 0f);\r\n        int stepPercent = stepGoal == 0 ? 0 : (int) ((FetchTrackerInfos.currentSteps * 100) / stepGoal);\r\n        String stepText = stepGoal == 0 ? \"----------\" : (int) stepGoal + \" Steps\";\r\n        String stepPercentText = stepPercent + \"%\";\r\n        Log.d(\"frag\", String.valueOf(FetchTrackerInfos.currentSteps));\r\n        Log.d(\"frag\", String.valueOf(stepGoal));\r\n        Log.d(\"frag\", String.valueOf(stepPercent));\r\n        if (FetchTrackerInfos.currentSteps > 1)\r\n            stepstv.setText(FetchTrackerInfos.currentSteps+\" steps\");\r\n        else stepstv.setText(\"--------\");\r\n        stepsProgressPercent.setText(stepPercentText);\r\n        stepsProgressBar.setProgress(stepPercent);\r\n\r\n        sleepcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_sleepTrackerFragment));\r\n\r\n        SharedPreferences sleepPrefs = requireActivity().getSharedPreferences(\"sleepPrefs\", Context.MODE_PRIVATE);\r\n        String sleepGoalText = sleepPrefs.getString(\"goal\", \"8\") + \" Hours\";\r\n        String sleepText = sleepPrefs.getString(\"hours\", \"00\") + \" hr \" + sleepPrefs.getString(\"minutes\", \"00\") + \" mins\";\r\n\r\n        sleepGoaltv.setText(sleepGoalText);\r\n        sleeptv.setText(sleepText);\r\n\r\n        watercard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_waterTrackerFragment));\r\n        getLatestWaterData();\r\n\r\n        weightcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_weightTrackerFragment));\r\n        getLatestWeightData();\r\n\r\n        SharedPreferences weightPrefs = requireContext().getSharedPreferences(\"weightPrefs\", Context.MODE_PRIVATE);\r\n\r\n        caloriecard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_calorieTrackerFragment));\r\n        getLatestCalorieData();\r\n\r\n        workout_card.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_activityTracker2);\r\n            }\r\n        });\r\n\r\n        mealTrackerCard.setOnClickListener(v->{\r\n            updateVerification();\r\n            if (DataFromDatabase.proUser){\r\n                //Intent intent = new Intent(getActivity(),Meal_main.class);\r\n                //requireActivity().finish();\r\n                //startActivity(intent);\r\n                Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_mealTracker);\r\n            }\r\n            else {\r\n                showDialog();\r\n            }\r\n        });\r\n\r\n        goProCard.setOnClickListener(v->{\r\n            if (DataFromDatabase.proUser){\r\n                if (DataFromDatabase.verification.equals(\"0\")){\r\n                    startActivity(new Intent(getActivity(), connectingDietitian.class));\r\n                }else {\r\n                    updateVerification();\r\n                    Intent intent = new Intent(getActivity(),Consultation.class);\r\n                    requireActivity().finish();\r\n                    startActivity(intent);\r\n                }\r\n\r\n                //Toast.makeText(getContext(),\"Consultation card clicked\",Toast.LENGTH_SHORT).show();\r\n            }\r\n            else {\r\n                showDialog();\r\n            }\r\n        });\r\n\r\n        heartcard.setOnClickListener(v-> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_heartRate));\r\n\r\n        //Include this!!\r\n        //dietcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_fragment_diet_chart));\r\n\r\n        dietcard.setOnClickListener(v->{\r\n            if (DataFromDatabase.proUser){\r\n                updateVerification();\r\n                //Intent intent = new Intent(getActivity(),Meal_main.class);\r\n                //requireActivity().finish();\r\n                //startActivity(intent);\r\n                Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_fragment_diet_chart);\r\n            }\r\n            else {\r\n                showDialog();\r\n            }\r\n        });\r\n\r\n        if (DataFromDatabase.proUser){\r\n            StringRequest dietitianDetails = new StringRequest(Request.Method.POST,urlDt,response -> {\r\n                System.out.println(response);\r\n                Log.d(\"dietitiandetails\",response);\r\n                try {\r\n                    JSONObject object = new JSONObject(response);\r\n                    JSONObject array = object.getJSONObject(\"dietitiandetails\");\r\n                    DataFromDatabase.flag = true;\r\n                    DataFromDatabase.dietitianuserID = array.getString(\"dietitianuserID\");\r\n                    byte[] qrimage = Base64.decode(array.getString(\"profilePhoto\"), 0);\r\n                    DataFromDatabase.dtPhoto = BitmapFactory.decodeByteArray(qrimage, 0, qrimage.length);\r\n                } catch (JSONException jsonException) {\r\n                    jsonException.printStackTrace();\r\n                }\r\n            },error -> {\r\n\r\n            }){\r\n                @Nullable\r\n                @Override\r\n                protected Map<String, String> getParams() throws AuthFailureError {\r\n\r\n                    Map<String,String> data = new HashMap<>();\r\n\r\n                    data.put(\"userID\",prefs.getString(\"dietitianuserID\", DataFromDatabase.dietitianuserID));\r\n\r\n                    return data;\r\n                }\r\n            };\r\n\r\n            Volley.newRequestQueue(getContext()).add(dietitianDetails);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        queue = Volley.newRequestQueue(getContext());\r\n        Log.d(\"ClientMetrics\",\"before\");\r\n\r\n        StringRequest stringRequestHeart = new StringRequest(Request.Method.POST,String.format(\"%sheartrate.php\",DataFromDatabase.ipConfig),response -> {\r\n\r\n            try {\r\n                JSONObject jsonResponse = new JSONObject(response);\r\n                JSONArray jsonArray = jsonResponse.getJSONArray(\"heart\");\r\n                JSONObject jsonObject = jsonArray.getJSONObject(0);\r\n                bpmtv.setText(jsonObject.getString(\"avg\"));\r\n                bpmDowntv.setText(jsonObject.getString(\"min\"));\r\n                bpmUptv.setText(jsonObject.getString(\"max\"));\r\n            }catch (JSONException jsonException){\r\n                jsonException.printStackTrace();\r\n            }\r\n        },error -> {\r\n\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"userID\",clientuserID);\r\n                return data;\r\n            }\r\n        };\r\n\r\n        Volley.newRequestQueue(getContext()).add(stringRequestHeart);\r\n\r\n        StringRequest stringRequest1 = new StringRequest(Request.Method.POST,url, response -> {\r\n            if (!response.equals(\"failure\")){\r\n                Log.d(\"ClientMetrics\",\"success\");\r\n                Log.d(\"response\",response);\r\n                try {\r\n                    JSONArray jsonArray = new JSONArray(response);\r\n                    JSONObject object = jsonArray.getJSONObject(0);\r\n                    String stepsStr = object.getString(\"steps\");\r\n                    String stepsGoal = object.getString(\"stepsgoal\");\r\n                    String waterStr = object.getString(\"waterConsumed\");\r\n                    DataFromDatabase.waterStr = waterStr;\r\n                    String waterGoal = object.getString(\"watergoal\");\r\n                    DataFromDatabase.waterGoal = waterGoal;\r\n                    String sleephrsStr = object.getString(\"sleephrs\");\r\n                    String sleepminsStr = object.getString(\"sleepmins\");\r\n                    String sleepGoal = object.getString(\"sleepgoal\");\r\n                    String weightStr = object.getString(\"weight\");\r\n                    DataFromDatabase.weightStr = weightStr;\r\n                    String weightGoal = object.getString(\"weightgoal\");\r\n                    DataFromDatabase.weightGoal = weightGoal;\r\n                    stepstv.setText(Html.fromHtml(String.format(\"<strong>%s</strong> steps\",stepsStr)));\r\n                    glassestv.setText(Html.fromHtml(String.format(\"<strong>%s</strong> ml\",waterStr)));\r\n                    glassesGoaltv.setText(Html.fromHtml(String.format(\"<strong>%s ml</strong>\",waterGoal)));\r\n                    sleeptv.setText(Html.fromHtml(String.format(\"<strong>%s</strong> hr <strong>%s</strong> mins\",sleephrsStr,sleepminsStr)));\r\n                    sleepGoaltv.setText(Html.fromHtml(String.format(\"<strong>%s Hours</strong>\",sleepGoal)));\r\n                    weighttv.setText(Html.fromHtml(String.format(\"<strong>%s </strong>KiloGrams\",weightStr)));\r\n                    weightGoaltv.setText(Html.fromHtml(String.format(\"<strong>%s KG</strong>\",weightGoal)));\r\n\r\n                    if (stepsStr.equals(\"null\")){\r\n                        stepstv.setText(R.string.No_data);\r\n                    }if (waterStr.equals(\"null\")){\r\n                        glassestv.setText(R.string.No_data);\r\n                    }if (waterGoal.equals(\"null\")){\r\n                        glassesGoaltv.setText(R.string.No_data);\r\n                    }if (sleephrsStr.equals(\"null\")){\r\n                        sleeptv.setText(R.string.No_data);\r\n                    }if (sleepGoal.equals(\"null\")){\r\n                        sleepGoaltv.setText(R.string.No_data);\r\n                    }if (weightStr.equals(\"null\")){\r\n                        weighttv.setText(R.string.No_data);\r\n                    }if (weightGoal.equals(\"null\")){\r\n                        weightGoaltv.setText(R.string.No_data);\r\n                    }\r\n\r\n                    steps_update(stepsStr,stepsGoal);\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n            //else if (response.equals(\"failure\")){\r\n            else{\r\n                Log.d(\"clientMetrics\",\"failure\");\r\n                Toast.makeText(getContext(), \"ClientMetrics failed\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        },error -> Log.d(\"dashBoardFrag\", error.toString()))\r\n        {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n                data.put(\"clientID\", DataFromDatabase.client_id);\r\n                return data;\r\n            }\r\n        };\r\n\r\n        // RequestQueue requestQueue = Volley.newRequestQueue(getContext());\r\n        // requestQueue.add(stringRequest);\r\n        RequestQueue requestQueue1 = Volley.newRequestQueue(getContext());\r\n        requestQueue1.add(stringRequest);\r\n\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n\r\n//        Log.d(\"ClientMetrics\",\"at end\");\r\n\r\n        DashBoardMain dashBoardMain = (DashBoardMain) requireActivity();\r\n        String cardClicked = dashBoardMain.getCardClicked();\r\n\r\n        if(cardClicked != null) {\r\n            switch (cardClicked) {\r\n                case \"step\":\r\n                    Bundle stepBundle = new Bundle();\r\n                    stepBundle.putBoolean(\"notification\", true);\r\n                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_stepTrackerFragment, stepBundle);\r\n                    break;\r\n                case \"sleep\":\r\n                    Bundle sleepBundle = new Bundle();\r\n                    sleepBundle.putBoolean(\"notification\", true);\r\n                    sleepBundle.putString(\"sleepTime\", dashBoardMain.getSleepTime());\r\n                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_sleepTrackerFragment, sleepBundle);\r\n                    break;\r\n                case \"weight\": Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_weightTrackerFragment);\r\n                    break;\r\n                case \"heart\": Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_heartRate);\r\n                    break;\r\n                case \"calorie\": Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_calorieTrackerFragment);\r\n                    break;\r\n                case \"water\":\r\n                    Bundle waterBundle = new Bundle();\r\n                    waterBundle.putBoolean(\"notification\", true);\r\n                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_waterTrackerFragment, waterBundle);\r\n            }\r\n        }\r\n        return view;\r\n    }\r\n\r\n    public void setProfileImage(Drawable drawable) {\r\n        profile.setImageDrawable(drawable);\r\n    }\r\n\r\n\r\n    private void getLatestCalorieData() {\r\n        //String calorieUrl = String.format(\"%sgetLatestCalorieData.php\", DataFromDatabase.ipConfig);\r\n        String calorieUrl = \"https://infits.in/androidApi/getLatestCalorieData.php\";\r\n        calorietv.setText(\"------\");\r\n        calorieGoaltv.setText(\"2000 Kcal\");\r\n\r\n        StringRequest calorieRequest = new StringRequest( Request.Method.POST, calorieUrl,\r\n                response -> {\r\n                    Log.d(\"DashBoardFragment\", response);\r\n\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        JSONObject array = object.getJSONObject(\"food\");\r\n\r\n                        if (array.isNull(\"Calories\")) {\r\n                            calorietv.setText(\"0 kcal\");\r\n                            String calorieGoalText = array.getString(\"goal\") + \" kcal\";\r\n                            calorieGoaltv.setText(calorieGoalText);\r\n                        } else {\r\n                            String calorieValueText = array.getString(\"Calories\") + \" kcal\";\r\n                            String calorieGoalText = array.getString(\"goal\") + \" kcal\";\r\n\r\n                            calorietv.setText(calorieValueText);\r\n                            calorieGoaltv.setText(calorieGoalText);\r\n                        }\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                },\r\n                error -> Log.e(\"DashBoardFragment\", error.toString())\r\n        ) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n                Date date = new Date();\r\n                data.put(\"clientID\", DataFromDatabase.clientuserID);\r\n                data.put(\"dateandtime\",caloriedateFormat.format(date));\r\n\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(calorieRequest);\r\n        calorieRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    private void getLatestWeightData(){\r\n        //String Url = String.format(\"%sgetLatestWeightData.php\", DataFromDatabase.ipConfig);\r\n        String Url = \"https://infits.in/androidApi/getLatestWeightData.php\";\r\n        weighttv.setText(\"------\");\r\n        weightGoaltv.setText(\"70 Kg\");\r\n\r\n        StringRequest calorieRequest = new StringRequest( Request.Method.POST, Url,\r\n                response -> {\r\n                    Log.d(\"DashBoardFragment Weight\", response);\r\n\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        JSONObject array = object.getJSONObject(\"weight\");\r\n\r\n                        if(array.length() == 0) {\r\n                            weighttv.setText(\"----------\");\r\n                            weightGoaltv.setText(\"----------\");\r\n                        }else{\r\n                            String weight = array.getString(\"weight\");\r\n                            String Goal = array.getString(\"goal\");\r\n                            String bmi = array.getString(\"bmi\");\r\n\r\n                            weighttv.setText((weight) + \" Kg\");\r\n                            weightGoaltv.setText((Goal) + \" Kg\");\r\n                            DataFromDatabase.weightStr = weight;\r\n                            DataFromDatabase.weightGoal = Goal;\r\n                            DataFromDatabase.bmi = bmi;\r\n                        }\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                },\r\n                error -> Log.e(\"DashBoardFragment\", error.toString())\r\n        ) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n                data.put(\"clientID\", DataFromDatabase.clientuserID);\r\n\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(calorieRequest);\r\n        calorieRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    private void hooks(View view) {\r\n        menuBtn = view.findViewById(R.id.hamburger_menu);\r\n        notificationBell = view.findViewById(R.id.dashboard_bell);\r\n        notificationBellUpdate = view.findViewById(R.id.dashboard_bell_update);\r\n\r\n        name = view.findViewById(R.id.nameInDash);\r\n        date = view.findViewById(R.id.date);\r\n\r\n        //profile = view.findViewById(R.id.profile1);\r\n\r\n        /*\r\n        if (DataFromDatabase.profile != null) {\r\n            profile.setImageBitmap(DataFromDatabase.profile);\r\n        } else {\r\n            if (getActivity() != null) {\r\n                fragment.setProfileImage(ContextCompat.getDrawable(getActivity(), R.drawable.profile));\r\n            }\r\n        }*/\r\n\r\n        //profile.setImageBitmap(DataFromDatabase.profile);\r\n\r\n        stepstv = view.findViewById(R.id.steps);\r\n        glassestv = view.findViewById(R.id.glasses);\r\n        glassesGoaltv = view.findViewById(R.id.glassesGoal);\r\n        sleeptv = view.findViewById(R.id.sleep);\r\n        sleepGoaltv = view.findViewById(R.id.sleepgoal);\r\n        weighttv = view.findViewById(R.id.weight);\r\n        weightGoaltv = view.findViewById(R.id.weightGoal);\r\n        calorietv = view.findViewById(R.id.calorie);\r\n        calorieGoaltv = view.findViewById(R.id.GoalCalorie);\r\n        bpmtv = view.findViewById(R.id.bpm);\r\n        bpmUptv = view.findViewById(R.id.bpmUp);\r\n        bpmDowntv = view.findViewById(R.id.bpmDown);\r\n\r\n        //Dates\r\n        meal_date = view.findViewById(R.id.date_meal);\r\n        diet_date = view.findViewById(R.id.date_diet);\r\n        workout_date = view.findViewById(R.id.workout_date);\r\n        consul_date = view.findViewById(R.id.consultation_date);\r\n\r\n        //goPro buttons\r\n        consultation_gopro_btn=view.findViewById(R.id.consultation_gopro_btn);\r\n        diet_chart_gopro_btn=view.findViewById(R.id.diet_chart_gopro_btn);\r\n        meal_tracker_gopro_btn=view.findViewById(R.id.meal_tracker_go_pro_btn);\r\n\r\n        //Pro textviews\r\n        consultation_text=view.findViewById(R.id.consultation_txt);\r\n        meal_tracker_text=view.findViewById(R.id.meal_track_txt);\r\n        diet_chart_text=view.findViewById(R.id.diet_chart_txt);\r\n        pro_identifier=view.findViewById(R.id.pro_identifier);\r\n\r\n        //CardView\r\n        stepcard = view.findViewById(R.id.stepcard);\r\n        heartcard = view.findViewById(R.id.heartcard);\r\n        watercard = view.findViewById(R.id.watercard);\r\n        sleepcard = view.findViewById(R.id.sleepcard);\r\n        weightcard = view.findViewById(R.id.weightcard);\r\n        caloriecard = view.findViewById(R.id.caloriecard);\r\n        dietcard = view.findViewById(R.id.dietcardPro);\r\n\r\n\r\n        goProCard = view.findViewById(R.id.proCrad);\r\n        mealTrackerCard = view.findViewById(R.id.meal_tracker);\r\n        diet_date = view.findViewById(R.id.date_diet);\r\n        workout_card = view.findViewById(R.id.workout_card);\r\n        stepsProgressPercent = view.findViewById(R.id.steps_progress_percent);\r\n        stepsProgressBar = view.findViewById(R.id.steps_progress_bar);\r\n    }\r\n\r\n    private void showDialog() {\r\n        final Dialog dialog = new Dialog(getActivity());\r\n        dialog.setCancelable(true);\r\n        dialog.setContentView(R.layout.referralcodedialog);\r\n        final EditText referralCode = dialog.findViewById(R.id.referralcode);\r\n        ImageView checkReferral = dialog.findViewById(R.id.checkReferral);\r\n        checkReferral.setOnClickListener(vi->{\r\n\r\n            //String referralUrl = String.format(\"%sverify.php\",DataFromDatabase.ipConfig);\r\n            StringRequest stringRequest = new StringRequest(Request.Method.POST,urlRefer,\r\n                    response->{\r\n                        Log.d(\"DietitianVerification\", response);\r\n\r\n                        if(response.equals(\"found\")) {\r\n                            showSuccessDialog();\r\n                            System.out.println(\"Verified\");\r\n                        }else {\r\n                            System.out.println(\"Not verified\");\r\n                            showFailureDialog();\r\n                        }\r\n\r\n                    },error->{\r\n\r\n            }){\r\n                @Nullable\r\n                @Override\r\n                protected Map<String, String> getParams() throws AuthFailureError {\r\n\r\n                    Map<String,String> data = new HashMap<>();\r\n\r\n                    //data.put(\"clientID\",DataFromDatabase.clientuserID);\r\n                    Entered = referralCode.getText().toString();\r\n                    data.put(\"dietitian_verify_code\",Entered);\r\n                    data.put(\"type\",\"1\");\r\n\r\n\r\n                    return data;\r\n                }\r\n            };\r\n            Volley.newRequestQueue(getContext()).add(stringRequest);\r\n            stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                    DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                    DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n            dialog.dismiss();\r\n        });\r\n        dialog.show();\r\n    }\r\n\r\n    private void showFailureDialog() {\r\n        Dialog dialog = new Dialog(requireContext());\r\n        dialog.setContentView(R.layout.wrong_referral_dialog);\r\n        dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n        Button btn = dialog.findViewById(R.id.try_again);\r\n\r\n        btn.setOnClickListener(v -> dialog.dismiss());\r\n\r\n        dialog.show();\r\n    }\r\n\r\n    private void showSuccessDialog() {\r\n        getUpdatedDietitianData();\r\n        Dialog dialog = new Dialog(requireContext());\r\n        dialog.setContentView(R.layout.referral_congratulation);\r\n        dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n        ImageView btn = dialog.findViewById(R.id.btn);\r\n        consultation_gopro_btn.setVisibility(View.GONE);\r\n        meal_tracker_gopro_btn.setVisibility(View.GONE);\r\n        diet_chart_gopro_btn.setVisibility(View.GONE);\r\n\r\n        consul_date.setVisibility(View.VISIBLE);\r\n        meal_date.setVisibility(View.VISIBLE);\r\n        diet_date.setVisibility(View.VISIBLE);\r\n        consultation_text.setVisibility(View.VISIBLE);\r\n        meal_tracker_text.setVisibility(View.VISIBLE);\r\n        diet_chart_text.setVisibility(View.VISIBLE);\r\n\r\n        pro_identifier.setVisibility(View.VISIBLE);\r\n\r\n\r\n        btn.setOnClickListener(v -> {\r\n            dialog.dismiss();\r\n            updateVerification();\r\n\r\n        });\r\n\r\n        dialog.show();\r\n    }\r\n    private void getUpdatedDietitianData(){\r\n        final Dialog dialog = new Dialog(getActivity());\r\n        final EditText referralCode = dialog.findViewById(R.id.referralcode);\r\n        String Url = String.format(\"%sgetUpdatedDietitianData.php\", DataFromDatabase.ipConfig);\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,Url, response -> {\r\n            Log.d(\"updatedDietitianData\", response);\r\n            try {\r\n                JSONObject jsonObject = new JSONObject(response);\r\n                if (jsonObject.has(\"DietitianData\")) {\r\n                    JSONObject dietitianData = jsonObject.getJSONObject(\"DietitianData\");\r\n                    DataFromDatabase.dietitian_id = dietitianData.getString(\"dietitianID\");\r\n                    DataFromDatabase.dietitianuserID = dietitianData.getString(\"dietitianuserID\");\r\n                    System.out.println(DataFromDatabase.dietitian_id);\r\n                    System.out.println(DataFromDatabase.dietitianuserID);\r\n                }\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        },error -> {\r\n\r\n            Log.d(\"updatedDietitianData Err\",error.toString());\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"verify_code\",Entered);\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(getActivity()).add(stringRequest);\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(7000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    private void updateVerification(){\r\n        final Dialog dialog = new Dialog(getActivity());\r\n        final EditText referralCode = dialog.findViewById(R.id.referralcode);\r\n\r\n        //String url = String.format(\"%sdietitianUpdated.php\",DataFromDatabase.ipConfig);\r\n        String url = \"https://infits.in/androidApi/dietitianUpdated.php\";\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,url,\r\n                response->{\r\n                    Log.d(\"DietitianUpdated\", response);\r\n\r\n                    if(response.equals(\"Updated\")) {\r\n                        System.out.println(\"Updated\");\r\n                        DataFromDatabase.proUser = true;\r\n\r\n                    }else {\r\n                        System.out.println(\"Not verified\");\r\n                    }\r\n\r\n                },error->{\r\n\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n\r\n                Map<String,String> data = new HashMap<>();\r\n\r\n                data.put(\"clientuserID\",DataFromDatabase.clientuserID);\r\n                data.put(\"referralCode\",Entered);\r\n                data.put(\"dietitianID\",DataFromDatabase.dietitian_id);\r\n                data.put(\"dietitianuserID\",DataFromDatabase.dietitianuserID);\r\n                data.put(\"type\",\"1\");\r\n                data.put(\"verification\",\"0\");\r\n\r\n\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(getContext()).add(stringRequest);\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(7000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n\r\n    }\r\n\r\n    public static void updateStepCard(Intent intent) {\r\n        Log.wtf(\"dashboard\", \"entered\");\r\n        if (intent.getExtras() != null) {\r\n            float steps = intent.getIntExtra(\"steps\",0);\r\n            final float[] goalPercent = new float[1];\r\n\r\n            Log.i(\"StepTracker\",\"Countdown seconds remaining:\" + steps);\r\n            Handler handler = new Handler();\r\n            handler.postDelayed(() -> {\r\n                goalPercent[0] = ((steps/goalVal)*100)/100;\r\n                stepsProgressBar.setProgress((int) goalPercent[0]);\r\n                stepsProgressPercent.setText(String.valueOf((int) goalPercent[0]));\r\n\r\n                System.out.println(\"steps: \" + steps);\r\n                System.out.println(\"goalVal: \" + goalVal);\r\n                System.out.println(\"goalPercent: \" + goalPercent[0]);\r\n            },2000);\r\n        }\r\n    }\r\n\r\n    public void getLatestWaterData() {\r\n        //String url = String.format(\"%sgetLatestWaterdt.php\", DataFromDatabase.ipConfig);\r\n        String url = \"https://infits.in/androidApi/getLatestWaterdt.php\";\r\n        glassestv.setText(\"----------\");\r\n        glassesGoaltv.setText(\"8 Glasses\");\r\n        StringRequest request = new StringRequest(Request.Method.POST, url,\r\n                response -> {\r\n                    Log.d(\"dashboardFrag\", response);\r\n\r\n                    try {\r\n                        JSONObject object = new JSONObject(response);\r\n                        JSONObject array = object.getJSONObject(\"water\");\r\n\r\n                        if(array.length() == 0) {\r\n                            glassestv.setText(\"----------\");\r\n                            glassesGoaltv.setText(\"----------\");\r\n                        }else{\r\n                            String waterGoalStr = array.getString(\"goal\");\r\n                            String waterConsumedStr = array.getString(\"drinkConsumed\");\r\n\r\n                            waterGoal = Integer.parseInt(waterGoalStr) / 250;\r\n                            waterConsumed = Integer.parseInt(waterConsumedStr) / 250;  // 250 ml = 1 glass\r\n\r\n                            glassestv.setText(waterConsumed + \" Glasses\");\r\n                            glassesGoaltv.setText(waterGoal + \" Glasses\");\r\n                        }\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }, error -> Log.e(\"dashboardFrag\", error.toString())) {\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> data = new HashMap<>();\r\n                Date date= new Date();\r\n                data.put(\"clientuserID\", DataFromDatabase.clientuserID);\r\n                data.put(\"dateandtime\",dateFormat.format(date));\r\n                return data;\r\n            }\r\n        };\r\n        Volley.newRequestQueue(requireContext()).add(request);\r\n        request.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n    }\r\n\r\n    public void steps_update(String steps , String goal)\r\n    {\r\n        int step1=Integer.parseInt(steps);\r\n        int goal1= Integer.parseInt(goal);\r\n\r\n        int stepPercent= (int) (step1 * 100)/goal1;\r\n        String stepPercentText = stepPercent + \"%\";\r\n        stepsProgressPercent.setText(stepPercentText);\r\n        stepsProgressBar.setProgress(stepPercent);\r\n\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/DashBoardFragment.java b/app/src/main/java/com/example/infits/DashBoardFragment.java
--- a/app/src/main/java/com/example/infits/DashBoardFragment.java	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/java/com/example/infits/DashBoardFragment.java	(date 1700049856712)
@@ -1,5 +1,7 @@
 package com.example.infits;
+
 import static com.example.infits.StepTrackerFragment.goalVal;
+
 import android.app.Dialog;
 import android.content.Context;
 import android.content.Intent;
@@ -25,6 +27,7 @@
 import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.cardview.widget.CardView;
@@ -34,15 +37,20 @@
 import androidx.work.ExistingPeriodicWorkPolicy;
 import androidx.work.PeriodicWorkRequest;
 import androidx.work.WorkManager;
+
 import com.android.volley.AuthFailureError;
 import com.android.volley.DefaultRetryPolicy;
 import com.android.volley.Request;
 import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
+
 import com.bumptech.glide.Glide;
 
 import java.text.DateFormat;
@@ -53,6 +61,7 @@
 import java.util.Locale;
 import java.util.Map;
 import java.util.concurrent.TimeUnit;
+
 public class DashBoardFragment extends Fragment {
 
     //String urlRefer = String.format("%sverify.php",DataFromDatabase.ipConfig);
@@ -63,9 +72,9 @@
     SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd H:m:S", Locale.getDefault());
 
     SimpleDateFormat caloriedateFormat = new SimpleDateFormat("yyyy-MM-dd H:m:S", Locale.getDefault());
-
+    AdapterForSleepPastActivity adapterForSleepPastActivity;
 
-    String url = String.format("%sdashboard.php",DataFromDatabase.ipConfig);
+    String url = String.format("%sdashboard.php", DataFromDatabase.ipConfig);
     //String url = "https://infits.in/androidApi/dashboard.php";
 
 
@@ -90,16 +99,16 @@
     TextView bpmUptv;
     TextView bpmDowntv;
     TextView meal_date;
-    TextView diet_date,meal_tracker_text;
+    TextView diet_date, meal_tracker_text;
     static TextView stepsProgressPercent;
     RequestQueue queue;
     ImageButton sidemenu, notifmenu;
-    CardView stepcard, heartcard, watercard, sleepcard, weightcard, caloriecard,dietcard,goProCard,mealTrackerCard,workout_card;
+    CardView stepcard, heartcard, watercard, sleepcard, weightcard, caloriecard, dietcard, goProCard, mealTrackerCard, workout_card;
     Button btnsub, btnsub1;
-    TextView name,date, workout_date, consul_date;
+    TextView name, date, workout_date, consul_date;
     ImageView profile;
 
-    CardView consultation_gopro_btn, diet_chart_gopro_btn,meal_tracker_gopro_btn;
+    CardView consultation_gopro_btn, diet_chart_gopro_btn, meal_tracker_gopro_btn;
 
     TextView consultation_text, diet_chart_text;
     ImageView pro_identifier;
@@ -109,7 +118,7 @@
     ImageView menuBtn, notificationBell, notificationBellUpdate;
     int waterGoal = 0, waterConsumed = 0;
 
-    String dietitianID,dietitianuserID,dietitianName;
+    String dietitianID, dietitianuserID, dietitianName;
 
     public interface OnMenuClicked {
         void menuClicked();
@@ -162,6 +171,7 @@
         View view = inflater.inflate(R.layout.fragment_dash_board, container, false);
 
         hooks(view);
+        adapterForSleepPastActivity = new AdapterForSleepPastActivity();
 
         SharedPreferences sharedPreferences = getActivity().getSharedPreferences("DateForSteps", Context.MODE_PRIVATE);
 
@@ -175,7 +185,7 @@
         SharedPreferences.Editor myEdit = sharedPreferences.edit();
 
         myEdit.putString("date", simpleDateFormat.format(dateForSteps));
-        myEdit.putBoolean("verified",false);
+        myEdit.putBoolean("verified", false);
         myEdit.apply();
 
         SharedPreferences prefs = requireContext().getSharedPreferences("loginDetails", Context.MODE_PRIVATE);
@@ -209,8 +219,8 @@
             @Nullable
             @Override
             protected Map<String, String> getParams() throws AuthFailureError {
-                Map<String,String> data = new HashMap<>();
-                data.put("userID",clientuserID);
+                Map<String, String> data = new HashMap<>();
+                data.put("userID", clientuserID);
                 return data;
             }
         };
@@ -233,7 +243,7 @@
         menuBtn.setOnClickListener(v -> onMenuClicked.menuClicked());
 
 
-        if (DataFromDatabase.proUser){
+        if (DataFromDatabase.proUser) {
 
             consultation_gopro_btn.setVisibility(View.GONE);
             meal_tracker_gopro_btn.setVisibility(View.GONE);
@@ -253,7 +263,7 @@
         SharedPreferences inAppPrefs = requireActivity().getSharedPreferences("inAppNotification", Context.MODE_PRIVATE);
         boolean newNotification = inAppPrefs.getBoolean("newNotification", false);
 
-        if(newNotification) {
+        if (newNotification) {
             notificationBellUpdate.setVisibility(View.VISIBLE);
         } else {
             notificationBellUpdate.setVisibility(View.GONE);
@@ -281,7 +291,7 @@
         Log.d("frag", String.valueOf(stepGoal));
         Log.d("frag", String.valueOf(stepPercent));
         if (FetchTrackerInfos.currentSteps > 1)
-            stepstv.setText(FetchTrackerInfos.currentSteps+" steps");
+            stepstv.setText(FetchTrackerInfos.currentSteps + " steps");
         else stepstv.setText("--------");
         stepsProgressPercent.setText(stepPercentText);
         stepsProgressBar.setProgress(stepPercent);
@@ -291,9 +301,18 @@
         SharedPreferences sleepPrefs = requireActivity().getSharedPreferences("sleepPrefs", Context.MODE_PRIVATE);
         String sleepGoalText = sleepPrefs.getString("goal", "8") + " Hours";
         String sleepText = sleepPrefs.getString("hours", "00") + " hr " + sleepPrefs.getString("minutes", "00") + " mins";
-
         sleepGoaltv.setText(sleepGoalText);
-        sleeptv.setText(sleepText);
+        getCurrentSleepDuration(new SleepDurationCallback() {
+            @Override
+            public void onSleepDurationReceived(String sleepDuration) {
+                sleeptv.setText(sleepDuration);
+            }
+
+            @Override
+            public void onError(String errorMessage) {
+                Log.e("Sleep Duration Error", errorMessage);
+            }
+        });
 
         watercard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_waterTrackerFragment));
         getLatestWaterData();
@@ -313,15 +332,14 @@
             }
         });
 
-        mealTrackerCard.setOnClickListener(v->{
+        mealTrackerCard.setOnClickListener(v -> {
             updateVerification();
-            if (DataFromDatabase.proUser){
+            if (DataFromDatabase.proUser) {
                 //Intent intent = new Intent(getActivity(),Meal_main.class);
                 //requireActivity().finish();
                 //startActivity(intent);
                 Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_mealTracker);
-            }
-            else {
+            } else {
                 showDialog();
             }
         });
@@ -337,35 +355,34 @@
                     startActivity(intent);
                 }
 
-                //Toast.makeText(getContext(),"Consultation card clicked",Toast.LENGTH_SHORT).show();
             }
             else {
-                showDialog();
+                startActivity(new Intent(getActivity(), connectingDietitian.class));
+
             }
         });
 
-        heartcard.setOnClickListener(v-> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_heartRate));
+        heartcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_heartRate));
 
         //Include this!!
         //dietcard.setOnClickListener(v -> Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_fragment_diet_chart));
 
-        dietcard.setOnClickListener(v->{
-            if (DataFromDatabase.proUser){
+        dietcard.setOnClickListener(v -> {
+            if (DataFromDatabase.proUser) {
                 updateVerification();
                 //Intent intent = new Intent(getActivity(),Meal_main.class);
                 //requireActivity().finish();
                 //startActivity(intent);
                 Navigation.findNavController(v).navigate(R.id.action_dashBoardFragment_to_fragment_diet_chart);
-            }
-            else {
+            } else {
                 showDialog();
             }
         });
 
-        if (DataFromDatabase.proUser){
-            StringRequest dietitianDetails = new StringRequest(Request.Method.POST,urlDt,response -> {
+        if (DataFromDatabase.proUser) {
+            StringRequest dietitianDetails = new StringRequest(Request.Method.POST, urlDt, response -> {
                 System.out.println(response);
-                Log.d("dietitiandetails",response);
+                Log.d("dietitiandetails", response);
                 try {
                     JSONObject object = new JSONObject(response);
                     JSONObject array = object.getJSONObject("dietitiandetails");
@@ -376,16 +393,16 @@
                 } catch (JSONException jsonException) {
                     jsonException.printStackTrace();
                 }
-            },error -> {
+            }, error -> {
 
-            }){
+            }) {
                 @Nullable
                 @Override
                 protected Map<String, String> getParams() throws AuthFailureError {
 
-                    Map<String,String> data = new HashMap<>();
+                    Map<String, String> data = new HashMap<>();
 
-                    data.put("userID",prefs.getString("dietitianuserID", DataFromDatabase.dietitianuserID));
+                    data.put("userID", prefs.getString("dietitianuserID", DataFromDatabase.dietitianuserID));
 
                     return data;
                 }
@@ -395,13 +412,10 @@
         }
 
 
-
-
-
         queue = Volley.newRequestQueue(getContext());
-        Log.d("ClientMetrics","before");
+        Log.d("ClientMetrics", "before");
 
-        StringRequest stringRequestHeart = new StringRequest(Request.Method.POST,String.format("%sheartrate.php",DataFromDatabase.ipConfig),response -> {
+        StringRequest stringRequestHeart = new StringRequest(Request.Method.POST, String.format("%sheartrate.php", DataFromDatabase.ipConfig), response -> {
 
             try {
                 JSONObject jsonResponse = new JSONObject(response);
@@ -410,27 +424,27 @@
                 bpmtv.setText(jsonObject.getString("avg"));
                 bpmDowntv.setText(jsonObject.getString("min"));
                 bpmUptv.setText(jsonObject.getString("max"));
-            }catch (JSONException jsonException){
+            } catch (JSONException jsonException) {
                 jsonException.printStackTrace();
             }
-        },error -> {
+        }, error -> {
 
-        }){
+        }) {
             @Nullable
             @Override
             protected Map<String, String> getParams() throws AuthFailureError {
-                Map<String,String> data = new HashMap<>();
-                data.put("userID",clientuserID);
+                Map<String, String> data = new HashMap<>();
+                data.put("userID", clientuserID);
                 return data;
             }
         };
 
         Volley.newRequestQueue(getContext()).add(stringRequestHeart);
 
-        StringRequest stringRequest1 = new StringRequest(Request.Method.POST,url, response -> {
-            if (!response.equals("failure")){
-                Log.d("ClientMetrics","success");
-                Log.d("response",response);
+        StringRequest stringRequest1 = new StringRequest(Request.Method.POST, url, response -> {
+            if (!response.equals("failure")) {
+                Log.d("ClientMetrics", "success");
+                Log.d("response", response);
                 try {
                     JSONArray jsonArray = new JSONArray(response);
                     JSONObject object = jsonArray.getJSONObject(0);
@@ -447,31 +461,37 @@
                     DataFromDatabase.weightStr = weightStr;
                     String weightGoal = object.getString("weightgoal");
                     DataFromDatabase.weightGoal = weightGoal;
-                    stepstv.setText(Html.fromHtml(String.format("<strong>%s</strong> steps",stepsStr)));
-                    glassestv.setText(Html.fromHtml(String.format("<strong>%s</strong> ml",waterStr)));
-                    glassesGoaltv.setText(Html.fromHtml(String.format("<strong>%s ml</strong>",waterGoal)));
-                    sleeptv.setText(Html.fromHtml(String.format("<strong>%s</strong> hr <strong>%s</strong> mins",sleephrsStr,sleepminsStr)));
-                    sleepGoaltv.setText(Html.fromHtml(String.format("<strong>%s Hours</strong>",sleepGoal)));
-                    weighttv.setText(Html.fromHtml(String.format("<strong>%s </strong>KiloGrams",weightStr)));
-                    weightGoaltv.setText(Html.fromHtml(String.format("<strong>%s KG</strong>",weightGoal)));
+                    stepstv.setText(Html.fromHtml(String.format("<strong>%s</strong> steps", stepsStr)));
+                    glassestv.setText(Html.fromHtml(String.format("<strong>%s</strong> ml", waterStr)));
+                    glassesGoaltv.setText(Html.fromHtml(String.format("<strong>%s ml</strong>", waterGoal)));
+                    sleeptv.setText(Html.fromHtml(String.format("<strong>%s</strong> hr <strong>%s</strong> mins", sleephrsStr, sleepminsStr)));
+                    sleepGoaltv.setText(Html.fromHtml(String.format("<strong>%s Hours</strong>", sleepGoal)));
+                    weighttv.setText(Html.fromHtml(String.format("<strong>%s </strong>KiloGrams", weightStr)));
+                    weightGoaltv.setText(Html.fromHtml(String.format("<strong>%s KG</strong>", weightGoal)));
 
-                    if (stepsStr.equals("null")){
+                    if (stepsStr.equals("null")) {
                         stepstv.setText(R.string.No_data);
-                    }if (waterStr.equals("null")){
+                    }
+                    if (waterStr.equals("null")) {
                         glassestv.setText(R.string.No_data);
-                    }if (waterGoal.equals("null")){
+                    }
+                    if (waterGoal.equals("null")) {
                         glassesGoaltv.setText(R.string.No_data);
-                    }if (sleephrsStr.equals("null")){
+                    }
+                    if (sleephrsStr.equals("null")) {
                         sleeptv.setText(R.string.No_data);
-                    }if (sleepGoal.equals("null")){
+                    }
+                    if (sleepGoal.equals("null")) {
                         sleepGoaltv.setText(R.string.No_data);
-                    }if (weightStr.equals("null")){
+                    }
+                    if (weightStr.equals("null")) {
                         weighttv.setText(R.string.No_data);
-                    }if (weightGoal.equals("null")){
+                    }
+                    if (weightGoal.equals("null")) {
                         weightGoaltv.setText(R.string.No_data);
                     }
 
-                    steps_update(stepsStr,stepsGoal);
+                    steps_update(stepsStr, stepsGoal);
 
 
                 } catch (JSONException e) {
@@ -480,12 +500,11 @@
 
             }
             //else if (response.equals("failure")){
-            else{
-                Log.d("clientMetrics","failure");
+            else {
+                Log.d("clientMetrics", "failure");
                 Toast.makeText(getContext(), "ClientMetrics failed", Toast.LENGTH_SHORT).show();
             }
-        },error -> Log.d("dashBoardFrag", error.toString()))
-        {
+        }, error -> Log.d("dashBoardFrag", error.toString())) {
             @Nullable
             @Override
             protected Map<String, String> getParams() throws AuthFailureError {
@@ -509,7 +528,7 @@
         DashBoardMain dashBoardMain = (DashBoardMain) requireActivity();
         String cardClicked = dashBoardMain.getCardClicked();
 
-        if(cardClicked != null) {
+        if (cardClicked != null) {
             switch (cardClicked) {
                 case "step":
                     Bundle stepBundle = new Bundle();
@@ -522,11 +541,14 @@
                     sleepBundle.putString("sleepTime", dashBoardMain.getSleepTime());
                     Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_sleepTrackerFragment, sleepBundle);
                     break;
-                case "weight": Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_weightTrackerFragment);
+                case "weight":
+                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_weightTrackerFragment);
                     break;
-                case "heart": Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_heartRate);
+                case "heart":
+                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_heartRate);
                     break;
-                case "calorie": Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_calorieTrackerFragment);
+                case "calorie":
+                    Navigation.findNavController(requireActivity(), R.id.trackernav).navigate(R.id.action_dashBoardFragment_to_calorieTrackerFragment);
                     break;
                 case "water":
                     Bundle waterBundle = new Bundle();
@@ -537,6 +559,79 @@
         return view;
     }
 
+    private String getCurrentSleepDuration(SleepDurationCallback callback) {
+        String url = "https://infits.in/androidApi/pastActivitySleep.php";
+        String clientUserId = DataFromDatabase.clientuserID;
+        Log.d("entered", "url");
+        final StringBuilder resultBuilder = new StringBuilder();
+        StringRequest request = new StringRequest(Request.Method.POST, url,
+                new Response.Listener<String>() {
+                    @Override
+                    public void onResponse(String response) {
+                        // Handle the JSON response from the server
+                        Log.d("SleepDataResponse", response);
+
+                        // Parse the JSON response
+                        try {
+                            JSONObject jsonResponse = new JSONObject(response);
+                            JSONArray sleepArray = jsonResponse.getJSONArray("sleep");
+
+                            // Variables to store total hours and minutes slept
+                            int totalHours = 0;
+                            int totalMinutes = 0;
+
+                            // Iterate through the sleep data array
+                            for (int i = 0; i < sleepArray.length(); i++) {
+                                JSONObject sleepData = sleepArray.getJSONObject(i);
+                                String hrsSlept = sleepData.getString("hrsSlept");
+
+                                // Parse hours and minutes from the "hrsSlept" string
+                                String[] parts = hrsSlept.split(" ");
+                                int hours = Integer.parseInt(parts[0]);
+                                int minutes = Integer.parseInt(parts[2]);
+
+                                // Add to the total hours and minutes
+                                totalHours += hours;
+                                totalMinutes += minutes;
+                            }
+
+                            // Convert excess minutes to hours
+                            totalHours += totalMinutes / 60;
+                            totalMinutes %= 60;
+
+                            // Now, totalHours and totalMinutes contain the summed up sleep duration
+                            Log.d("TotalSleepDuration", totalHours + " hrs " + totalMinutes + " mins");
+//                      Build the result string
+                            String sleepDuration = String.valueOf(resultBuilder.append(totalHours).append("hrs").append(" ").append(totalMinutes).append("min"));
+                            callback.onSleepDurationReceived(sleepDuration);
+                        } catch (JSONException e) {
+                            e.printStackTrace();
+                            callback.onError("Error parsing JSON");
+                            Log.d("callback","error");
+                        }
+                    }
+                },
+                new Response.ErrorListener() {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        // Handle errors
+                        callback.onError("Error in network request");
+                    }
+                }) {
+            @Override
+            protected Map<String, String> getParams() {
+                Map<String, String> params = new HashMap<>();
+                params.put("clientuserID", clientUserId);
+                String currentDate = new SimpleDateFormat("yyyy-MM-dd H:m:s ", Locale.getDefault()).format(new Date());
+                params.put("selectedDate", currentDate);
+                return params;
+            }
+        };
+
+        Volley.newRequestQueue(getActivity()).add(request);
+        return resultBuilder.toString();
+    }
+
     public void setProfileImage(Drawable drawable) {
         profile.setImageDrawable(drawable);
     }
@@ -548,7 +643,7 @@
         calorietv.setText("------");
         calorieGoaltv.setText("2000 Kcal");
 
-        StringRequest calorieRequest = new StringRequest( Request.Method.POST, calorieUrl,
+        StringRequest calorieRequest = new StringRequest(Request.Method.POST, calorieUrl,
                 response -> {
                     Log.d("DashBoardFragment", response);
 
@@ -579,7 +674,7 @@
                 Map<String, String> data = new HashMap<>();
                 Date date = new Date();
                 data.put("clientID", DataFromDatabase.clientuserID);
-                data.put("dateandtime",caloriedateFormat.format(date));
+                data.put("dateandtime", caloriedateFormat.format(date));
 
                 return data;
             }
@@ -590,13 +685,13 @@
                 DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
     }
 
-    private void getLatestWeightData(){
+    private void getLatestWeightData() {
         //String Url = String.format("%sgetLatestWeightData.php", DataFromDatabase.ipConfig);
         String Url = "https://infits.in/androidApi/getLatestWeightData.php";
         weighttv.setText("------");
         weightGoaltv.setText("70 Kg");
 
-        StringRequest calorieRequest = new StringRequest( Request.Method.POST, Url,
+        StringRequest calorieRequest = new StringRequest(Request.Method.POST, Url,
                 response -> {
                     Log.d("DashBoardFragment Weight", response);
 
@@ -604,10 +699,10 @@
                         JSONObject object = new JSONObject(response);
                         JSONObject array = object.getJSONObject("weight");
 
-                        if(array.length() == 0) {
+                        if (array.length() == 0) {
                             weighttv.setText("----------");
                             weightGoaltv.setText("----------");
-                        }else{
+                        } else {
                             String weight = array.getString("weight");
                             String Goal = array.getString("goal");
                             String bmi = array.getString("bmi");
@@ -680,15 +775,15 @@
         consul_date = view.findViewById(R.id.consultation_date);
 
         //goPro buttons
-        consultation_gopro_btn=view.findViewById(R.id.consultation_gopro_btn);
-        diet_chart_gopro_btn=view.findViewById(R.id.diet_chart_gopro_btn);
-        meal_tracker_gopro_btn=view.findViewById(R.id.meal_tracker_go_pro_btn);
+        consultation_gopro_btn = view.findViewById(R.id.consultation_gopro_btn);
+        diet_chart_gopro_btn = view.findViewById(R.id.diet_chart_gopro_btn);
+        meal_tracker_gopro_btn = view.findViewById(R.id.meal_tracker_go_pro_btn);
 
         //Pro textviews
-        consultation_text=view.findViewById(R.id.consultation_txt);
-        meal_tracker_text=view.findViewById(R.id.meal_track_txt);
-        diet_chart_text=view.findViewById(R.id.diet_chart_txt);
-        pro_identifier=view.findViewById(R.id.pro_identifier);
+        consultation_text = view.findViewById(R.id.consultation_txt);
+        meal_tracker_text = view.findViewById(R.id.meal_track_txt);
+        diet_chart_text = view.findViewById(R.id.diet_chart_txt);
+        pro_identifier = view.findViewById(R.id.pro_identifier);
 
         //CardView
         stepcard = view.findViewById(R.id.stepcard);
@@ -714,34 +809,34 @@
         dialog.setContentView(R.layout.referralcodedialog);
         final EditText referralCode = dialog.findViewById(R.id.referralcode);
         ImageView checkReferral = dialog.findViewById(R.id.checkReferral);
-        checkReferral.setOnClickListener(vi->{
+        checkReferral.setOnClickListener(vi -> {
 
             //String referralUrl = String.format("%sverify.php",DataFromDatabase.ipConfig);
-            StringRequest stringRequest = new StringRequest(Request.Method.POST,urlRefer,
-                    response->{
+            StringRequest stringRequest = new StringRequest(Request.Method.POST, urlRefer,
+                    response -> {
                         Log.d("DietitianVerification", response);
 
-                        if(response.equals("found")) {
+                        if (response.equals("found")) {
                             showSuccessDialog();
                             System.out.println("Verified");
-                        }else {
+                        } else {
                             System.out.println("Not verified");
                             showFailureDialog();
                         }
 
-                    },error->{
+                    }, error -> {
 
-            }){
+            }) {
                 @Nullable
                 @Override
                 protected Map<String, String> getParams() throws AuthFailureError {
 
-                    Map<String,String> data = new HashMap<>();
+                    Map<String, String> data = new HashMap<>();
 
                     //data.put("clientID",DataFromDatabase.clientuserID);
                     Entered = referralCode.getText().toString();
-                    data.put("dietitian_verify_code",Entered);
-                    data.put("type","1");
+                    data.put("dietitian_verify_code", Entered);
+                    data.put("type", "1");
 
 
                     return data;
@@ -797,12 +892,13 @@
 
         dialog.show();
     }
-    private void getUpdatedDietitianData(){
+
+    private void getUpdatedDietitianData() {
         final Dialog dialog = new Dialog(getActivity());
         final EditText referralCode = dialog.findViewById(R.id.referralcode);
         String Url = String.format("%sgetUpdatedDietitianData.php", DataFromDatabase.ipConfig);
 
-        StringRequest stringRequest = new StringRequest(Request.Method.POST,Url, response -> {
+        StringRequest stringRequest = new StringRequest(Request.Method.POST, Url, response -> {
             Log.d("updatedDietitianData", response);
             try {
                 JSONObject jsonObject = new JSONObject(response);
@@ -816,15 +912,15 @@
             } catch (JSONException e) {
                 e.printStackTrace();
             }
-        },error -> {
+        }, error -> {
 
-            Log.d("updatedDietitianData Err",error.toString());
-        }){
+            Log.d("updatedDietitianData Err", error.toString());
+        }) {
             @Nullable
             @Override
             protected Map<String, String> getParams() throws AuthFailureError {
-                Map<String,String> data = new HashMap<>();
-                data.put("verify_code",Entered);
+                Map<String, String> data = new HashMap<>();
+                data.put("verify_code", Entered);
                 return data;
             }
         };
@@ -834,40 +930,40 @@
                 DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
     }
 
-    private void updateVerification(){
+    private void updateVerification() {
         final Dialog dialog = new Dialog(getActivity());
         final EditText referralCode = dialog.findViewById(R.id.referralcode);
 
         //String url = String.format("%sdietitianUpdated.php",DataFromDatabase.ipConfig);
         String url = "https://infits.in/androidApi/dietitianUpdated.php";
 
-        StringRequest stringRequest = new StringRequest(Request.Method.POST,url,
-                response->{
+        StringRequest stringRequest = new StringRequest(Request.Method.POST, url,
+                response -> {
                     Log.d("DietitianUpdated", response);
 
-                    if(response.equals("Updated")) {
+                    if (response.equals("Updated")) {
                         System.out.println("Updated");
                         DataFromDatabase.proUser = true;
 
-                    }else {
+                    } else {
                         System.out.println("Not verified");
                     }
 
-                },error->{
+                }, error -> {
 
-        }){
+        }) {
             @Nullable
             @Override
             protected Map<String, String> getParams() throws AuthFailureError {
 
-                Map<String,String> data = new HashMap<>();
+                Map<String, String> data = new HashMap<>();
 
-                data.put("clientuserID",DataFromDatabase.clientuserID);
-                data.put("referralCode",Entered);
-                data.put("dietitianID",DataFromDatabase.dietitian_id);
-                data.put("dietitianuserID",DataFromDatabase.dietitianuserID);
-                data.put("type","1");
-                data.put("verification","0");
+                data.put("clientuserID", DataFromDatabase.clientuserID);
+                data.put("referralCode", Entered);
+                data.put("dietitianID", DataFromDatabase.dietitian_id);
+                data.put("dietitianuserID", DataFromDatabase.dietitianuserID);
+                data.put("type", "1");
+                data.put("verification", "0");
 
 
                 return data;
@@ -883,20 +979,20 @@
     public static void updateStepCard(Intent intent) {
         Log.wtf("dashboard", "entered");
         if (intent.getExtras() != null) {
-            float steps = intent.getIntExtra("steps",0);
+            float steps = intent.getIntExtra("steps", 0);
             final float[] goalPercent = new float[1];
 
-            Log.i("StepTracker","Countdown seconds remaining:" + steps);
+            Log.i("StepTracker", "Countdown seconds remaining:" + steps);
             Handler handler = new Handler();
             handler.postDelayed(() -> {
-                goalPercent[0] = ((steps/goalVal)*100)/100;
+                goalPercent[0] = ((steps / goalVal) * 100) / 100;
                 stepsProgressBar.setProgress((int) goalPercent[0]);
                 stepsProgressPercent.setText(String.valueOf((int) goalPercent[0]));
 
                 System.out.println("steps: " + steps);
                 System.out.println("goalVal: " + goalVal);
                 System.out.println("goalPercent: " + goalPercent[0]);
-            },2000);
+            }, 2000);
         }
     }
 
@@ -913,10 +1009,10 @@
                         JSONObject object = new JSONObject(response);
                         JSONObject array = object.getJSONObject("water");
 
-                        if(array.length() == 0) {
+                        if (array.length() == 0) {
                             glassestv.setText("----------");
                             glassesGoaltv.setText("----------");
-                        }else{
+                        } else {
                             String waterGoalStr = array.getString("goal");
                             String waterConsumedStr = array.getString("drinkConsumed");
 
@@ -936,9 +1032,9 @@
             @Override
             protected Map<String, String> getParams() throws AuthFailureError {
                 Map<String, String> data = new HashMap<>();
-                Date date= new Date();
+                Date date = new Date();
                 data.put("clientuserID", DataFromDatabase.clientuserID);
-                data.put("dateandtime",dateFormat.format(date));
+                data.put("dateandtime", dateFormat.format(date));
                 return data;
             }
         };
@@ -948,12 +1044,11 @@
                 DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
     }
 
-    public void steps_update(String steps , String goal)
-    {
-        int step1=Integer.parseInt(steps);
-        int goal1= Integer.parseInt(goal);
+    public void steps_update(String steps, String goal) {
+        int step1 = Integer.parseInt(steps);
+        int goal1 = Integer.parseInt(goal);
 
-        int stepPercent= (int) (step1 * 100)/goal1;
+        int stepPercent = (int) (step1 * 100) / goal1;
         String stepPercentText = stepPercent + "%";
         stepsProgressPercent.setText(stepPercentText);
         stepsProgressBar.setProgress(stepPercent);
Index: app/src/main/res/layout/fragment_step_reminder.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    tools:context=\".StepReminderFragment\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"80dp\"\r\n        android:alpha=\"0.915\"\r\n        android:background=\"#EA4335\"\r\n        android:gravity=\"center\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/img_back\"\r\n            android:layout_width=\"25dp\"\r\n            android:layout_height=\"25dp\"\r\n            android:layout_gravity=\"center_vertical|start\"\r\n            android:src=\"@drawable/back\"\r\n            tools:ignore=\"ContentDescription,ImageContrastCheck,ImageContrastCheck\"\r\n            tools:layout_editor_absoluteX=\"16dp\"\r\n            tools:layout_editor_absoluteY=\"18dp\"\r\n            android:layout_marginStart=\"24dp\"\r\n            app:tint=\"@color/white\" />\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:fontFamily=\"@font/nats_regular\"\r\n            android:text=\"Reminder\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textSize=\"28sp\"\r\n            tools:ignore=\"TextContrastCheck\"\r\n            tools:layout_editor_absoluteX=\"54dp\" />\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/stepsImage\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"265dp\"\r\n        android:contentDescription=\"stepsImage\"\r\n        android:scaleType=\"centerCrop\"\r\n        android:src=\"@drawable/steps_reminder_bg\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/toolbar\" />\r\n\r\n    <androidx.appcompat.widget.LinearLayoutCompat\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"-53dp\"\r\n        android:background=\"@drawable/reminder_bottom_sheet\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/stepsImage\">\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"35dp\"\r\n            android:fontFamily=\"@font/nats_regular\"\r\n            android:text=\"Set Reminder\"\r\n            android:textColor=\"#555353\"\r\n            android:textSize=\"22sp\" />\r\n\r\n        <androidx.appcompat.widget.LinearLayoutCompat\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"35dp\"\r\n            android:layout_marginTop=\"-50dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/time\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:fontFamily=\"@font/nats_regular\"\r\n                android:text=\"9:20\"\r\n                android:textColor=\"#FF6416\"\r\n                android:textSize=\"42sp\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/timeAmPm\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"5dp\"\r\n                android:fontFamily=\"@font/nats_regular\"\r\n                android:text=\"pm\"\r\n                android:textAllCaps=\"true\"\r\n                android:textColor=\"#FF6416\"\r\n                android:textSize=\"22sp\" />\r\n        </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n        <View\r\n            android:layout_width=\"142dp\"\r\n            android:layout_height=\"2dp\"\r\n            android:background=\"#FF6416\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"80dp\" />\r\n\r\n        <androidx.appcompat.widget.LinearLayoutCompat\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginStart=\"35dp\"\r\n            android:layout_marginEnd=\"35dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <CheckBox\r\n                android:id=\"@+id/checkbox\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:clickable=\"true\"\r\n                android:buttonTint=\"#FF6416\"\r\n                tools:ignore=\"TouchTargetSizeCheck\"\r\n                android:focusable=\"true\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginTop=\"-4dp\"/>\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:fontFamily=\"@font/nats_regular\"\r\n                android:layout_marginStart=\"28dp\"\r\n                android:text=\"Remind me once at\"\r\n                android:textColor=\"#555353\"\r\n                android:textSize=\"16sp\" />\r\n\r\n            <androidx.appcompat.widget.LinearLayoutCompat\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"end\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/remind_once_time\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/nats_regular\"\r\n                    android:text=\"9:20\"\r\n                    android:textColor=\"#FF6416\"\r\n                    android:textSize=\"15sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/remind_once_time_am_pm\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"5dp\"\r\n                    android:fontFamily=\"@font/nats_regular\"\r\n                    android:text=\"pm\"\r\n                    android:textAllCaps=\"true\"\r\n                    android:textColor=\"#FF6416\"\r\n                    android:textSize=\"15sp\" />\r\n            </androidx.appcompat.widget.LinearLayoutCompat>\r\n        </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n    </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n    <androidx.appcompat.widget.AppCompatButton\r\n        android:id=\"@+id/dismiss\"\r\n        android:layout_width=\"138dp\"\r\n        android:layout_height=\"61dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_marginBottom=\"30dp\"\r\n        android:background=\"@drawable/dismiss_btn\"\r\n        android:fontFamily=\"@font/nats_regular\"\r\n        android:text=\"Dismiss\"\r\n        android:textSize=\"20sp\"\r\n        android:backgroundTint=\"#FF6416\"\r\n        android:textColor=\"@color/white\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"/>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_step_reminder.xml b/app/src/main/res/layout/fragment_step_reminder.xml
--- a/app/src/main/res/layout/fragment_step_reminder.xml	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/res/layout/fragment_step_reminder.xml	(date 1698758706937)
@@ -54,6 +54,7 @@
         app:layout_constraintTop_toBottomOf="@id/toolbar" />
 
     <androidx.appcompat.widget.LinearLayoutCompat
+        android:id="@+id/linearLayoutCompat3"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_marginTop="-53dp"
@@ -103,36 +104,36 @@
         <View
             android:layout_width="142dp"
             android:layout_height="2dp"
-            android:background="#FF6416"
             android:layout_gravity="center"
-            android:layout_marginTop="80dp" />
+            android:layout_marginTop="80dp"
+            android:background="#FF6416" />
 
         <androidx.appcompat.widget.LinearLayoutCompat
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_gravity="center"
             android:layout_marginStart="35dp"
-            android:layout_marginEnd="35dp"
             android:layout_marginTop="40dp"
+            android:layout_marginEnd="35dp"
             android:orientation="horizontal">
 
             <CheckBox
                 android:id="@+id/checkbox"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:clickable="true"
+                android:layout_gravity="center"
+                android:layout_marginTop="-4dp"
                 android:buttonTint="#FF6416"
-                tools:ignore="TouchTargetSizeCheck"
+                android:clickable="true"
                 android:focusable="true"
-                android:layout_gravity="center"
-                android:layout_marginTop="-4dp"/>
+                tools:ignore="TouchTargetSizeCheck" />
 
             <TextView
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
+                android:layout_marginStart="28dp"
                 android:layout_weight="1"
                 android:fontFamily="@font/nats_regular"
-                android:layout_marginStart="28dp"
                 android:text="Remind me once at"
                 android:textColor="#555353"
                 android:textSize="16sp" />
@@ -174,13 +175,31 @@
         android:layout_gravity="center"
         android:layout_marginBottom="30dp"
         android:background="@drawable/dismiss_btn"
+        android:backgroundTint="#FF6416"
         android:fontFamily="@font/nats_regular"
         android:text="Dismiss"
+        android:textColor="@color/white"
         android:textSize="20sp"
+        app:layout_constraintStart_toEndOf="@id/set"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <androidx.appcompat.widget.AppCompatButton
+        android:id="@+id/set"
+        android:layout_width="138dp"
+        android:layout_height="61dp"
+        android:layout_gravity="center"
+        android:layout_marginBottom="30dp"
+        android:background="@drawable/dismiss_btn"
         android:backgroundTint="#FF6416"
+        android:fontFamily="@font/nats_regular"
+        android:text="set"
         android:textColor="@color/white"
-        app:layout_constraintStart_toStartOf="parent"
+        android:textSize="20sp"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"/>
+        app:layout_constraintEnd_toStartOf="@+id/dismiss"
+        app:layout_constraintStart_toStartOf="parent" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/layout/fragment_sleep_reminder.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    tools:context=\".SleepReminderFragment\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"56dp\"\r\n        android:alpha=\"0.92\"\r\n        android:background=\"#4518DB\"\r\n        android:gravity=\"center\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/img_back\"\r\n            android:layout_width=\"25dp\"\r\n            android:layout_height=\"25dp\"\r\n            android:layout_gravity=\"center_vertical|start\"\r\n            android:src=\"@drawable/back\"\r\n            tools:ignore=\"ContentDescription,ImageContrastCheck,ImageContrastCheck\"\r\n            tools:layout_editor_absoluteX=\"18dp\"\r\n            tools:layout_editor_absoluteY=\"18dp\"\r\n            app:tint=\"@color/white\" />\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:fontFamily=\"@font/nats_regular\"\r\n            android:text=\"Reminder\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textSize=\"25sp\"\r\n            tools:ignore=\"TextContrastCheck\"\r\n            tools:layout_editor_absoluteX=\"54dp\" />\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/stepsImage\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"265dp\"\r\n        android:contentDescription=\"stepsImage\"\r\n        android:scaleType=\"centerCrop\"\r\n        android:src=\"@drawable/sleep_reminder_bg\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/toolbar\" />\r\n\r\n    <androidx.appcompat.widget.LinearLayoutCompat\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"-55dp\"\r\n        android:background=\"@drawable/reminder_bottom_sheet\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/stepsImage\">\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"35dp\"\r\n            android:fontFamily=\"@font/nats_regular\"\r\n            android:text=\"Sleep Time\"\r\n            android:textColor=\"#555353\"\r\n            android:textSize=\"22sp\" />\r\n\r\n        <androidx.appcompat.widget.LinearLayoutCompat\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"35dp\"\r\n            android:layout_marginTop=\"-50dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/sleep_time\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:fontFamily=\"@font/nats_regular\"\r\n                android:text=\"9:20\"\r\n                android:textColor=\"#7B29FF\"\r\n                android:textSize=\"42sp\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/sleep_time_am_pm\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"5dp\"\r\n                android:fontFamily=\"@font/nats_regular\"\r\n                android:text=\"pm\"\r\n                android:textAllCaps=\"true\"\r\n                android:textColor=\"#7B29FF\"\r\n                android:textSize=\"22sp\" />\r\n        </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n        <View\r\n            android:layout_width=\"142dp\"\r\n            android:layout_height=\"2dp\"\r\n            android:background=\"#7B29FF\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"80dp\" />\r\n\r\n        <androidx.appcompat.widget.LinearLayoutCompat\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginStart=\"35dp\"\r\n            android:layout_marginEnd=\"35dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <CheckBox\r\n                android:id=\"@+id/checkbox\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:clickable=\"true\"\r\n                android:buttonTint=\"#7B29FF\"\r\n                tools:ignore=\"TouchTargetSizeCheck\"\r\n                android:focusable=\"true\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginTop=\"-4dp\"/>\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:layout_gravity=\"start\"\r\n                android:fontFamily=\"@font/nats_regular\"\r\n                android:text=\"Remind me once at\"\r\n                android:textColor=\"#555353\"\r\n                android:textSize=\"16sp\" />\r\n\r\n            <androidx.appcompat.widget.LinearLayoutCompat\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"end\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/remind_once_time\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/nats_regular\"\r\n                    android:text=\"9:20\"\r\n                    android:textColor=\"#7B29FF\"\r\n                    android:textSize=\"15sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/remind_once_time_am_pm\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"5dp\"\r\n                    android:fontFamily=\"@font/nats_regular\"\r\n                    android:text=\"pm\"\r\n                    android:textAllCaps=\"true\"\r\n                    android:textColor=\"#7B29FF\"\r\n                    android:textSize=\"15sp\" />\r\n            </androidx.appcompat.widget.LinearLayoutCompat>\r\n        </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n    </androidx.appcompat.widget.LinearLayoutCompat>\r\n\r\n    <androidx.appcompat.widget.AppCompatButton\r\n        android:id=\"@+id/dismiss\"\r\n        android:layout_width=\"138dp\"\r\n        android:layout_height=\"61dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_marginBottom=\"30dp\"\r\n        android:background=\"@drawable/dismiss_btn\"\r\n        android:fontFamily=\"@font/nats_regular\"\r\n        android:text=\"Dismiss\"\r\n        android:textSize=\"22sp\"\r\n        android:backgroundTint=\"#7B29FF\"\r\n        android:textColor=\"@color/white\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"/>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_sleep_reminder.xml b/app/src/main/res/layout/fragment_sleep_reminder.xml
--- a/app/src/main/res/layout/fragment_sleep_reminder.xml	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/res/layout/fragment_sleep_reminder.xml	(date 1698758546617)
@@ -53,12 +53,14 @@
         app:layout_constraintTop_toBottomOf="@id/toolbar" />
 
     <androidx.appcompat.widget.LinearLayoutCompat
+        android:id="@+id/linearLayoutCompat4"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_marginTop="-55dp"
         android:background="@drawable/reminder_bottom_sheet"
         android:orientation="vertical"
         app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="1.0"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@id/stepsImage">
 
@@ -83,7 +85,7 @@
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:fontFamily="@font/nats_regular"
-                android:text="9:20"
+                android:text="0:00"
                 android:textColor="#7B29FF"
                 android:textSize="42sp" />
 
@@ -102,35 +104,35 @@
         <View
             android:layout_width="142dp"
             android:layout_height="2dp"
-            android:background="#7B29FF"
             android:layout_gravity="center"
-            android:layout_marginTop="80dp" />
+            android:layout_marginTop="80dp"
+            android:background="#7B29FF" />
 
         <androidx.appcompat.widget.LinearLayoutCompat
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_gravity="center"
             android:layout_marginStart="35dp"
-            android:layout_marginEnd="35dp"
             android:layout_marginTop="40dp"
+            android:layout_marginEnd="35dp"
             android:orientation="horizontal">
 
             <CheckBox
                 android:id="@+id/checkbox"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:clickable="true"
+                android:layout_gravity="center"
+                android:layout_marginTop="-4dp"
                 android:buttonTint="#7B29FF"
-                tools:ignore="TouchTargetSizeCheck"
+                android:clickable="true"
                 android:focusable="true"
-                android:layout_gravity="center"
-                android:layout_marginTop="-4dp"/>
+                tools:ignore="TouchTargetSizeCheck" />
 
             <TextView
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:layout_weight="1"
                 android:layout_gravity="start"
+                android:layout_weight="1"
                 android:fontFamily="@font/nats_regular"
                 android:text="Remind me once at"
                 android:textColor="#555353"
@@ -147,7 +149,7 @@
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
                     android:fontFamily="@font/nats_regular"
-                    android:text="9:20"
+                    android:text="0:00"
                     android:textColor="#7B29FF"
                     android:textSize="15sp" />
 
@@ -164,8 +166,8 @@
             </androidx.appcompat.widget.LinearLayoutCompat>
         </androidx.appcompat.widget.LinearLayoutCompat>
 
+
     </androidx.appcompat.widget.LinearLayoutCompat>
-
     <androidx.appcompat.widget.AppCompatButton
         android:id="@+id/dismiss"
         android:layout_width="138dp"
@@ -173,13 +175,31 @@
         android:layout_gravity="center"
         android:layout_marginBottom="30dp"
         android:background="@drawable/dismiss_btn"
+        android:backgroundTint="#7B29FF"
         android:fontFamily="@font/nats_regular"
         android:text="Dismiss"
+        android:textColor="@color/white"
         android:textSize="22sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toEndOf="@+id/set" />
+
+    <androidx.appcompat.widget.AppCompatButton
+        android:id="@+id/set"
+        android:layout_width="138dp"
+        android:layout_height="61dp"
+        android:layout_gravity="center"
+        android:layout_marginBottom="30dp"
+        android:background="@drawable/dismiss_btn"
         android:backgroundTint="#7B29FF"
+        android:fontFamily="@font/nats_regular"
+        android:text="Set"
         android:textColor="@color/white"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"/>
+        android:textSize="22sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/dismiss"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/infits/connectingDietitian.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.cardview.widget.CardView;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.infits.R;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class connectingDietitian extends AppCompatActivity {\r\n    EditText verify_code;\r\n    ProgressBar progressBar;\r\n    TextView name,age_gender,email,mobile,dietitian_details;\r\n    Button discard,connect,verify;\r\n    CardView cardView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_connecting_dietitian);\r\n        verify = findViewById(R.id.button5Connect);\r\n        cardView = findViewById(R.id.card70);\r\n        discard = findViewById(R.id.button3);\r\n        connect = findViewById(R.id.button4);\r\n        verify_code = findViewById(R.id.verify);\r\n        progressBar = findViewById(R.id.connectWithDietitianProgress);\r\n        dietitian_details = findViewById(R.id.textView2);\r\n        name = findViewById(R.id.textViewName);\r\n        age_gender = findViewById(R.id.textView5);\r\n        email = findViewById(R.id.textView3);\r\n        mobile = findViewById(R.id.textView4);\r\n        verify.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                fetchDataFromPhpFile();\r\n            }\r\n        });\r\n        connect.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dietitianUpdate();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void fetchDataFromPhpFile() {\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format(\"%sverify_1.php\",DataFromDatabase.ipConfig),\r\n                response->{\r\n            progressBar.setVisibility(View.INVISIBLE);\r\n                    Toast.makeText(connectingDietitian.this,response,Toast.LENGTH_SHORT).show();\r\n                    try {\r\n                        JSONObject jsonObject = new JSONObject(response);\r\n                        JSONArray jsonArray = new JSONArray(jsonObject.getString(\"data\"));\r\n                        JSONObject jsonObjectData = jsonArray.getJSONObject(0);\r\n                        dietitian_details.setVisibility(View.VISIBLE);\r\n                        cardView.setVisibility(View.VISIBLE);\r\n                        discard.setVisibility(View.VISIBLE);\r\n                        connect.setVisibility(View.VISIBLE);\r\n                        name.setText(jsonObjectData.getString(\"name\"));\r\n                        age_gender.setText(jsonObjectData.getString(\"age\")+\" |\"+jsonObjectData.getString(\"gender\"));\r\n                        email.setText(jsonObjectData.getString(\"email\"));\r\n                        mobile.setText(jsonObjectData.getString(\"mobile\"));\r\n\r\n                    } catch (Exception e) {\r\n                        Toast.makeText(connectingDietitian.this,e.toString(),Toast.LENGTH_SHORT).show();\r\n                    }\r\n                },error->{\r\n            progressBar.setVisibility(View.INVISIBLE);\r\n            Toast.makeText(connectingDietitian.this,error.toString(),Toast.LENGTH_SHORT).show();\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"dietitian_verify_code\",verify_code.getText().toString().trim());\r\n                data.put(\"type\",\"2\");\r\n                return data;\r\n            }\r\n        };\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        Volley.newRequestQueue(connectingDietitian.this).add(stringRequest);\r\n    }\r\n    private void dietitianUpdate(){\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format(\"%sdietitianUpdated_1.php\",DataFromDatabase.ipConfig),\r\n                response->{\r\n                    progressBar.setVisibility(View.INVISIBLE);\r\n\r\n                    try {\r\n                        if (response.equals(\"Updated\")){\r\n                            SharedPreferences loginDetails = getSharedPreferences(\"loginDetails\",MODE_PRIVATE);\r\n                            SharedPreferences.Editor editor = loginDetails.edit();\r\n                            editor.putString(\"verification\",\"1\");\r\n                            editor.apply();\r\n                            DataFromDatabase.verification = \"1\";\r\n                            startActivity(new Intent(connectingDietitian.this,Consultation.class));\r\n                            finish();\r\n                            Toast.makeText(connectingDietitian.this,\"Updated\",Toast.LENGTH_SHORT).show();\r\n                        }else {\r\n                            Toast.makeText(connectingDietitian.this,response,Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                    } catch (Exception e) {\r\n                        Toast.makeText(connectingDietitian.this,e.toString(),Toast.LENGTH_SHORT).show();\r\n                    }\r\n                },error->{\r\n            progressBar.setVisibility(View.INVISIBLE);\r\n            Toast.makeText(connectingDietitian.this,error.toString(),Toast.LENGTH_SHORT).show();\r\n        }){\r\n            @Nullable\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String,String> data = new HashMap<>();\r\n                data.put(\"clientuserID\",DataFromDatabase.clientuserID);\r\n                data.put(\"verification\",\"1\");\r\n                data.put(\"type\",\"2\");\r\n                return data;\r\n            }\r\n        };\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(50000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        Volley.newRequestQueue(connectingDietitian.this).add(stringRequest);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/connectingDietitian.java b/app/src/main/java/com/example/infits/connectingDietitian.java
--- a/app/src/main/java/com/example/infits/connectingDietitian.java	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/java/com/example/infits/connectingDietitian.java	(date 1700160169748)
@@ -4,14 +4,15 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.cardview.widget.CardView;
 
+import android.annotation.SuppressLint;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.util.Log;
 import android.view.View;
-import android.view.WindowManager;
 import android.widget.Button;
 import android.widget.EditText;
+import android.widget.LinearLayout;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -19,28 +20,28 @@
 import com.android.volley.AuthFailureError;
 import com.android.volley.DefaultRetryPolicy;
 import com.android.volley.Request;
-import com.android.volley.RequestQueue;
-import com.android.volley.Response;
-import com.android.volley.VolleyError;
-import com.android.volley.toolbox.JsonObjectRequest;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
-import com.example.infits.R;
 
 import org.json.JSONArray;
-import org.json.JSONException;
 import org.json.JSONObject;
 
 import java.util.HashMap;
 import java.util.Map;
 
 public class connectingDietitian extends AppCompatActivity {
+
+    String verificationUrl ="https://infits.in/androidApi/verify.php";
+    String connectUrl="https://infits.in/androidApi/dietitianUpdated.php";
     EditText verify_code;
     ProgressBar progressBar;
-    TextView name,age_gender,email,mobile,dietitian_details;
+    TextView name,age_gender,email,mobile,dietitian_details,txtEnterCode;
     Button discard,connect,verify;
-    CardView cardView;
+    CardView cardView,cardView3;
+    LinearLayout linearLayout;
+    Button button5connect;
 
+    @SuppressLint("MissingInflatedId")
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -51,11 +52,15 @@
         connect = findViewById(R.id.button4);
         verify_code = findViewById(R.id.verify);
         progressBar = findViewById(R.id.connectWithDietitianProgress);
+        linearLayout=findViewById(R.id.linearLayout2);
         dietitian_details = findViewById(R.id.textView2);
         name = findViewById(R.id.textViewName);
         age_gender = findViewById(R.id.textView5);
         email = findViewById(R.id.textView3);
         mobile = findViewById(R.id.textView4);
+        txtEnterCode=findViewById(R.id.txtCode);
+        cardView3=findViewById(R.id.cardView3);
+        button5connect=findViewById(R.id.button5Connect);
         verify.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -68,15 +73,39 @@
                 dietitianUpdate();
             }
         });
+
+        discard.setOnClickListener(new View.OnClickListener(){
+            @Override
+            public void onClick(View view){
+                setVisibilty();
+
+            }
+        });
+    }
+
+    private void setVisibilty() {
+        linearLayout.setVisibility(View.VISIBLE);
+        cardView3.setVisibility(View.VISIBLE);
+        txtEnterCode.setVisibility(View.VISIBLE);
+        button5connect.setVisibility(View.VISIBLE);
+        dietitian_details.setVisibility(View.INVISIBLE);
+        cardView.setVisibility(View.INVISIBLE);
+        discard.setVisibility(View.INVISIBLE);
+        connect.setVisibility(View.INVISIBLE);
+        verify_code.setText(null);
     }
 
     private void fetchDataFromPhpFile() {
         progressBar.setVisibility(View.VISIBLE);
-        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format("%sverify_1.php",DataFromDatabase.ipConfig),
+        StringRequest stringRequest = new StringRequest(Request.Method.POST, verificationUrl,
                 response->{
             progressBar.setVisibility(View.INVISIBLE);
                     Toast.makeText(connectingDietitian.this,response,Toast.LENGTH_SHORT).show();
                     try {
+                        linearLayout.setVisibility(View.GONE);
+                        txtEnterCode.setVisibility(View.GONE);
+                        cardView3.setVisibility(View.GONE);
+                        button5connect.setVisibility(View.GONE);
                         JSONObject jsonObject = new JSONObject(response);
                         JSONArray jsonArray = new JSONArray(jsonObject.getString("data"));
                         JSONObject jsonObjectData = jsonArray.getJSONObject(0);
@@ -91,6 +120,7 @@
 
                     } catch (Exception e) {
                         Toast.makeText(connectingDietitian.this,e.toString(),Toast.LENGTH_SHORT).show();
+                        Log.d("connectingdietitian",e.getLocalizedMessage().toString());
                     }
                 },error->{
             progressBar.setVisibility(View.INVISIBLE);
@@ -112,7 +142,7 @@
     }
     private void dietitianUpdate(){
         progressBar.setVisibility(View.VISIBLE);
-        StringRequest stringRequest = new StringRequest(Request.Method.POST,String.format("%sdietitianUpdated_1.php",DataFromDatabase.ipConfig),
+        StringRequest stringRequest = new StringRequest(Request.Method.POST,connectUrl,
                 response->{
                     progressBar.setVisibility(View.INVISIBLE);
 
Index: app/src/main/res/layout/activity_connecting_dietitian.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".connectingDietitian\">\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/connectWithDietitianProgress\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        android:visibility=\"gone\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n    <LinearLayout\r\n        android:id=\"@+id/linearLayout2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"204dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/button5Connect\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.0\">\r\n\r\n        <ImageButton\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:backgroundTint=\"#00FFFFFF\"\r\n            android:src=\"@drawable/back\"\r\n            tools:ignore=\"SpeakableTextPresentCheck\">\r\n\r\n        </ImageButton>\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginRight=\"30dp\"\r\n            android:gravity=\"center_horizontal\"\r\n            android:text=\"CONNECT WITH DIETITIAN\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"30sp\">\r\n\r\n        </TextView>\r\n\r\n    </LinearLayout>\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"58dp\"\r\n        android:textAlignment=\"center\"\r\n        android:text=\"Enter the verification code to connect with the dietitian\"\r\n        android:textColor=\"#000000\"\r\n        android:textSize=\"25sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\"\r\n        app:layout_constraintVertical_bias=\"0.081\" />\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:id=\"@+id/cardView3\"\r\n        android:layout_width=\"320dp\"\r\n        android:layout_height=\"51dp\"\r\n        android:background=\"@color/white\"\r\n        android:elevation=\"10dp\"\r\n        android:outlineAmbientShadowColor=\"@color/black\"\r\n        app:cardCornerRadius=\"10dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView\"\r\n        app:layout_constraintVertical_bias=\"0.1\"\r\n        tools:ignore=\"MissingConstraints\">\r\n\r\n        <EditText\r\n            android:id=\"@+id/verify\"\r\n            android:layout_width=\"320dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:background=\"@drawable/otp_tab\"\r\n            android:elevation=\"10dp\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"center\"\r\n            android:hint=\"Enter verification code here...\"\r\n            android:inputType=\"textPersonName\"\r\n            android:text=\"\"\r\n            android:textColorHint=\"#D7D7D7\"\r\n            tools:ignore=\"MissingConstraints\" />\r\n    </androidx.cardview.widget.CardView>\r\n\r\n\r\n    <androidx.appcompat.widget.AppCompatButton\r\n        android:id=\"@+id/button5Connect\"\r\n        android:layout_width=\"150dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"32dp\"\r\n        android:background=\"@drawable/round_btn\"\r\n        android:text=\"Verify\"\r\n        android:textSize=\"10sp\"\r\n        android:textColor=\"@color/white\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.498\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/cardView3\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView2\"\r\n        android:visibility=\"gone\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"40dp\"\r\n        android:layout_marginTop=\"12dp\"\r\n        android:text=\"Dietitian Details\"\r\n        android:textColor=\"#000000\"\r\n        android:textSize=\"25sp\"\r\n\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/button5Connect\" />\r\n\r\n    <androidx.cardview.widget.CardView\r\n\r\n        android:id=\"@+id/card70\"\r\n        android:visibility=\"gone\"\r\n        android:layout_width=\"330dp\"\r\n        android:layout_height=\"170dp\"\r\n        android:background=\"@color/white\"\r\n        android:elevation=\"10dp\"\r\n        android:outlineAmbientShadowColor=\"@color/black\"\r\n        app:cardCornerRadius=\"15dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.493\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.85\"\r\n        tools:ignore=\"MissingConstraints\">\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\"\r\n            android:weightSum=\"5\">\r\n\r\n            <de.hdodenhof.circleimageview.CircleImageView\r\n                android:layout_gravity=\"center\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"0dp\"\r\n                android:layout_weight=\"1.5\"\r\n                android:src=\"@drawable/profilepic\"/>\r\n            <TextView\r\n                android:id=\"@+id/textViewName\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:singleLine=\"true\"\r\n                android:layout_height=\"0dp\"\r\n                android:layout_weight=\"1\"\r\n                android:layout_gravity=\"center\"\r\n                android:hint=\"\"\r\n                android:text=\"John Wayne\"\r\n                android:textColor=\"#000000\"\r\n                android:textSize=\"20sp\"/>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"0dp\"\r\n                android:orientation=\"horizontal\"\r\n                android:layout_weight=\"1\"\r\n                android:weightSum=\"2\">\r\n                <TextView\r\n                    android:id=\"@+id/textView5\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"0.7\"\r\n                    android:gravity=\"center\"\r\n                    android:singleLine=\"true\"\r\n                    android:text=\"31|Male\"\r\n                    android:textColor=\"#78C3FF\"\r\n                    android:textSize=\"16sp\"\r\n                    />\r\n                <TextView\r\n                    android:id=\"@+id/textView3\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"1.3\"\r\n                    android:gravity=\"center\"\r\n                    android:singleLine=\"true\"\r\n                    android:text=\"Professional Dietitian\"\r\n                    android:textColor=\"#78C3FF\"\r\n                    android:textSize=\"16sp\"\r\n                    />\r\n\r\n            </LinearLayout>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"0dp\"\r\n                android:orientation=\"horizontal\"\r\n                android:layout_weight=\"1\"\r\n                android:weightSum=\"2\">\r\n                <TextView\r\n                    android:id=\"@+id/textView4\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"1\"\r\n                    android:gravity=\"center\"\r\n                    android:drawableLeft=\"@drawable/baseline_email_24_1\"\r\n                    android:singleLine=\"true\"\r\n                    android:text=\"john@gmail.com\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    />\r\n                <TextView\r\n                    android:id=\"@+id/textViewMobile\"\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"1\"\r\n                    android:gravity=\"center\"\r\n                    android:singleLine=\"true\"\r\n                    android:text=\"9876543210\"\r\n                    android:drawableLeft=\"@drawable/baseline_local_phone_24_1\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"16sp\"\r\n                    />\r\n\r\n            </LinearLayout>\r\n        </LinearLayout>\r\n\r\n\r\n\r\n\r\n    </androidx.cardview.widget.CardView>\r\n\r\n    <TextView\r\n        android:id=\"@+id/errorTextView\"\r\n        android:visibility=\"gone\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:textColor=\"#FF0000\"\r\n        android:textSize=\"16sp\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/card70\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/card70\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/card70\" />\r\n\r\n\r\n    <androidx.appcompat.widget.AppCompatButton\r\n        android:id=\"@+id/button3\"\r\n        android:layout_width=\"100dp\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        android:background=\"@drawable/round_btn_2\"\r\n        android:elevation=\"5dp\"\r\n        android:visibility=\"gone\"\r\n        android:text=\"Discard\"\r\n        android:textColor=\"#FF0000\"\r\n        android:textSize=\"13sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/button4\"\r\n        app:layout_constraintHorizontal_bias=\"0.692\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        tools:ignore=\"TouchTargetSizeCheck\" />\r\n\r\n    <androidx.appcompat.widget.AppCompatButton\r\n        android:id=\"@+id/button4\"\r\n        android:layout_width=\"100dp\"\r\n        android:visibility=\"gone\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        android:background=\"@drawable/round_btn\"\r\n        android:elevation=\"5dp\"\r\n        android:text=\"Connect\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"13sp\"\r\n\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.79\"\r\n        app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_connecting_dietitian.xml b/app/src/main/res/layout/activity_connecting_dietitian.xml
--- a/app/src/main/res/layout/activity_connecting_dietitian.xml	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/res/layout/activity_connecting_dietitian.xml	(date 1700159070850)
@@ -52,7 +52,7 @@
     </LinearLayout>
 
     <TextView
-        android:id="@+id/textView"
+        android:id="@+id/txtCode"
         android:layout_width="match_parent"
         android:layout_height="58dp"
         android:textAlignment="center"
@@ -77,7 +77,7 @@
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/textView"
+        app:layout_constraintTop_toBottomOf="@+id/txtCode"
         app:layout_constraintVertical_bias="0.1"
         tools:ignore="MissingConstraints">
 
Index: app/src/main/java/com/example/infits/AdapterForPastActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infits;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.recyclerview.widget.RecyclerView.Adapter;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class AdapterForPastActivity extends RecyclerView.Adapter<AdapterForPastActivity.PastVH> {\r\n\r\n    Context context;\r\n    ArrayList<String> dates = new ArrayList<>();\r\n    ArrayList<String> datas = new ArrayList<>();\r\n    int color;\r\n\r\n    AdapterForPastActivity(Context context, ArrayList<String> dates, ArrayList<String> datas, int color){\r\n        this.context = context;\r\n        this.datas = datas;\r\n        this.dates = dates;\r\n        this.color = color;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public PastVH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        LayoutInflater la = LayoutInflater.from(context);\r\n        View view = la.inflate(R.layout.past_activity_layout,parent,false);\r\n\r\n        return new PastVH(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull PastVH holder, int position) {\r\n                holder.steps.setText(datas.get(position));\r\n                holder.date.setText(dates.get(position));\r\n                holder.back.setCardBackgroundColor(color);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return datas.size();\r\n    }\r\n\r\n    public class PastVH extends RecyclerView.ViewHolder {\r\n        TextView steps,date;\r\n        CardView back;\r\n        public PastVH(@NonNull View itemView) {\r\n            super(itemView);\r\n            steps = itemView.findViewById(R.id.steps_count_pa);\r\n            date = itemView.findViewById(R.id.date_pa);\r\n            back = itemView.findViewById(R.id.back);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/infits/AdapterForPastActivity.java b/app/src/main/java/com/example/infits/AdapterForPastActivity.java
--- a/app/src/main/java/com/example/infits/AdapterForPastActivity.java	(revision f281b2292e146eef26250cb8079b4df6486bb3b5)
+++ b/app/src/main/java/com/example/infits/AdapterForPastActivity.java	(date 1699091903923)
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.graphics.Color;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -12,7 +13,12 @@
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.recyclerview.widget.RecyclerView.Adapter;
 
+import java.text.SimpleDateFormat;
+import java.time.LocalDate;
+import java.time.format.DateTimeFormatter;
 import java.util.ArrayList;
+import java.util.Date;
+import java.util.Locale;
 
 public class AdapterForPastActivity extends RecyclerView.Adapter<AdapterForPastActivity.PastVH> {
 
@@ -28,6 +34,9 @@
         this.color = color;
     }
 
+    public AdapterForPastActivity() {
+    }
+
     @NonNull
     @Override
     public PastVH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
@@ -50,6 +59,10 @@
         return datas.size();
     }
 
+
+
+
+
     public class PastVH extends RecyclerView.ViewHolder {
         TextView steps,date;
         CardView back;
